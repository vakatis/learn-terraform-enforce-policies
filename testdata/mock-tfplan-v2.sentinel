terraform_version = "1.13.3"

planned_values = {
	"outputs": {
		"public_dns_name": {
			"name":      "public_dns_name",
			"sensitive": false,
			"value":     "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
		},
	},
	"resources": {
		"aws_ebs_volume.unencrypted": {
			"address":        "aws_ebs_volume.unencrypted",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "unencrypted",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_ebs_volume",
			"values": {
				"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
				"availability_zone":    "us-west-1b",
				"encrypted":            true,
				"id":                   "vol-0662fddf4e25ce498",
				"iops":                 100,
				"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
				"multi_attach_enabled": false,
				"outpost_arn":          "",
				"size":                 8,
				"snapshot_id":          "",
				"tags":                 {},
				"type":                 "gp2",
			},
		},
		"module.app_security_group.module.sg.aws_security_group.this_name_prefix[0]": {
			"address":        "module.app_security_group.module.sg.aws_security_group.this_name_prefix[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "this_name_prefix",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-06326fc6a0a3eb4b8",
				"description": "Security group for web-servers with HTTP ports open within VPC",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "All protocols",
						"from_port":   0,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "-1",
						"security_groups": [],
						"self":            false,
						"to_port":         0,
					},
				],
				"id": "sg-06326fc6a0a3eb4b8",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "HTTP",
						"from_port":        8080,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8080,
					},
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "JMX",
						"from_port":        1099,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1099,
					},
					{
						"cidr_blocks":      [],
						"description":      "Ingress Rule",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             true,
						"to_port":          0,
					},
				],
				"name":                   "web-sg-project-alpha-dev-20251002133440267500000001",
				"name_prefix":            "web-sg-project-alpha-dev-",
				"owner_id":               "737366052617",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name":        "web-sg-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"module.app_security_group.module.sg.aws_security_group_rule.egress_rules[0]": {
			"address":        "module.app_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "egress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description": "All protocols",
				"from_port":   0,
				"id":          "sgrule-1165095938",
				"ipv6_cidr_blocks": [
					"::/0",
				],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  0,
				"type":                     "egress",
			},
		},
		"module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[0]": {
			"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "HTTP",
				"from_port":         80,
				"id":                "sgrule-1527321307",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  80,
				"type":                     "ingress",
			},
		},
		"module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[1]": {
			"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "HTTP",
				"from_port":         8080,
				"id":                "sgrule-879057280",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  8080,
				"type":                     "ingress",
			},
		},
		"module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[2]": {
			"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "HTTPS",
				"from_port":         443,
				"id":                "sgrule-798564216",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  443,
				"type":                     "ingress",
			},
		},
		"module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[3]": {
			"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          3,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "JMX",
				"from_port":         1099,
				"id":                "sgrule-2319081979",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  1099,
				"type":                     "ingress",
			},
		},
		"module.app_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]": {
			"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_with_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":       [],
				"description":       "Ingress Rule",
				"from_port":         0,
				"id":                "sgrule-742313647",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              true,
				"source_security_group_id": "sg-06326fc6a0a3eb4b8",
				"to_port":                  0,
				"type":                     "ingress",
			},
		},
		"module.ec2_instances.aws_instance.app[0]": {
			"address":        "module.ec2_instances.aws_instance.app[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.ec2_instances",
			"name":           "app",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_instance",
			"values": {
				"ami": "ami-0fb832921029d9dfc",
				"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-03b9dd825ffb52b7c",
				"associate_public_ip_address": false,
				"availability_zone":           "us-west-1b",
				"cpu_core_count":              1,
				"cpu_threads_per_core":        1,
				"credit_specification": [
					{
						"cpu_credits": "standard",
					},
				],
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device": [],
				"get_password_data":      false,
				"hibernation":            false,
				"host_id":                null,
				"iam_instance_profile":   "",
				"id": "i-03b9dd825ffb52b7c",
				"instance_initiated_shutdown_behavior": null,
				"instance_state":                       "running",
				"instance_type":                        "t2.micro",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_put_response_hop_limit": 1,
						"http_tokens":                 "optional",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"primary_network_interface_id": "eni-0acf125024e8f3a16",
				"private_dns":                  "ip-10-0-101-172.us-west-1.compute.internal",
				"private_ip":                   "10.0.101.172",
				"public_dns":                   "",
				"public_ip":                    "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  100,
						"kms_key_id":            "",
						"throughput":            0,
						"volume_id":             "vol-0d5570e1035e77acf",
						"volume_size":           8,
						"volume_type":           "gp2",
					},
				],
				"secondary_private_ips": [],
				"security_groups":       [],
				"source_dest_check":     true,
				"subnet_id":             "subnet-0b2bdf40cec3c055c",
				"tags": {
					"environment": "development",
					"project":     "project-alpha",
				},
				"tenancy":          "default",
				"timeouts":         null,
				"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
				"user_data_base64": null,
				"volume_tags":      {},
				"vpc_security_group_ids": [
					"sg-06326fc6a0a3eb4b8",
				],
			},
		},
		"module.ec2_instances.aws_instance.app[1]": {
			"address":        "module.ec2_instances.aws_instance.app[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.ec2_instances",
			"name":           "app",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_instance",
			"values": {
				"ami": "ami-0fb832921029d9dfc",
				"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-016765c89b917b799",
				"associate_public_ip_address": false,
				"availability_zone":           "us-west-1c",
				"cpu_core_count":              1,
				"cpu_threads_per_core":        1,
				"credit_specification": [
					{
						"cpu_credits": "standard",
					},
				],
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device": [],
				"get_password_data":      false,
				"hibernation":            false,
				"host_id":                null,
				"iam_instance_profile":   "",
				"id": "i-016765c89b917b799",
				"instance_initiated_shutdown_behavior": null,
				"instance_state":                       "running",
				"instance_type":                        "t2.micro",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_put_response_hop_limit": 1,
						"http_tokens":                 "optional",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"primary_network_interface_id": "eni-0109abce718700404",
				"private_dns":                  "ip-10-0-102-117.us-west-1.compute.internal",
				"private_ip":                   "10.0.102.117",
				"public_dns":                   "",
				"public_ip":                    "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  100,
						"kms_key_id":            "",
						"throughput":            0,
						"volume_id":             "vol-0e35b38712a49cde8",
						"volume_size":           8,
						"volume_type":           "gp2",
					},
				],
				"secondary_private_ips": [],
				"security_groups":       [],
				"source_dest_check":     true,
				"subnet_id":             "subnet-0ea934f57d112a269",
				"tags": {
					"environment": "development",
					"project":     "project-alpha",
				},
				"tenancy":          "default",
				"timeouts":         null,
				"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
				"user_data_base64": null,
				"volume_tags":      {},
				"vpc_security_group_ids": [
					"sg-06326fc6a0a3eb4b8",
				],
			},
		},
		"module.elb_http.module.elb.aws_elb.this[0]": {
			"address":        "module.elb_http.module.elb.aws_elb.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.elb_http.module.elb",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_elb",
			"values": {
				"access_logs": [],
				"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
				"availability_zones": [
					"us-west-1b",
					"us-west-1c",
				],
				"connection_draining":         false,
				"connection_draining_timeout": 300,
				"cross_zone_load_balancing":   true,
				"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
				"health_check": [
					{
						"healthy_threshold":   3,
						"interval":            10,
						"target":              "HTTP:80/index.html",
						"timeout":             5,
						"unhealthy_threshold": 10,
					},
				],
				"id":           "lb-erU-project-alpha-dev",
				"idle_timeout": 60,
				"instances": [
					"i-016765c89b917b799",
					"i-03b9dd825ffb52b7c",
				],
				"internal": false,
				"listener": [
					{
						"instance_port":      80,
						"instance_protocol":  "http",
						"lb_port":            80,
						"lb_protocol":        "http",
						"ssl_certificate_id": "",
					},
				],
				"name":        "lb-erU-project-alpha-dev",
				"name_prefix": null,
				"security_groups": [
					"sg-040d291a0f6288c7d",
				],
				"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
				"source_security_group_id": "sg-040d291a0f6288c7d",
				"subnets": [
					"subnet-0668e14c98636a8ec",
					"subnet-0b017cf7e24e4b3ff",
				],
				"tags": {
					"Name":        "lb-erU-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"zone_id": "Z368ELLRRE2KJ0",
			},
		},
		"module.elb_http.module.elb_attachment.aws_elb_attachment.this[0]": {
			"address":        "module.elb_http.module.elb_attachment.aws_elb_attachment.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.elb_http.module.elb_attachment",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_elb_attachment",
			"values": {
				"elb":      "lb-erU-project-alpha-dev",
				"id":       "lb-erU-project-alpha-dev-20251002134205104200000003",
				"instance": "i-03b9dd825ffb52b7c",
			},
		},
		"module.elb_http.module.elb_attachment.aws_elb_attachment.this[1]": {
			"address":        "module.elb_http.module.elb_attachment.aws_elb_attachment.this[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.elb_http.module.elb_attachment",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_elb_attachment",
			"values": {
				"elb":      "lb-erU-project-alpha-dev",
				"id":       "lb-erU-project-alpha-dev-20251002134205085000000002",
				"instance": "i-016765c89b917b799",
			},
		},
		"module.lb_security_group.module.sg.aws_security_group.this_name_prefix[0]": {
			"address":        "module.lb_security_group.module.sg.aws_security_group.this_name_prefix[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "this_name_prefix",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-040d291a0f6288c7d",
				"description": "Security group for load balancer with HTTP ports open within VPC",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "All protocols",
						"from_port":   0,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "-1",
						"security_groups": [],
						"self":            false,
						"to_port":         0,
					},
				],
				"id": "sg-040d291a0f6288c7d",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        8080,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8080,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "JMX",
						"from_port":        1099,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1099,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "SSH restricted to internal network",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
					{
						"cidr_blocks":      [],
						"description":      "Ingress Rule",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             true,
						"to_port":          0,
					},
				],
				"name":                   "lb-sg-project-alpha-dev-20251002133440267800000002",
				"name_prefix":            "lb-sg-project-alpha-dev-",
				"owner_id":               "737366052617",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name":        "lb-sg-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"module.lb_security_group.module.sg.aws_security_group_rule.egress_rules[0]": {
			"address":        "module.lb_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "egress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description": "All protocols",
				"from_port":   0,
				"id":          "sgrule-34138926",
				"ipv6_cidr_blocks": [
					"::/0",
				],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  0,
				"type":                     "egress",
			},
		},
		"module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[0]": {
			"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "HTTP",
				"from_port":         80,
				"id":                "sgrule-4083687304",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  80,
				"type":                     "ingress",
			},
		},
		"module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[1]": {
			"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "HTTP",
				"from_port":         8080,
				"id":                "sgrule-26869172",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  8080,
				"type":                     "ingress",
			},
		},
		"module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[2]": {
			"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "HTTPS",
				"from_port":         443,
				"id":                "sgrule-1771646953",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  443,
				"type":                     "ingress",
			},
		},
		"module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[3]": {
			"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          3,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "JMX",
				"from_port":         1099,
				"id":                "sgrule-1125713004",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  1099,
				"type":                     "ingress",
			},
		},
		"module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks[0]": {
			"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_with_cidr_blocks",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "SSH restricted to internal network",
				"from_port":         22,
				"id":                "sgrule-2130763446",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  22,
				"type":                     "ingress",
			},
		},
		"module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]": {
			"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_with_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":       [],
				"description":       "Ingress Rule",
				"from_port":         0,
				"id":                "sgrule-3912070980",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              true,
				"source_security_group_id": "sg-040d291a0f6288c7d",
				"to_port":                  0,
				"type":                     "ingress",
			},
		},
		"module.vpc.aws_eip.nat[0]": {
			"address":        "module.vpc.aws_eip.nat[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "nat",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_eip",
			"values": {
				"allocation_id":             null,
				"associate_with_private_ip": null,
				"association_id":            "eipassoc-0da9417e63565d7c2",
				"carrier_ip":                "",
				"customer_owned_ip":         "",
				"customer_owned_ipv4_pool":  "",
				"domain":                    "vpc",
				"id":                        "eipalloc-0eb190a7f42b983b2",
				"instance":                  "",
				"network_border_group":      "us-west-1",
				"network_interface":         "eni-057bc87bc25465691",
				"private_dns":               "ip-10-0-1-91.us-west-1.compute.internal",
				"private_ip":                "10.0.1.91",
				"public_dns":                "ec2-54-177-111-86.us-west-1.compute.amazonaws.com",
				"public_ip":                 "54.177.111.86",
				"public_ipv4_pool":          "amazon",
				"tags": {
					"Name":        "-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc":      true,
			},
		},
		"module.vpc.aws_eip.nat[1]": {
			"address":        "module.vpc.aws_eip.nat[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "nat",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_eip",
			"values": {
				"allocation_id":             null,
				"associate_with_private_ip": null,
				"association_id":            "eipassoc-0698d8f20c5722dff",
				"carrier_ip":                "",
				"customer_owned_ip":         "",
				"customer_owned_ipv4_pool":  "",
				"domain":                    "vpc",
				"id":                        "eipalloc-0f772743cb6efe71f",
				"instance":                  "",
				"network_border_group":      "us-west-1",
				"network_interface":         "eni-06a8c1c0f5f0a0d5c",
				"private_dns":               "ip-10-0-2-46.us-west-1.compute.internal",
				"private_ip":                "10.0.2.46",
				"public_dns":                "ec2-50-18-226-163.us-west-1.compute.amazonaws.com",
				"public_ip":                 "50.18.226.163",
				"public_ipv4_pool":          "amazon",
				"tags": {
					"Name":        "-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc":      true,
			},
		},
		"module.vpc.aws_internet_gateway.this[0]": {
			"address":        "module.vpc.aws_internet_gateway.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_internet_gateway",
			"values": {
				"arn":      "arn:aws:ec2:us-west-1:737366052617:internet-gateway/igw-0a87232c769e282d2",
				"id":       "igw-0a87232c769e282d2",
				"owner_id": "737366052617",
				"tags": {
					"Name":        "",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
		},
		"module.vpc.aws_nat_gateway.this[0]": {
			"address":        "module.vpc.aws_nat_gateway.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_nat_gateway",
			"values": {
				"allocation_id": "eipalloc-0eb190a7f42b983b2",
				"id":            "nat-0baadee1e3e44558c",
				"network_interface_id": "eni-057bc87bc25465691",
				"private_ip":           "10.0.1.91",
				"public_ip":            "54.177.111.86",
				"subnet_id":            "subnet-0b017cf7e24e4b3ff",
				"tags": {
					"Name":        "-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
			},
		},
		"module.vpc.aws_nat_gateway.this[1]": {
			"address":        "module.vpc.aws_nat_gateway.this[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_nat_gateway",
			"values": {
				"allocation_id": "eipalloc-0f772743cb6efe71f",
				"id":            "nat-043b0a2533e8c970d",
				"network_interface_id": "eni-06a8c1c0f5f0a0d5c",
				"private_ip":           "10.0.2.46",
				"public_ip":            "50.18.226.163",
				"subnet_id":            "subnet-0668e14c98636a8ec",
				"tags": {
					"Name":        "-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
			},
		},
		"module.vpc.aws_route.private_nat_gateway[0]": {
			"address":        "module.vpc.aws_route.private_nat_gateway[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private_nat_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route",
			"values": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "",
				"id":                          "r-rtb-08929b85b4ee0c9d21080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "nat-0baadee1e3e44558c",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-08929b85b4ee0c9d2",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": "",
			},
		},
		"module.vpc.aws_route.private_nat_gateway[1]": {
			"address":        "module.vpc.aws_route.private_nat_gateway[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private_nat_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route",
			"values": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "",
				"id":                          "r-rtb-053e1dd125b4a5e801080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "nat-043b0a2533e8c970d",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-053e1dd125b4a5e80",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": "",
			},
		},
		"module.vpc.aws_route.public_internet_gateway[0]": {
			"address":        "module.vpc.aws_route.public_internet_gateway[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route",
			"values": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "igw-0a87232c769e282d2",
				"id":                          "r-rtb-034f35c1eccf9a1941080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-034f35c1eccf9a194",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": "",
			},
		},
		"module.vpc.aws_route_table.private[0]": {
			"address":        "module.vpc.aws_route_table.private[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"id":               "rtb-08929b85b4ee0c9d2",
				"owner_id":         "737366052617",
				"propagating_vgws": [],
				"route": [
					{
						"cidr_block":                "0.0.0.0/0",
						"egress_only_gateway_id":    "",
						"gateway_id":                "",
						"instance_id":               "",
						"ipv6_cidr_block":           "",
						"local_gateway_id":          "",
						"nat_gateway_id":            "nat-0baadee1e3e44558c",
						"network_interface_id":      "",
						"transit_gateway_id":        "",
						"vpc_endpoint_id":           "",
						"vpc_peering_connection_id": "",
					},
				],
				"tags": {
					"Name":        "-private-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
		},
		"module.vpc.aws_route_table.private[1]": {
			"address":        "module.vpc.aws_route_table.private[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"id":               "rtb-053e1dd125b4a5e80",
				"owner_id":         "737366052617",
				"propagating_vgws": [],
				"route": [
					{
						"cidr_block":                "0.0.0.0/0",
						"egress_only_gateway_id":    "",
						"gateway_id":                "",
						"instance_id":               "",
						"ipv6_cidr_block":           "",
						"local_gateway_id":          "",
						"nat_gateway_id":            "nat-043b0a2533e8c970d",
						"network_interface_id":      "",
						"transit_gateway_id":        "",
						"vpc_endpoint_id":           "",
						"vpc_peering_connection_id": "",
					},
				],
				"tags": {
					"Name":        "-private-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
		},
		"module.vpc.aws_route_table.public[0]": {
			"address":        "module.vpc.aws_route_table.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"id":               "rtb-034f35c1eccf9a194",
				"owner_id":         "737366052617",
				"propagating_vgws": [],
				"route": [
					{
						"cidr_block":                "0.0.0.0/0",
						"egress_only_gateway_id":    "",
						"gateway_id":                "igw-0a87232c769e282d2",
						"instance_id":               "",
						"ipv6_cidr_block":           "",
						"local_gateway_id":          "",
						"nat_gateway_id":            "",
						"network_interface_id":      "",
						"transit_gateway_id":        "",
						"vpc_endpoint_id":           "",
						"vpc_peering_connection_id": "",
					},
				],
				"tags": {
					"Name":        "-public",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
		},
		"module.vpc.aws_route_table_association.private[0]": {
			"address":        "module.vpc.aws_route_table_association.private[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id":     null,
				"id":             "rtbassoc-0142f84975d0a2c22",
				"route_table_id": "rtb-08929b85b4ee0c9d2",
				"subnet_id":      "subnet-0b2bdf40cec3c055c",
			},
		},
		"module.vpc.aws_route_table_association.private[1]": {
			"address":        "module.vpc.aws_route_table_association.private[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id":     null,
				"id":             "rtbassoc-012ea9d78aaef9617",
				"route_table_id": "rtb-053e1dd125b4a5e80",
				"subnet_id":      "subnet-0ea934f57d112a269",
			},
		},
		"module.vpc.aws_route_table_association.public[0]": {
			"address":        "module.vpc.aws_route_table_association.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id":     null,
				"id":             "rtbassoc-0f3fadf9fd2eca79a",
				"route_table_id": "rtb-034f35c1eccf9a194",
				"subnet_id":      "subnet-0b017cf7e24e4b3ff",
			},
		},
		"module.vpc.aws_route_table_association.public[1]": {
			"address":        "module.vpc.aws_route_table_association.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id":     null,
				"id":             "rtbassoc-05f3c585af67fa670",
				"route_table_id": "rtb-034f35c1eccf9a194",
				"subnet_id":      "subnet-0668e14c98636a8ec",
			},
		},
		"module.vpc.aws_subnet.private[0]": {
			"address":        "module.vpc.aws_subnet.private[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b2bdf40cec3c055c",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1b",
				"availability_zone_id":            "usw1-az3",
				"cidr_block":                      "10.0.101.0/24",
				"id":                              "subnet-0b2bdf40cec3c055c",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         false,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-private-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"module.vpc.aws_subnet.private[1]": {
			"address":        "module.vpc.aws_subnet.private[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0ea934f57d112a269",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1c",
				"availability_zone_id":            "usw1-az1",
				"cidr_block":                      "10.0.102.0/24",
				"id":                              "subnet-0ea934f57d112a269",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         false,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-private-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"module.vpc.aws_subnet.public[0]": {
			"address":        "module.vpc.aws_subnet.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b017cf7e24e4b3ff",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1b",
				"availability_zone_id":            "usw1-az3",
				"cidr_block":                      "10.0.1.0/24",
				"id":                              "subnet-0b017cf7e24e4b3ff",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-public-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"module.vpc.aws_subnet.public[1]": {
			"address":        "module.vpc.aws_subnet.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0668e14c98636a8ec",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1c",
				"availability_zone_id":            "usw1-az1",
				"cidr_block":                      "10.0.2.0/24",
				"id":                              "subnet-0668e14c98636a8ec",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-public-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"module.vpc.aws_vpc.this[0]": {
			"address":        "module.vpc.aws_vpc.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_vpc",
			"values": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:vpc/vpc-0803d92b938b67530",
				"assign_generated_ipv6_cidr_block": false,
				"cidr_block":                       "10.0.0.0/16",
				"default_network_acl_id":           "acl-0e534a87fbb224833",
				"default_route_table_id":           "rtb-05b1175e8ba5f76d3",
				"default_security_group_id":        "sg-0d0145d916e0d471a",
				"dhcp_options_id":                  "dopt-934476f4",
				"enable_classiclink":               false,
				"enable_classiclink_dns_support":   false,
				"enable_dns_hostnames":             false,
				"enable_dns_support":               true,
				"id":                               "vpc-0803d92b938b67530",
				"instance_tenancy":                 "default",
				"ipv6_association_id":              "",
				"ipv6_cidr_block":                  "",
				"main_route_table_id":              "rtb-05b1175e8ba5f76d3",
				"owner_id":                         "737366052617",
				"tags": {
					"Name":        "",
					"environment": "development",
					"project":     "project-alpha",
				},
			},
		},
		"random_string.lb_id": {
			"address":        "random_string.lb_id",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "lb_id",
			"provider_name":  "registry.terraform.io/hashicorp/random",
			"tainted":        false,
			"type":           "random_string",
			"values": {
				"id":               "erU",
				"keepers":          null,
				"length":           3,
				"lower":            true,
				"min_lower":        0,
				"min_numeric":      0,
				"min_special":      0,
				"min_upper":        0,
				"number":           true,
				"override_special": null,
				"result":           "erU",
				"special":          false,
				"upper":            true,
			},
		},
	},
}

variables = {
	"instance_count": {
		"name":  "instance_count",
		"value": "2",
	},
	"instance_type": {
		"name":  "instance_type",
		"value": "t2.micro",
	},
}

resource_changes = {
	"aws_ebs_volume.unencrypted": {
		"address": "aws_ebs_volume.unencrypted",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
				"availability_zone":    "us-west-1b",
				"encrypted":            true,
				"id":                   "vol-0662fddf4e25ce498",
				"iops":                 100,
				"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
				"multi_attach_enabled": false,
				"outpost_arn":          "",
				"size":                 8,
				"snapshot_id":          "",
				"tags":                 {},
				"type":                 "gp2",
			},
			"after_unknown": {},
			"before": {
				"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
				"availability_zone":    "us-west-1b",
				"encrypted":            true,
				"id":                   "vol-0662fddf4e25ce498",
				"iops":                 100,
				"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
				"multi_attach_enabled": false,
				"outpost_arn":          "",
				"size":                 8,
				"snapshot_id":          "",
				"tags":                 {},
				"type":                 "gp2",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "unencrypted",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_ebs_volume",
	},
	"module.app_security_group.module.sg.aws_security_group.this_name_prefix[0]": {
		"address": "module.app_security_group.module.sg.aws_security_group.this_name_prefix[0]",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-06326fc6a0a3eb4b8",
				"description": "Security group for web-servers with HTTP ports open within VPC",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "All protocols",
						"from_port":   0,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "-1",
						"security_groups": [],
						"self":            false,
						"to_port":         0,
					},
				],
				"id": "sg-06326fc6a0a3eb4b8",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "HTTP",
						"from_port":        8080,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8080,
					},
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "JMX",
						"from_port":        1099,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1099,
					},
					{
						"cidr_blocks":      [],
						"description":      "Ingress Rule",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             true,
						"to_port":          0,
					},
				],
				"name":                   "web-sg-project-alpha-dev-20251002133440267500000001",
				"name_prefix":            "web-sg-project-alpha-dev-",
				"owner_id":               "737366052617",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name":        "web-sg-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-06326fc6a0a3eb4b8",
				"description": "Security group for web-servers with HTTP ports open within VPC",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "All protocols",
						"from_port":   0,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "-1",
						"security_groups": [],
						"self":            false,
						"to_port":         0,
					},
				],
				"id": "sg-06326fc6a0a3eb4b8",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "HTTP",
						"from_port":        8080,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8080,
					},
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.0.1.0/24",
							"10.0.2.0/24",
						],
						"description":      "JMX",
						"from_port":        1099,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1099,
					},
					{
						"cidr_blocks":      [],
						"description":      "Ingress Rule",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             true,
						"to_port":          0,
					},
				],
				"name":                   "web-sg-project-alpha-dev-20251002133440267500000001",
				"name_prefix":            "web-sg-project-alpha-dev-",
				"owner_id":               "737366052617",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name":        "web-sg-project-alpha-dev",
					"environment": "dev",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.app_security_group.module.sg",
		"name":           "this_name_prefix",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.egress_rules[0]": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description": "All protocols",
				"from_port":   0,
				"id":          "sgrule-1165095938",
				"ipv6_cidr_blocks": [
					"::/0",
				],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  0,
				"type":                     "egress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description": "All protocols",
				"from_port":   0,
				"id":          "sgrule-1165095938",
				"ipv6_cidr_blocks": [
					"::/0",
				],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  0,
				"type":                     "egress",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.app_security_group.module.sg",
		"name":           "egress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[0]": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "HTTP",
				"from_port":         80,
				"id":                "sgrule-1527321307",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  80,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "HTTP",
				"from_port":         80,
				"id":                "sgrule-1527321307",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  80,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[1]": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "HTTP",
				"from_port":         8080,
				"id":                "sgrule-879057280",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  8080,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "HTTP",
				"from_port":         8080,
				"id":                "sgrule-879057280",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  8080,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[2]": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "HTTPS",
				"from_port":         443,
				"id":                "sgrule-798564216",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  443,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "HTTPS",
				"from_port":         443,
				"id":                "sgrule-798564216",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  443,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[3]": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "JMX",
				"from_port":         1099,
				"id":                "sgrule-2319081979",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  1099,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
				"description":       "JMX",
				"from_port":         1099,
				"id":                "sgrule-2319081979",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  1099,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          3,
		"mode":           "managed",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks":       [],
				"description":       "Ingress Rule",
				"from_port":         0,
				"id":                "sgrule-742313647",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              true,
				"source_security_group_id": "sg-06326fc6a0a3eb4b8",
				"to_port":                  0,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks":       [],
				"description":       "Ingress Rule",
				"from_port":         0,
				"id":                "sgrule-742313647",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-06326fc6a0a3eb4b8",
				"self":              true,
				"source_security_group_id": "sg-06326fc6a0a3eb4b8",
				"to_port":                  0,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_with_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.ec2_instances.aws_instance.app[0]": {
		"address": "module.ec2_instances.aws_instance.app[0]",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"ami": "ami-0fb832921029d9dfc",
				"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-03b9dd825ffb52b7c",
				"associate_public_ip_address": false,
				"availability_zone":           "us-west-1b",
				"cpu_core_count":              1,
				"cpu_threads_per_core":        1,
				"credit_specification": [
					{
						"cpu_credits": "standard",
					},
				],
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device": [],
				"get_password_data":      false,
				"hibernation":            false,
				"host_id":                null,
				"iam_instance_profile":   "",
				"id": "i-03b9dd825ffb52b7c",
				"instance_initiated_shutdown_behavior": null,
				"instance_state":                       "running",
				"instance_type":                        "t2.micro",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_put_response_hop_limit": 1,
						"http_tokens":                 "optional",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"primary_network_interface_id": "eni-0acf125024e8f3a16",
				"private_dns":                  "ip-10-0-101-172.us-west-1.compute.internal",
				"private_ip":                   "10.0.101.172",
				"public_dns":                   "",
				"public_ip":                    "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  100,
						"kms_key_id":            "",
						"throughput":            0,
						"volume_id":             "vol-0d5570e1035e77acf",
						"volume_size":           8,
						"volume_type":           "gp2",
					},
				],
				"secondary_private_ips": [],
				"security_groups":       [],
				"source_dest_check":     true,
				"subnet_id":             "subnet-0b2bdf40cec3c055c",
				"tags": {
					"environment": "development",
					"project":     "project-alpha",
				},
				"tenancy":          "default",
				"timeouts":         null,
				"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
				"user_data_base64": null,
				"volume_tags":      {},
				"vpc_security_group_ids": [
					"sg-06326fc6a0a3eb4b8",
				],
			},
			"after_unknown": {},
			"before": {
				"ami": "ami-0fb832921029d9dfc",
				"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-03b9dd825ffb52b7c",
				"associate_public_ip_address": false,
				"availability_zone":           "us-west-1b",
				"cpu_core_count":              1,
				"cpu_threads_per_core":        1,
				"credit_specification": [
					{
						"cpu_credits": "standard",
					},
				],
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device": [],
				"get_password_data":      false,
				"hibernation":            false,
				"host_id":                null,
				"iam_instance_profile":   "",
				"id": "i-03b9dd825ffb52b7c",
				"instance_initiated_shutdown_behavior": null,
				"instance_state":                       "running",
				"instance_type":                        "t2.micro",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_put_response_hop_limit": 1,
						"http_tokens":                 "optional",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"primary_network_interface_id": "eni-0acf125024e8f3a16",
				"private_dns":                  "ip-10-0-101-172.us-west-1.compute.internal",
				"private_ip":                   "10.0.101.172",
				"public_dns":                   "",
				"public_ip":                    "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  100,
						"kms_key_id":            "",
						"throughput":            0,
						"volume_id":             "vol-0d5570e1035e77acf",
						"volume_size":           8,
						"volume_type":           "gp2",
					},
				],
				"secondary_private_ips": [],
				"security_groups":       [],
				"source_dest_check":     true,
				"subnet_id":             "subnet-0b2bdf40cec3c055c",
				"tags": {
					"environment": "dev",
					"project":     "project-alpha",
				},
				"tenancy":          "default",
				"timeouts":         null,
				"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
				"user_data_base64": null,
				"volume_tags":      {},
				"vpc_security_group_ids": [
					"sg-06326fc6a0a3eb4b8",
				],
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.ec2_instances",
		"name":           "app",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_instance",
	},
	"module.ec2_instances.aws_instance.app[1]": {
		"address": "module.ec2_instances.aws_instance.app[1]",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"ami": "ami-0fb832921029d9dfc",
				"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-016765c89b917b799",
				"associate_public_ip_address": false,
				"availability_zone":           "us-west-1c",
				"cpu_core_count":              1,
				"cpu_threads_per_core":        1,
				"credit_specification": [
					{
						"cpu_credits": "standard",
					},
				],
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device": [],
				"get_password_data":      false,
				"hibernation":            false,
				"host_id":                null,
				"iam_instance_profile":   "",
				"id": "i-016765c89b917b799",
				"instance_initiated_shutdown_behavior": null,
				"instance_state":                       "running",
				"instance_type":                        "t2.micro",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_put_response_hop_limit": 1,
						"http_tokens":                 "optional",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"primary_network_interface_id": "eni-0109abce718700404",
				"private_dns":                  "ip-10-0-102-117.us-west-1.compute.internal",
				"private_ip":                   "10.0.102.117",
				"public_dns":                   "",
				"public_ip":                    "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  100,
						"kms_key_id":            "",
						"throughput":            0,
						"volume_id":             "vol-0e35b38712a49cde8",
						"volume_size":           8,
						"volume_type":           "gp2",
					},
				],
				"secondary_private_ips": [],
				"security_groups":       [],
				"source_dest_check":     true,
				"subnet_id":             "subnet-0ea934f57d112a269",
				"tags": {
					"environment": "development",
					"project":     "project-alpha",
				},
				"tenancy":          "default",
				"timeouts":         null,
				"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
				"user_data_base64": null,
				"volume_tags":      {},
				"vpc_security_group_ids": [
					"sg-06326fc6a0a3eb4b8",
				],
			},
			"after_unknown": {},
			"before": {
				"ami": "ami-0fb832921029d9dfc",
				"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-016765c89b917b799",
				"associate_public_ip_address": false,
				"availability_zone":           "us-west-1c",
				"cpu_core_count":              1,
				"cpu_threads_per_core":        1,
				"credit_specification": [
					{
						"cpu_credits": "standard",
					},
				],
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device": [],
				"get_password_data":      false,
				"hibernation":            false,
				"host_id":                null,
				"iam_instance_profile":   "",
				"id": "i-016765c89b917b799",
				"instance_initiated_shutdown_behavior": null,
				"instance_state":                       "running",
				"instance_type":                        "t2.micro",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_put_response_hop_limit": 1,
						"http_tokens":                 "optional",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"primary_network_interface_id": "eni-0109abce718700404",
				"private_dns":                  "ip-10-0-102-117.us-west-1.compute.internal",
				"private_ip":                   "10.0.102.117",
				"public_dns":                   "",
				"public_ip":                    "",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  100,
						"kms_key_id":            "",
						"throughput":            0,
						"volume_id":             "vol-0e35b38712a49cde8",
						"volume_size":           8,
						"volume_type":           "gp2",
					},
				],
				"secondary_private_ips": [],
				"security_groups":       [],
				"source_dest_check":     true,
				"subnet_id":             "subnet-0ea934f57d112a269",
				"tags": {
					"environment": "dev",
					"project":     "project-alpha",
				},
				"tenancy":          "default",
				"timeouts":         null,
				"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
				"user_data_base64": null,
				"volume_tags":      {},
				"vpc_security_group_ids": [
					"sg-06326fc6a0a3eb4b8",
				],
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.ec2_instances",
		"name":           "app",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_instance",
	},
	"module.elb_http.module.elb.aws_elb.this[0]": {
		"address": "module.elb_http.module.elb.aws_elb.this[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"access_logs": [],
				"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
				"availability_zones": [
					"us-west-1b",
					"us-west-1c",
				],
				"connection_draining":         false,
				"connection_draining_timeout": 300,
				"cross_zone_load_balancing":   true,
				"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
				"health_check": [
					{
						"healthy_threshold":   3,
						"interval":            10,
						"target":              "HTTP:80/index.html",
						"timeout":             5,
						"unhealthy_threshold": 10,
					},
				],
				"id":           "lb-erU-project-alpha-dev",
				"idle_timeout": 60,
				"instances": [
					"i-016765c89b917b799",
					"i-03b9dd825ffb52b7c",
				],
				"internal": false,
				"listener": [
					{
						"instance_port":      80,
						"instance_protocol":  "http",
						"lb_port":            80,
						"lb_protocol":        "http",
						"ssl_certificate_id": "",
					},
				],
				"name":        "lb-erU-project-alpha-dev",
				"name_prefix": null,
				"security_groups": [
					"sg-040d291a0f6288c7d",
				],
				"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
				"source_security_group_id": "sg-040d291a0f6288c7d",
				"subnets": [
					"subnet-0668e14c98636a8ec",
					"subnet-0b017cf7e24e4b3ff",
				],
				"tags": {
					"Name":        "lb-erU-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"zone_id": "Z368ELLRRE2KJ0",
			},
			"after_unknown": {},
			"before": {
				"access_logs": [],
				"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
				"availability_zones": [
					"us-west-1b",
					"us-west-1c",
				],
				"connection_draining":         false,
				"connection_draining_timeout": 300,
				"cross_zone_load_balancing":   true,
				"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
				"health_check": [
					{
						"healthy_threshold":   3,
						"interval":            10,
						"target":              "HTTP:80/index.html",
						"timeout":             5,
						"unhealthy_threshold": 10,
					},
				],
				"id":           "lb-erU-project-alpha-dev",
				"idle_timeout": 60,
				"instances": [
					"i-016765c89b917b799",
					"i-03b9dd825ffb52b7c",
				],
				"internal": false,
				"listener": [
					{
						"instance_port":      80,
						"instance_protocol":  "http",
						"lb_port":            80,
						"lb_protocol":        "http",
						"ssl_certificate_id": "",
					},
				],
				"name":        "lb-erU-project-alpha-dev",
				"name_prefix": null,
				"security_groups": [
					"sg-040d291a0f6288c7d",
				],
				"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
				"source_security_group_id": "sg-040d291a0f6288c7d",
				"subnets": [
					"subnet-0668e14c98636a8ec",
					"subnet-0b017cf7e24e4b3ff",
				],
				"tags": {
					"Name":        "lb-erU-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"zone_id": "Z368ELLRRE2KJ0",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.elb_http.module.elb",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_elb",
	},
	"module.elb_http.module.elb_attachment.aws_elb_attachment.this[0]": {
		"address": "module.elb_http.module.elb_attachment.aws_elb_attachment.this[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"elb":      "lb-erU-project-alpha-dev",
				"id":       "lb-erU-project-alpha-dev-20251002134205104200000003",
				"instance": "i-03b9dd825ffb52b7c",
			},
			"after_unknown": {},
			"before": {
				"elb":      "lb-erU-project-alpha-dev",
				"id":       "lb-erU-project-alpha-dev-20251002134205104200000003",
				"instance": "i-03b9dd825ffb52b7c",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.elb_http.module.elb_attachment",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_elb_attachment",
	},
	"module.elb_http.module.elb_attachment.aws_elb_attachment.this[1]": {
		"address": "module.elb_http.module.elb_attachment.aws_elb_attachment.this[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"elb":      "lb-erU-project-alpha-dev",
				"id":       "lb-erU-project-alpha-dev-20251002134205085000000002",
				"instance": "i-016765c89b917b799",
			},
			"after_unknown": {},
			"before": {
				"elb":      "lb-erU-project-alpha-dev",
				"id":       "lb-erU-project-alpha-dev-20251002134205085000000002",
				"instance": "i-016765c89b917b799",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.elb_http.module.elb_attachment",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_elb_attachment",
	},
	"module.lb_security_group.module.sg.aws_security_group.this_name_prefix[0]": {
		"address": "module.lb_security_group.module.sg.aws_security_group.this_name_prefix[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-040d291a0f6288c7d",
				"description": "Security group for load balancer with HTTP ports open within VPC",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "All protocols",
						"from_port":   0,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "-1",
						"security_groups": [],
						"self":            false,
						"to_port":         0,
					},
				],
				"id": "sg-040d291a0f6288c7d",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        8080,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8080,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "JMX",
						"from_port":        1099,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1099,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "SSH restricted to internal network",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
					{
						"cidr_blocks":      [],
						"description":      "Ingress Rule",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             true,
						"to_port":          0,
					},
				],
				"name":                   "lb-sg-project-alpha-dev-20251002133440267800000002",
				"name_prefix":            "lb-sg-project-alpha-dev-",
				"owner_id":               "737366052617",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name":        "lb-sg-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-040d291a0f6288c7d",
				"description": "Security group for load balancer with HTTP ports open within VPC",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "All protocols",
						"from_port":   0,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "-1",
						"security_groups": [],
						"self":            false,
						"to_port":         0,
					},
				],
				"id": "sg-040d291a0f6288c7d",
				"ingress": [
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        8080,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          8080,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "HTTP",
						"from_port":        80,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "HTTPS",
						"from_port":        443,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          443,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "JMX",
						"from_port":        1099,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          1099,
					},
					{
						"cidr_blocks": [
							"10.0.0.0/16",
						],
						"description":      "SSH restricted to internal network",
						"from_port":        22,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          22,
					},
					{
						"cidr_blocks":      [],
						"description":      "Ingress Rule",
						"from_port":        0,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  [],
						"self":             true,
						"to_port":          0,
					},
				],
				"name":                   "lb-sg-project-alpha-dev-20251002133440267800000002",
				"name_prefix":            "lb-sg-project-alpha-dev-",
				"owner_id":               "737366052617",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name":        "lb-sg-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "this_name_prefix",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.egress_rules[0]": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description": "All protocols",
				"from_port":   0,
				"id":          "sgrule-34138926",
				"ipv6_cidr_blocks": [
					"::/0",
				],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  0,
				"type":                     "egress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description": "All protocols",
				"from_port":   0,
				"id":          "sgrule-34138926",
				"ipv6_cidr_blocks": [
					"::/0",
				],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  0,
				"type":                     "egress",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "egress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[0]": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "HTTP",
				"from_port":         80,
				"id":                "sgrule-4083687304",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  80,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "HTTP",
				"from_port":         80,
				"id":                "sgrule-4083687304",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  80,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[1]": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "HTTP",
				"from_port":         8080,
				"id":                "sgrule-26869172",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  8080,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "HTTP",
				"from_port":         8080,
				"id":                "sgrule-26869172",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  8080,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[2]": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "HTTPS",
				"from_port":         443,
				"id":                "sgrule-1771646953",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  443,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "HTTPS",
				"from_port":         443,
				"id":                "sgrule-1771646953",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  443,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[3]": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "JMX",
				"from_port":         1099,
				"id":                "sgrule-1125713004",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  1099,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "JMX",
				"from_port":         1099,
				"id":                "sgrule-1125713004",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  1099,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          3,
		"mode":           "managed",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_rules",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks[0]": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "SSH restricted to internal network",
				"from_port":         22,
				"id":                "sgrule-2130763446",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  22,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks": [
					"10.0.0.0/16",
				],
				"description":       "SSH restricted to internal network",
				"from_port":         22,
				"id":                "sgrule-2130763446",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "tcp",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              false,
				"source_security_group_id": null,
				"to_port":                  22,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_with_cidr_blocks",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"cidr_blocks":       [],
				"description":       "Ingress Rule",
				"from_port":         0,
				"id":                "sgrule-3912070980",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              true,
				"source_security_group_id": "sg-040d291a0f6288c7d",
				"to_port":                  0,
				"type":                     "ingress",
			},
			"after_unknown": {},
			"before": {
				"cidr_blocks":       [],
				"description":       "Ingress Rule",
				"from_port":         0,
				"id":                "sgrule-3912070980",
				"ipv6_cidr_blocks":  [],
				"prefix_list_ids":   [],
				"protocol":          "-1",
				"security_group_id": "sg-040d291a0f6288c7d",
				"self":              true,
				"source_security_group_id": "sg-040d291a0f6288c7d",
				"to_port":                  0,
				"type":                     "ingress",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_with_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.vpc.aws_eip.nat[0]": {
		"address": "module.vpc.aws_eip.nat[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"allocation_id":             null,
				"associate_with_private_ip": null,
				"association_id":            "eipassoc-0da9417e63565d7c2",
				"carrier_ip":                "",
				"customer_owned_ip":         "",
				"customer_owned_ipv4_pool":  "",
				"domain":                    "vpc",
				"id":                        "eipalloc-0eb190a7f42b983b2",
				"instance":                  "",
				"network_border_group":      "us-west-1",
				"network_interface":         "eni-057bc87bc25465691",
				"private_dns":               "ip-10-0-1-91.us-west-1.compute.internal",
				"private_ip":                "10.0.1.91",
				"public_dns":                "ec2-54-177-111-86.us-west-1.compute.amazonaws.com",
				"public_ip":                 "54.177.111.86",
				"public_ipv4_pool":          "amazon",
				"tags": {
					"Name":        "-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc":      true,
			},
			"after_unknown": {},
			"before": {
				"allocation_id":             null,
				"associate_with_private_ip": null,
				"association_id":            "eipassoc-0da9417e63565d7c2",
				"carrier_ip":                "",
				"customer_owned_ip":         "",
				"customer_owned_ipv4_pool":  "",
				"domain":                    "vpc",
				"id":                        "eipalloc-0eb190a7f42b983b2",
				"instance":                  "",
				"network_border_group":      "us-west-1",
				"network_interface":         "eni-057bc87bc25465691",
				"private_dns":               "ip-10-0-1-91.us-west-1.compute.internal",
				"private_ip":                "10.0.1.91",
				"public_dns":                "ec2-54-177-111-86.us-west-1.compute.amazonaws.com",
				"public_ip":                 "54.177.111.86",
				"public_ipv4_pool":          "amazon",
				"tags": {
					"Name":        "-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc":      true,
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "nat",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_eip",
	},
	"module.vpc.aws_eip.nat[1]": {
		"address": "module.vpc.aws_eip.nat[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"allocation_id":             null,
				"associate_with_private_ip": null,
				"association_id":            "eipassoc-0698d8f20c5722dff",
				"carrier_ip":                "",
				"customer_owned_ip":         "",
				"customer_owned_ipv4_pool":  "",
				"domain":                    "vpc",
				"id":                        "eipalloc-0f772743cb6efe71f",
				"instance":                  "",
				"network_border_group":      "us-west-1",
				"network_interface":         "eni-06a8c1c0f5f0a0d5c",
				"private_dns":               "ip-10-0-2-46.us-west-1.compute.internal",
				"private_ip":                "10.0.2.46",
				"public_dns":                "ec2-50-18-226-163.us-west-1.compute.amazonaws.com",
				"public_ip":                 "50.18.226.163",
				"public_ipv4_pool":          "amazon",
				"tags": {
					"Name":        "-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc":      true,
			},
			"after_unknown": {},
			"before": {
				"allocation_id":             null,
				"associate_with_private_ip": null,
				"association_id":            "eipassoc-0698d8f20c5722dff",
				"carrier_ip":                "",
				"customer_owned_ip":         "",
				"customer_owned_ipv4_pool":  "",
				"domain":                    "vpc",
				"id":                        "eipalloc-0f772743cb6efe71f",
				"instance":                  "",
				"network_border_group":      "us-west-1",
				"network_interface":         "eni-06a8c1c0f5f0a0d5c",
				"private_dns":               "ip-10-0-2-46.us-west-1.compute.internal",
				"private_ip":                "10.0.2.46",
				"public_dns":                "ec2-50-18-226-163.us-west-1.compute.amazonaws.com",
				"public_ip":                 "50.18.226.163",
				"public_ipv4_pool":          "amazon",
				"tags": {
					"Name":        "-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc":      true,
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "nat",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_eip",
	},
	"module.vpc.aws_internet_gateway.this[0]": {
		"address": "module.vpc.aws_internet_gateway.this[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn":      "arn:aws:ec2:us-west-1:737366052617:internet-gateway/igw-0a87232c769e282d2",
				"id":       "igw-0a87232c769e282d2",
				"owner_id": "737366052617",
				"tags": {
					"Name":        "",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"arn":      "arn:aws:ec2:us-west-1:737366052617:internet-gateway/igw-0a87232c769e282d2",
				"id":       "igw-0a87232c769e282d2",
				"owner_id": "737366052617",
				"tags": {
					"Name":        "",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_internet_gateway",
	},
	"module.vpc.aws_nat_gateway.this[0]": {
		"address": "module.vpc.aws_nat_gateway.this[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"allocation_id": "eipalloc-0eb190a7f42b983b2",
				"id":            "nat-0baadee1e3e44558c",
				"network_interface_id": "eni-057bc87bc25465691",
				"private_ip":           "10.0.1.91",
				"public_ip":            "54.177.111.86",
				"subnet_id":            "subnet-0b017cf7e24e4b3ff",
				"tags": {
					"Name":        "-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
			},
			"after_unknown": {},
			"before": {
				"allocation_id": "eipalloc-0eb190a7f42b983b2",
				"id":            "nat-0baadee1e3e44558c",
				"network_interface_id": "eni-057bc87bc25465691",
				"private_ip":           "10.0.1.91",
				"public_ip":            "54.177.111.86",
				"subnet_id":            "subnet-0b017cf7e24e4b3ff",
				"tags": {
					"Name":        "-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_nat_gateway",
	},
	"module.vpc.aws_nat_gateway.this[1]": {
		"address": "module.vpc.aws_nat_gateway.this[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"allocation_id": "eipalloc-0f772743cb6efe71f",
				"id":            "nat-043b0a2533e8c970d",
				"network_interface_id": "eni-06a8c1c0f5f0a0d5c",
				"private_ip":           "10.0.2.46",
				"public_ip":            "50.18.226.163",
				"subnet_id":            "subnet-0668e14c98636a8ec",
				"tags": {
					"Name":        "-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
			},
			"after_unknown": {},
			"before": {
				"allocation_id": "eipalloc-0f772743cb6efe71f",
				"id":            "nat-043b0a2533e8c970d",
				"network_interface_id": "eni-06a8c1c0f5f0a0d5c",
				"private_ip":           "10.0.2.46",
				"public_ip":            "50.18.226.163",
				"subnet_id":            "subnet-0668e14c98636a8ec",
				"tags": {
					"Name":        "-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_nat_gateway",
	},
	"module.vpc.aws_route.private_nat_gateway[0]": {
		"address": "module.vpc.aws_route.private_nat_gateway[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "",
				"id":                          "r-rtb-08929b85b4ee0c9d21080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "nat-0baadee1e3e44558c",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-08929b85b4ee0c9d2",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": "",
			},
			"after_unknown": {},
			"before": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "",
				"id":                          "r-rtb-08929b85b4ee0c9d21080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "nat-0baadee1e3e44558c",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-08929b85b4ee0c9d2",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": "",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private_nat_gateway",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route",
	},
	"module.vpc.aws_route.private_nat_gateway[1]": {
		"address": "module.vpc.aws_route.private_nat_gateway[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "",
				"id":                          "r-rtb-053e1dd125b4a5e801080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "nat-043b0a2533e8c970d",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-053e1dd125b4a5e80",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": "",
			},
			"after_unknown": {},
			"before": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "",
				"id":                          "r-rtb-053e1dd125b4a5e801080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "nat-043b0a2533e8c970d",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-053e1dd125b4a5e80",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": "",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private_nat_gateway",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route",
	},
	"module.vpc.aws_route.public_internet_gateway[0]": {
		"address": "module.vpc.aws_route.public_internet_gateway[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "igw-0a87232c769e282d2",
				"id":                          "r-rtb-034f35c1eccf9a1941080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-034f35c1eccf9a194",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": "",
			},
			"after_unknown": {},
			"before": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "igw-0a87232c769e282d2",
				"id":                          "r-rtb-034f35c1eccf9a1941080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-034f35c1eccf9a194",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": "",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public_internet_gateway",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route",
	},
	"module.vpc.aws_route_table.private[0]": {
		"address": "module.vpc.aws_route_table.private[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"id":               "rtb-08929b85b4ee0c9d2",
				"owner_id":         "737366052617",
				"propagating_vgws": [],
				"route": [
					{
						"cidr_block":                "0.0.0.0/0",
						"egress_only_gateway_id":    "",
						"gateway_id":                "",
						"instance_id":               "",
						"ipv6_cidr_block":           "",
						"local_gateway_id":          "",
						"nat_gateway_id":            "nat-0baadee1e3e44558c",
						"network_interface_id":      "",
						"transit_gateway_id":        "",
						"vpc_endpoint_id":           "",
						"vpc_peering_connection_id": "",
					},
				],
				"tags": {
					"Name":        "-private-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"id":               "rtb-08929b85b4ee0c9d2",
				"owner_id":         "737366052617",
				"propagating_vgws": [],
				"route": [
					{
						"cidr_block":                "0.0.0.0/0",
						"egress_only_gateway_id":    "",
						"gateway_id":                "",
						"instance_id":               "",
						"ipv6_cidr_block":           "",
						"local_gateway_id":          "",
						"nat_gateway_id":            "nat-0baadee1e3e44558c",
						"network_interface_id":      "",
						"transit_gateway_id":        "",
						"vpc_endpoint_id":           "",
						"vpc_peering_connection_id": "",
					},
				],
				"tags": {
					"Name":        "-private-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table.private[1]": {
		"address": "module.vpc.aws_route_table.private[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"id":               "rtb-053e1dd125b4a5e80",
				"owner_id":         "737366052617",
				"propagating_vgws": [],
				"route": [
					{
						"cidr_block":                "0.0.0.0/0",
						"egress_only_gateway_id":    "",
						"gateway_id":                "",
						"instance_id":               "",
						"ipv6_cidr_block":           "",
						"local_gateway_id":          "",
						"nat_gateway_id":            "nat-043b0a2533e8c970d",
						"network_interface_id":      "",
						"transit_gateway_id":        "",
						"vpc_endpoint_id":           "",
						"vpc_peering_connection_id": "",
					},
				],
				"tags": {
					"Name":        "-private-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"id":               "rtb-053e1dd125b4a5e80",
				"owner_id":         "737366052617",
				"propagating_vgws": [],
				"route": [
					{
						"cidr_block":                "0.0.0.0/0",
						"egress_only_gateway_id":    "",
						"gateway_id":                "",
						"instance_id":               "",
						"ipv6_cidr_block":           "",
						"local_gateway_id":          "",
						"nat_gateway_id":            "nat-043b0a2533e8c970d",
						"network_interface_id":      "",
						"transit_gateway_id":        "",
						"vpc_endpoint_id":           "",
						"vpc_peering_connection_id": "",
					},
				],
				"tags": {
					"Name":        "-private-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table.public[0]": {
		"address": "module.vpc.aws_route_table.public[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"id":               "rtb-034f35c1eccf9a194",
				"owner_id":         "737366052617",
				"propagating_vgws": [],
				"route": [
					{
						"cidr_block":                "0.0.0.0/0",
						"egress_only_gateway_id":    "",
						"gateway_id":                "igw-0a87232c769e282d2",
						"instance_id":               "",
						"ipv6_cidr_block":           "",
						"local_gateway_id":          "",
						"nat_gateway_id":            "",
						"network_interface_id":      "",
						"transit_gateway_id":        "",
						"vpc_endpoint_id":           "",
						"vpc_peering_connection_id": "",
					},
				],
				"tags": {
					"Name":        "-public",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"id":               "rtb-034f35c1eccf9a194",
				"owner_id":         "737366052617",
				"propagating_vgws": [],
				"route": [
					{
						"cidr_block":                "0.0.0.0/0",
						"egress_only_gateway_id":    "",
						"gateway_id":                "igw-0a87232c769e282d2",
						"instance_id":               "",
						"ipv6_cidr_block":           "",
						"local_gateway_id":          "",
						"nat_gateway_id":            "",
						"network_interface_id":      "",
						"transit_gateway_id":        "",
						"vpc_endpoint_id":           "",
						"vpc_peering_connection_id": "",
					},
				],
				"tags": {
					"Name":        "-public",
					"environment": "development",
					"project":     "project-alpha",
				},
				"vpc_id": "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table_association.private[0]": {
		"address": "module.vpc.aws_route_table_association.private[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"gateway_id":     null,
				"id":             "rtbassoc-0142f84975d0a2c22",
				"route_table_id": "rtb-08929b85b4ee0c9d2",
				"subnet_id":      "subnet-0b2bdf40cec3c055c",
			},
			"after_unknown": {},
			"before": {
				"gateway_id":     null,
				"id":             "rtbassoc-0142f84975d0a2c22",
				"route_table_id": "rtb-08929b85b4ee0c9d2",
				"subnet_id":      "subnet-0b2bdf40cec3c055c",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.private[1]": {
		"address": "module.vpc.aws_route_table_association.private[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"gateway_id":     null,
				"id":             "rtbassoc-012ea9d78aaef9617",
				"route_table_id": "rtb-053e1dd125b4a5e80",
				"subnet_id":      "subnet-0ea934f57d112a269",
			},
			"after_unknown": {},
			"before": {
				"gateway_id":     null,
				"id":             "rtbassoc-012ea9d78aaef9617",
				"route_table_id": "rtb-053e1dd125b4a5e80",
				"subnet_id":      "subnet-0ea934f57d112a269",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[0]": {
		"address": "module.vpc.aws_route_table_association.public[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"gateway_id":     null,
				"id":             "rtbassoc-0f3fadf9fd2eca79a",
				"route_table_id": "rtb-034f35c1eccf9a194",
				"subnet_id":      "subnet-0b017cf7e24e4b3ff",
			},
			"after_unknown": {},
			"before": {
				"gateway_id":     null,
				"id":             "rtbassoc-0f3fadf9fd2eca79a",
				"route_table_id": "rtb-034f35c1eccf9a194",
				"subnet_id":      "subnet-0b017cf7e24e4b3ff",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[1]": {
		"address": "module.vpc.aws_route_table_association.public[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"gateway_id":     null,
				"id":             "rtbassoc-05f3c585af67fa670",
				"route_table_id": "rtb-034f35c1eccf9a194",
				"subnet_id":      "subnet-0668e14c98636a8ec",
			},
			"after_unknown": {},
			"before": {
				"gateway_id":     null,
				"id":             "rtbassoc-05f3c585af67fa670",
				"route_table_id": "rtb-034f35c1eccf9a194",
				"subnet_id":      "subnet-0668e14c98636a8ec",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_subnet.private[0]": {
		"address": "module.vpc.aws_subnet.private[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b2bdf40cec3c055c",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1b",
				"availability_zone_id":            "usw1-az3",
				"cidr_block":                      "10.0.101.0/24",
				"id":                              "subnet-0b2bdf40cec3c055c",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         false,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-private-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b2bdf40cec3c055c",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1b",
				"availability_zone_id":            "usw1-az3",
				"cidr_block":                      "10.0.101.0/24",
				"id":                              "subnet-0b2bdf40cec3c055c",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         false,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-private-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.private[1]": {
		"address": "module.vpc.aws_subnet.private[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0ea934f57d112a269",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1c",
				"availability_zone_id":            "usw1-az1",
				"cidr_block":                      "10.0.102.0/24",
				"id":                              "subnet-0ea934f57d112a269",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         false,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-private-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0ea934f57d112a269",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1c",
				"availability_zone_id":            "usw1-az1",
				"cidr_block":                      "10.0.102.0/24",
				"id":                              "subnet-0ea934f57d112a269",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         false,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-private-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[0]": {
		"address": "module.vpc.aws_subnet.public[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b017cf7e24e4b3ff",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1b",
				"availability_zone_id":            "usw1-az3",
				"cidr_block":                      "10.0.1.0/24",
				"id":                              "subnet-0b017cf7e24e4b3ff",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-public-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b017cf7e24e4b3ff",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1b",
				"availability_zone_id":            "usw1-az3",
				"cidr_block":                      "10.0.1.0/24",
				"id":                              "subnet-0b017cf7e24e4b3ff",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-public-us-west-1b",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[1]": {
		"address": "module.vpc.aws_subnet.public[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0668e14c98636a8ec",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1c",
				"availability_zone_id":            "usw1-az1",
				"cidr_block":                      "10.0.2.0/24",
				"id":                              "subnet-0668e14c98636a8ec",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-public-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0668e14c98636a8ec",
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-west-1c",
				"availability_zone_id":            "usw1-az1",
				"cidr_block":                      "10.0.2.0/24",
				"id":                              "subnet-0668e14c98636a8ec",
				"ipv6_cidr_block":                 "",
				"ipv6_cidr_block_association_id":  "",
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     "",
				"owner_id":                        "737366052617",
				"tags": {
					"Name":        "-public-us-west-1c",
					"environment": "development",
					"project":     "project-alpha",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0803d92b938b67530",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_vpc.this[0]": {
		"address": "module.vpc.aws_vpc.this[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:vpc/vpc-0803d92b938b67530",
				"assign_generated_ipv6_cidr_block": false,
				"cidr_block":                       "10.0.0.0/16",
				"default_network_acl_id":           "acl-0e534a87fbb224833",
				"default_route_table_id":           "rtb-05b1175e8ba5f76d3",
				"default_security_group_id":        "sg-0d0145d916e0d471a",
				"dhcp_options_id":                  "dopt-934476f4",
				"enable_classiclink":               false,
				"enable_classiclink_dns_support":   false,
				"enable_dns_hostnames":             false,
				"enable_dns_support":               true,
				"id":                               "vpc-0803d92b938b67530",
				"instance_tenancy":                 "default",
				"ipv6_association_id":              "",
				"ipv6_cidr_block":                  "",
				"main_route_table_id":              "rtb-05b1175e8ba5f76d3",
				"owner_id":                         "737366052617",
				"tags": {
					"Name":        "",
					"environment": "development",
					"project":     "project-alpha",
				},
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:us-west-1:737366052617:vpc/vpc-0803d92b938b67530",
				"assign_generated_ipv6_cidr_block": false,
				"cidr_block":                       "10.0.0.0/16",
				"default_network_acl_id":           "acl-0e534a87fbb224833",
				"default_route_table_id":           "rtb-05b1175e8ba5f76d3",
				"default_security_group_id":        "sg-0d0145d916e0d471a",
				"dhcp_options_id":                  "dopt-934476f4",
				"enable_classiclink":               false,
				"enable_classiclink_dns_support":   false,
				"enable_dns_hostnames":             false,
				"enable_dns_support":               true,
				"id":                               "vpc-0803d92b938b67530",
				"instance_tenancy":                 "default",
				"ipv6_association_id":              "",
				"ipv6_cidr_block":                  "",
				"main_route_table_id":              "rtb-05b1175e8ba5f76d3",
				"owner_id":                         "737366052617",
				"tags": {
					"Name":        "",
					"environment": "development",
					"project":     "project-alpha",
				},
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_vpc",
	},
	"random_string.lb_id": {
		"address": "random_string.lb_id",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"id":               "erU",
				"keepers":          null,
				"length":           3,
				"lower":            true,
				"min_lower":        0,
				"min_numeric":      0,
				"min_special":      0,
				"min_upper":        0,
				"number":           true,
				"override_special": null,
				"result":           "erU",
				"special":          false,
				"upper":            true,
			},
			"after_unknown": {},
			"before": {
				"id":               "erU",
				"keepers":          null,
				"length":           3,
				"lower":            true,
				"min_lower":        0,
				"min_numeric":      0,
				"min_special":      0,
				"min_upper":        0,
				"number":           true,
				"override_special": null,
				"result":           "erU",
				"special":          false,
				"upper":            true,
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "lb_id",
		"provider_name":  "registry.terraform.io/hashicorp/random",
		"type":           "random_string",
	},
}

resource_drift = {
	"aws_ebs_volume.unencrypted": {
		"address": "aws_ebs_volume.unencrypted",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
				"availability_zone":    "us-west-1b",
				"encrypted":            true,
				"id":                   "vol-0662fddf4e25ce498",
				"iops":                 100,
				"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
				"multi_attach_enabled": false,
				"outpost_arn":          "",
				"size":                 8,
				"snapshot_id":          "",
				"tags":                 {},
				"type":                 "gp2",
			},
			"after_unknown": {},
			"before": {
				"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
				"availability_zone":    "us-west-1b",
				"encrypted":            true,
				"id":                   "vol-0662fddf4e25ce498",
				"iops":                 100,
				"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
				"multi_attach_enabled": false,
				"outpost_arn":          "",
				"size":                 8,
				"snapshot_id":          "",
				"tags":                 null,
				"type":                 "gp2",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "unencrypted",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_ebs_volume",
	},
	"module.elb_http.module.elb.aws_elb.this[0]": {
		"address": "module.elb_http.module.elb.aws_elb.this[0]",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"access_logs": [],
				"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
				"availability_zones": [
					"us-west-1b",
					"us-west-1c",
				],
				"connection_draining":         false,
				"connection_draining_timeout": 300,
				"cross_zone_load_balancing":   true,
				"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
				"health_check": [
					{
						"healthy_threshold":   3,
						"interval":            10,
						"target":              "HTTP:80/index.html",
						"timeout":             5,
						"unhealthy_threshold": 10,
					},
				],
				"id":           "lb-erU-project-alpha-dev",
				"idle_timeout": 60,
				"instances": [
					"i-016765c89b917b799",
					"i-03b9dd825ffb52b7c",
				],
				"internal": false,
				"listener": [
					{
						"instance_port":      80,
						"instance_protocol":  "http",
						"lb_port":            80,
						"lb_protocol":        "http",
						"ssl_certificate_id": "",
					},
				],
				"name":        "lb-erU-project-alpha-dev",
				"name_prefix": null,
				"security_groups": [
					"sg-040d291a0f6288c7d",
				],
				"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
				"source_security_group_id": "sg-040d291a0f6288c7d",
				"subnets": [
					"subnet-0668e14c98636a8ec",
					"subnet-0b017cf7e24e4b3ff",
				],
				"tags": {
					"Name":        "lb-erU-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"zone_id": "Z368ELLRRE2KJ0",
			},
			"after_unknown": {},
			"before": {
				"access_logs": [],
				"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
				"availability_zones": [
					"us-west-1b",
					"us-west-1c",
				],
				"connection_draining":         false,
				"connection_draining_timeout": 300,
				"cross_zone_load_balancing":   true,
				"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
				"health_check": [
					{
						"healthy_threshold":   3,
						"interval":            10,
						"target":              "HTTP:80/index.html",
						"timeout":             5,
						"unhealthy_threshold": 10,
					},
				],
				"id":           "lb-erU-project-alpha-dev",
				"idle_timeout": 60,
				"instances": [
					"i-016765c89b917b799",
					"i-03b9dd825ffb52b7c",
					"i-0c70da708d882d8f5",
				],
				"internal": false,
				"listener": [
					{
						"instance_port":      80,
						"instance_protocol":  "http",
						"lb_port":            80,
						"lb_protocol":        "http",
						"ssl_certificate_id": "",
					},
				],
				"name":        "lb-erU-project-alpha-dev",
				"name_prefix": null,
				"security_groups": [
					"sg-040d291a0f6288c7d",
				],
				"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
				"source_security_group_id": "sg-040d291a0f6288c7d",
				"subnets": [
					"subnet-0668e14c98636a8ec",
					"subnet-0b017cf7e24e4b3ff",
				],
				"tags": {
					"Name":        "lb-erU-project-alpha-dev",
					"environment": "development",
					"project":     "project-alpha",
				},
				"zone_id": "Z368ELLRRE2KJ0",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.elb_http.module.elb",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_elb",
	},
}

output_changes = {
	"public_dns_name": {
		"change": {
			"actions": [
				"no-op",
			],
			"after":         "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
			"after_unknown": false,
			"before":        "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
		},
		"name": "public_dns_name",
	},
}

raw = {
	"configuration": {
		"provider_config": {
			"aws": {
				"expressions": {
					"region": {
						"constant_value": "us-west-1",
					},
				},
				"full_name": "registry.terraform.io/hashicorp/aws",
				"name":      "aws",
			},
			"module.elb_http.module.elb:aws": {
				"full_name":      "registry.terraform.io/hashicorp/aws",
				"module_address": "module.elb_http.module.elb",
				"name":           "aws",
			},
			"module.elb_http.module.elb_attachment:aws": {
				"full_name":      "registry.terraform.io/hashicorp/aws",
				"module_address": "module.elb_http.module.elb_attachment",
				"name":           "aws",
			},
			"random": {
				"full_name": "registry.terraform.io/hashicorp/random",
				"name":      "random",
			},
		},
		"root_module": {
			"module_calls": {
				"app_security_group": {
					"expressions": {
						"description": {
							"constant_value": "Security group for web-servers with HTTP ports open within VPC",
						},
						"ingress_cidr_blocks": {
							"references": [
								"module.vpc.public_subnets_cidr_blocks",
								"module.vpc",
							],
						},
						"name": {
							"constant_value": "web-sg-project-alpha-dev",
						},
						"tags": {
							"constant_value": {
								"environment": "development",
								"project":     "project-alpha",
							},
						},
						"vpc_id": {
							"references": [
								"module.vpc.vpc_id",
								"module.vpc",
							],
						},
					},
					"module": {
						"module_calls": {
							"sg": {
								"expressions": {
									"computed_egress_rules": {
										"references": [
											"var.auto_computed_egress_rules",
											"var.computed_egress_rules",
										],
									},
									"computed_egress_with_cidr_blocks": {
										"references": [
											"var.computed_egress_with_cidr_blocks",
										],
									},
									"computed_egress_with_ipv6_cidr_blocks": {
										"references": [
											"var.computed_egress_with_ipv6_cidr_blocks",
										],
									},
									"computed_egress_with_self": {
										"references": [
											"var.auto_computed_egress_with_self",
											"var.computed_egress_with_self",
										],
									},
									"computed_egress_with_source_security_group_id": {
										"references": [
											"var.computed_egress_with_source_security_group_id",
										],
									},
									"computed_ingress_rules": {
										"references": [
											"var.auto_computed_ingress_rules",
											"var.computed_ingress_rules",
										],
									},
									"computed_ingress_with_cidr_blocks": {
										"references": [
											"var.computed_ingress_with_cidr_blocks",
										],
									},
									"computed_ingress_with_ipv6_cidr_blocks": {
										"references": [
											"var.computed_ingress_with_ipv6_cidr_blocks",
										],
									},
									"computed_ingress_with_self": {
										"references": [
											"var.auto_computed_ingress_with_self",
											"var.computed_ingress_with_self",
										],
									},
									"computed_ingress_with_source_security_group_id": {
										"references": [
											"var.computed_ingress_with_source_security_group_id",
										],
									},
									"create": {
										"references": [
											"var.create",
										],
									},
									"description": {
										"references": [
											"var.description",
										],
									},
									"egress_cidr_blocks": {
										"references": [
											"var.egress_cidr_blocks",
										],
									},
									"egress_ipv6_cidr_blocks": {
										"references": [
											"var.egress_ipv6_cidr_blocks",
										],
									},
									"egress_prefix_list_ids": {
										"references": [
											"var.egress_prefix_list_ids",
										],
									},
									"egress_rules": {
										"references": [
											"var.auto_egress_rules",
											"var.egress_rules",
										],
									},
									"egress_with_cidr_blocks": {
										"references": [
											"var.egress_with_cidr_blocks",
										],
									},
									"egress_with_ipv6_cidr_blocks": {
										"references": [
											"var.egress_with_ipv6_cidr_blocks",
										],
									},
									"egress_with_self": {
										"references": [
											"var.auto_egress_with_self",
											"var.egress_with_self",
										],
									},
									"egress_with_source_security_group_id": {
										"references": [
											"var.egress_with_source_security_group_id",
										],
									},
									"ingress_cidr_blocks": {
										"references": [
											"var.ingress_cidr_blocks",
										],
									},
									"ingress_ipv6_cidr_blocks": {
										"references": [
											"var.ingress_ipv6_cidr_blocks",
										],
									},
									"ingress_prefix_list_ids": {
										"references": [
											"var.ingress_prefix_list_ids",
										],
									},
									"ingress_rules": {
										"references": [
											"var.auto_ingress_rules",
											"var.ingress_rules",
										],
									},
									"ingress_with_cidr_blocks": {
										"references": [
											"var.ingress_with_cidr_blocks",
										],
									},
									"ingress_with_ipv6_cidr_blocks": {
										"references": [
											"var.ingress_with_ipv6_cidr_blocks",
										],
									},
									"ingress_with_self": {
										"references": [
											"var.auto_ingress_with_self",
											"var.ingress_with_self",
										],
									},
									"ingress_with_source_security_group_id": {
										"references": [
											"var.ingress_with_source_security_group_id",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"number_of_computed_egress_rules": {
										"references": [
											"var.auto_number_of_computed_egress_rules",
											"var.number_of_computed_egress_rules",
										],
									},
									"number_of_computed_egress_with_cidr_blocks": {
										"references": [
											"var.number_of_computed_egress_with_cidr_blocks",
										],
									},
									"number_of_computed_egress_with_ipv6_cidr_blocks": {
										"references": [
											"var.number_of_computed_egress_with_ipv6_cidr_blocks",
										],
									},
									"number_of_computed_egress_with_self": {
										"references": [
											"var.auto_number_of_computed_egress_with_self",
											"var.number_of_computed_egress_with_self",
										],
									},
									"number_of_computed_egress_with_source_security_group_id": {
										"references": [
											"var.number_of_computed_egress_with_source_security_group_id",
										],
									},
									"number_of_computed_ingress_rules": {
										"references": [
											"var.auto_number_of_computed_ingress_rules",
											"var.number_of_computed_ingress_rules",
										],
									},
									"number_of_computed_ingress_with_cidr_blocks": {
										"references": [
											"var.number_of_computed_ingress_with_cidr_blocks",
										],
									},
									"number_of_computed_ingress_with_ipv6_cidr_blocks": {
										"references": [
											"var.number_of_computed_ingress_with_ipv6_cidr_blocks",
										],
									},
									"number_of_computed_ingress_with_self": {
										"references": [
											"var.auto_number_of_computed_ingress_with_self",
											"var.number_of_computed_ingress_with_self",
										],
									},
									"number_of_computed_ingress_with_source_security_group_id": {
										"references": [
											"var.number_of_computed_ingress_with_source_security_group_id",
										],
									},
									"revoke_rules_on_delete": {
										"references": [
											"var.revoke_rules_on_delete",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
									"use_name_prefix": {
										"references": [
											"var.use_name_prefix",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"module": {
									"outputs": {
										"this_security_group_description": {
											"description": "The description of the security group",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
										"this_security_group_id": {
											"description": "The ID of the security group",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
										"this_security_group_name": {
											"description": "The name of the security group",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
										"this_security_group_owner_id": {
											"description": "The owner ID",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
										"this_security_group_vpc_id": {
											"description": "The VPC ID",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
									},
									"resources": [
										{
											"address": "aws_security_group.this",
											"count_expression": {
												"references": [
													"var.create",
													"var.use_name_prefix",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.description",
													],
												},
												"name": {
													"references": [
														"var.name",
													],
												},
												"revoke_rules_on_delete": {
													"references": [
														"var.revoke_rules_on_delete",
													],
												},
												"tags": {
													"references": [
														"var.name",
														"var.tags",
													],
												},
												"vpc_id": {
													"references": [
														"var.vpc_id",
													],
												},
											},
											"mode":                "managed",
											"name":                "this",
											"provider_config_key": "aws",
											"schema_version":      1,
											"type":                "aws_security_group",
										},
										{
											"address": "aws_security_group.this_name_prefix",
											"count_expression": {
												"references": [
													"var.create",
													"var.use_name_prefix",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.description",
													],
												},
												"name_prefix": {
													"references": [
														"var.name",
													],
												},
												"revoke_rules_on_delete": {
													"references": [
														"var.revoke_rules_on_delete",
													],
												},
												"tags": {
													"references": [
														"var.name",
														"var.tags",
													],
												},
												"vpc_id": {
													"references": [
														"var.vpc_id",
													],
												},
											},
											"mode":                "managed",
											"name":                "this_name_prefix",
											"provider_config_key": "aws",
											"schema_version":      1,
											"type":                "aws_security_group",
										},
										{
											"address": "aws_security_group_rule.computed_egress_rules",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_rules",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.egress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.rules",
														"var.computed_egress_rules",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.rules",
														"var.computed_egress_rules",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.egress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.rules",
														"var.computed_egress_rules",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.rules",
														"var.computed_egress_rules",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_rules",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_egress_with_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_with_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
														"var.egress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_cidr_blocks",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_with_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_with_ipv6_cidr_blocks",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.egress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_with_ipv6_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_egress_with_self",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_with_self",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
														"var.rules",
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
														"var.rules",
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"self": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
														"var.rules",
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_with_self",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_egress_with_source_security_group_id",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_with_source_security_group_id",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"source_security_group_id": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_with_source_security_group_id",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_rules",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_rules",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.ingress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.rules",
														"var.computed_ingress_rules",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.rules",
														"var.computed_ingress_rules",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.ingress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.rules",
														"var.computed_ingress_rules",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.rules",
														"var.computed_ingress_rules",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_rules",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_with_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_with_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
														"var.ingress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_with_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_with_ipv6_cidr_blocks",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.ingress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_with_ipv6_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_with_self",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_with_self",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"self": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_with_self",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_with_source_security_group_id",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_with_source_security_group_id",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"source_security_group_id": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_with_source_security_group_id",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_rules",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_rules",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.egress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.rules",
														"var.egress_rules",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.rules",
														"var.egress_rules",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.egress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.rules",
														"var.egress_rules",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.rules",
														"var.egress_rules",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_rules",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_with_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_with_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
														"var.egress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_cidr_blocks",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_with_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_with_ipv6_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_with_ipv6_cidr_blocks",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.egress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_with_ipv6_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_with_self",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_with_self",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.egress_with_self",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.egress_with_self",
														"count.index",
														"var.rules",
														"var.egress_with_self",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.egress_with_self",
														"count.index",
														"var.rules",
														"var.egress_with_self",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"self": {
													"references": [
														"var.egress_with_self",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.egress_with_self",
														"count.index",
														"var.rules",
														"var.egress_with_self",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_with_self",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_with_source_security_group_id",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_with_source_security_group_id",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"source_security_group_id": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_with_source_security_group_id",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_rules",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_rules",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.ingress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.rules",
														"var.ingress_rules",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.rules",
														"var.ingress_rules",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.ingress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.rules",
														"var.ingress_rules",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.rules",
														"var.ingress_rules",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_rules",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_with_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_with_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
														"var.ingress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_with_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_with_ipv6_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_with_ipv6_cidr_blocks",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.ingress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_with_ipv6_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_with_self",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_with_self",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.ingress_with_self",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.ingress_with_self",
														"count.index",
														"var.rules",
														"var.ingress_with_self",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.ingress_with_self",
														"count.index",
														"var.rules",
														"var.ingress_with_self",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"self": {
													"references": [
														"var.ingress_with_self",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.ingress_with_self",
														"count.index",
														"var.rules",
														"var.ingress_with_self",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_with_self",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_with_source_security_group_id",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_with_source_security_group_id",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"source_security_group_id": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_with_source_security_group_id",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
									],
									"variables": {
										"auto_groups": {
											"default": {
												"activemq": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"activemq-5671-tcp",
														"activemq-8883-tcp",
														"activemq-61614-tcp",
														"activemq-61617-tcp",
														"activemq-61619-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"alertmanager": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"alertmanager-9093-tcp",
														"alertmanager-9094-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"carbon-relay-ng": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"carbon-line-in-tcp",
														"carbon-line-in-udp",
														"carbon-pickle-tcp",
														"carbon-pickle-udp",
														"carbon-gui-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"cassandra": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"cassandra-clients-tcp",
														"cassandra-thrift-clients-tcp",
														"cassandra-jmx-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"consul": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"consul-tcp",
														"consul-cli-rpc-tcp",
														"consul-webui-tcp",
														"consul-dns-tcp",
														"consul-dns-udp",
														"consul-serf-lan-tcp",
														"consul-serf-lan-udp",
														"consul-serf-wan-tcp",
														"consul-serf-wan-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"docker-swarm": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"docker-swarm-mngmt-tcp",
														"docker-swarm-node-tcp",
														"docker-swarm-node-udp",
														"docker-swarm-overlay-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"elasticsearch": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"elasticsearch-rest-tcp",
														"elasticsearch-java-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"grafana": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"grafana-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"graphite-statsd": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"graphite-webui",
														"graphite-2003-tcp",
														"graphite-2004-tcp",
														"graphite-2023-tcp",
														"graphite-2024-tcp",
														"graphite-8080-tcp",
														"graphite-8125-tcp",
														"graphite-8125-udp",
														"graphite-8126-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"http-80": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"http-80-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"http-8080": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"http-8080-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"https-443": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"https-443-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"https-8443": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"https-8443-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ipsec-4500": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ipsec-4500-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ipsec-500": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ipsec-500-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"kafka": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"kafka-broker-tcp",
														"kafka-broker-tls-tcp",
														"kafka-jmx-exporter-tcp",
														"kafka-node-exporter-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"kibana": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"kibana-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"kubernetes-api": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"kubernetes-api-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ldap": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ldap-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ldaps": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ldaps-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"logstash": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"logstash-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"memcached": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"memcached-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"minio": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"minio-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"mongodb": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"mongodb-27017-tcp",
														"mongodb-27018-tcp",
														"mongodb-27019-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"mssql": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"mssql-tcp",
														"mssql-udp",
														"mssql-analytics-tcp",
														"mssql-broker-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"mysql": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"mysql-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"nfs": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"nfs-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"nomad": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"nomad-http-tcp",
														"nomad-rpc-tcp",
														"nomad-serf-tcp",
														"nomad-serf-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ntp": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ntp-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"openvpn": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"openvpn-udp",
														"openvpn-tcp",
														"openvpn-https-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"oracle-db": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"oracle-db-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"postgresql": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"postgresql-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"prometheus": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"prometheus-http-tcp",
														"prometheus-pushgateway-http-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"puppet": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"puppet-tcp",
														"puppetdb-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"rabbitmq": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"rabbitmq-4369-tcp",
														"rabbitmq-5671-tcp",
														"rabbitmq-5672-tcp",
														"rabbitmq-15672-tcp",
														"rabbitmq-25672-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"rdp": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"rdp-tcp",
														"rdp-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"redis": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"redis-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"redshift": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"redshift-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"solr": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"solr-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"splunk": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"splunk-indexer-tcp",
														"splunk-clients-tcp",
														"splunk-splunkd-tcp",
														"splunk-hec-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"squid": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"squid-proxy-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ssh": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ssh-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"storm": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"storm-nimbus-tcp",
														"storm-ui-tcp",
														"storm-supervisor-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"web": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"http-80-tcp",
														"http-8080-tcp",
														"https-443-tcp",
														"web-jmx-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"winrm": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"winrm-http-tcp",
														"winrm-https-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"zipkin": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"zipkin-admin-tcp",
														"zipkin-admin-query-tcp",
														"zipkin-admin-web-tcp",
														"zipkin-query-tcp",
														"zipkin-web-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"zookeeper": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"zookeeper-2181-tcp",
														"zookeeper-2888-tcp",
														"zookeeper-3888-tcp",
														"zookeeper-jmx-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
											},
											"description": "Map of groups of security group rules to use to generate modules (see update_groups.sh)",
										},
										"computed_egress_rules": {
											"default":     [],
											"description": "List of computed egress rules to create by name",
										},
										"computed_egress_with_cidr_blocks": {
											"default":     [],
											"description": "List of computed egress rules to create where 'cidr_blocks' is used",
										},
										"computed_egress_with_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of computed egress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"computed_egress_with_self": {
											"default":     [],
											"description": "List of computed egress rules to create where 'self' is defined",
										},
										"computed_egress_with_source_security_group_id": {
											"default":     [],
											"description": "List of computed egress rules to create where 'source_security_group_id' is used",
										},
										"computed_ingress_rules": {
											"default":     [],
											"description": "List of computed ingress rules to create by name",
										},
										"computed_ingress_with_cidr_blocks": {
											"default":     [],
											"description": "List of computed ingress rules to create where 'cidr_blocks' is used",
										},
										"computed_ingress_with_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"computed_ingress_with_self": {
											"default":     [],
											"description": "List of computed ingress rules to create where 'self' is defined",
										},
										"computed_ingress_with_source_security_group_id": {
											"default":     [],
											"description": "List of computed ingress rules to create where 'source_security_group_id' is used",
										},
										"create": {
											"default":     true,
											"description": "Whether to create security group and all rules",
										},
										"description": {
											"default":     "Security Group managed by Terraform",
											"description": "Description of security group",
										},
										"egress_cidr_blocks": {
											"default": [
												"0.0.0.0/0",
											],
											"description": "List of IPv4 CIDR ranges to use on all egress rules",
										},
										"egress_ipv6_cidr_blocks": {
											"default": [
												"::/0",
											],
											"description": "List of IPv6 CIDR ranges to use on all egress rules",
										},
										"egress_prefix_list_ids": {
											"default":     [],
											"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules",
										},
										"egress_rules": {
											"default":     [],
											"description": "List of egress rules to create by name",
										},
										"egress_with_cidr_blocks": {
											"default":     [],
											"description": "List of egress rules to create where 'cidr_blocks' is used",
										},
										"egress_with_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of egress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"egress_with_self": {
											"default":     [],
											"description": "List of egress rules to create where 'self' is defined",
										},
										"egress_with_source_security_group_id": {
											"default":     [],
											"description": "List of egress rules to create where 'source_security_group_id' is used",
										},
										"ingress_cidr_blocks": {
											"default":     [],
											"description": "List of IPv4 CIDR ranges to use on all ingress rules",
										},
										"ingress_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of IPv6 CIDR ranges to use on all ingress rules",
										},
										"ingress_prefix_list_ids": {
											"default":     [],
											"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules",
										},
										"ingress_rules": {
											"default":     [],
											"description": "List of ingress rules to create by name",
										},
										"ingress_with_cidr_blocks": {
											"default":     [],
											"description": "List of ingress rules to create where 'cidr_blocks' is used",
										},
										"ingress_with_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of ingress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"ingress_with_self": {
											"default":     [],
											"description": "List of ingress rules to create where 'self' is defined",
										},
										"ingress_with_source_security_group_id": {
											"default":     [],
											"description": "List of ingress rules to create where 'source_security_group_id' is used",
										},
										"name": {
											"description": "Name of security group",
										},
										"number_of_computed_egress_rules": {
											"default":     0,
											"description": "Number of computed egress rules to create by name",
										},
										"number_of_computed_egress_with_cidr_blocks": {
											"default":     0,
											"description": "Number of computed egress rules to create where 'cidr_blocks' is used",
										},
										"number_of_computed_egress_with_ipv6_cidr_blocks": {
											"default":     0,
											"description": "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"number_of_computed_egress_with_self": {
											"default":     0,
											"description": "Number of computed egress rules to create where 'self' is defined",
										},
										"number_of_computed_egress_with_source_security_group_id": {
											"default":     0,
											"description": "Number of computed egress rules to create where 'source_security_group_id' is used",
										},
										"number_of_computed_ingress_rules": {
											"default":     0,
											"description": "Number of computed ingress rules to create by name",
										},
										"number_of_computed_ingress_with_cidr_blocks": {
											"default":     0,
											"description": "Number of computed ingress rules to create where 'cidr_blocks' is used",
										},
										"number_of_computed_ingress_with_ipv6_cidr_blocks": {
											"default":     0,
											"description": "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"number_of_computed_ingress_with_self": {
											"default":     0,
											"description": "Number of computed ingress rules to create where 'self' is defined",
										},
										"number_of_computed_ingress_with_source_security_group_id": {
											"default":     0,
											"description": "Number of computed ingress rules to create where 'source_security_group_id' is used",
										},
										"revoke_rules_on_delete": {
											"default":     false,
											"description": "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR.",
										},
										"rules": {
											"default": {
												"_": [
													"",
													"",
													"",
												],
												"activemq-5671-tcp": [
													"5671",
													"5671",
													"tcp",
													"ActiveMQ AMQP",
												],
												"activemq-61614-tcp": [
													"61614",
													"61614",
													"tcp",
													"ActiveMQ STOMP",
												],
												"activemq-61617-tcp": [
													"61617",
													"61617",
													"tcp",
													"ActiveMQ OpenWire",
												],
												"activemq-61619-tcp": [
													"61619",
													"61619",
													"tcp",
													"ActiveMQ WebSocket",
												],
												"activemq-8883-tcp": [
													"8883",
													"8883",
													"tcp",
													"ActiveMQ MQTT",
												],
												"alertmanager-9093-tcp": [
													"9093",
													"9093",
													"tcp",
													"Alert Manager",
												],
												"alertmanager-9094-tcp": [
													"9094",
													"9094",
													"tcp",
													"Alert Manager Cluster",
												],
												"all-all": [
													"-1",
													"-1",
													"-1",
													"All protocols",
												],
												"all-icmp": [
													"-1",
													"-1",
													"icmp",
													"All IPV4 ICMP",
												],
												"all-ipv6-icmp": [
													"-1",
													"-1",
													"58",
													"All IPV6 ICMP",
												],
												"all-tcp": [
													"0",
													"65535",
													"tcp",
													"All TCP ports",
												],
												"all-udp": [
													"0",
													"65535",
													"udp",
													"All UDP ports",
												],
												"carbon-admin-tcp": [
													"2004",
													"2004",
													"tcp",
													"Carbon admin",
												],
												"carbon-gui-udp": [
													"8081",
													"8081",
													"tcp",
													"Carbon GUI",
												],
												"carbon-line-in-tcp": [
													"2003",
													"2003",
													"tcp",
													"Carbon line-in",
												],
												"carbon-line-in-udp": [
													"2003",
													"2003",
													"udp",
													"Carbon line-in",
												],
												"carbon-pickle-tcp": [
													"2013",
													"2013",
													"tcp",
													"Carbon pickle",
												],
												"carbon-pickle-udp": [
													"2013",
													"2013",
													"udp",
													"Carbon pickle",
												],
												"cassandra-clients-tcp": [
													"9042",
													"9042",
													"tcp",
													"Cassandra clients",
												],
												"cassandra-jmx-tcp": [
													"7199",
													"7199",
													"tcp",
													"JMX",
												],
												"cassandra-thrift-clients-tcp": [
													"9160",
													"9160",
													"tcp",
													"Cassandra Thrift clients",
												],
												"consul-cli-rpc-tcp": [
													"8400",
													"8400",
													"tcp",
													"Consul CLI RPC",
												],
												"consul-dns-tcp": [
													"8600",
													"8600",
													"tcp",
													"Consul DNS",
												],
												"consul-dns-udp": [
													"8600",
													"8600",
													"udp",
													"Consul DNS",
												],
												"consul-serf-lan-tcp": [
													"8301",
													"8301",
													"tcp",
													"Serf LAN",
												],
												"consul-serf-lan-udp": [
													"8301",
													"8301",
													"udp",
													"Serf LAN",
												],
												"consul-serf-wan-tcp": [
													"8302",
													"8302",
													"tcp",
													"Serf WAN",
												],
												"consul-serf-wan-udp": [
													"8302",
													"8302",
													"udp",
													"Serf WAN",
												],
												"consul-tcp": [
													"8300",
													"8300",
													"tcp",
													"Consul server",
												],
												"consul-webui-tcp": [
													"8500",
													"8500",
													"tcp",
													"Consul web UI",
												],
												"dns-tcp": [
													"53",
													"53",
													"tcp",
													"DNS",
												],
												"dns-udp": [
													"53",
													"53",
													"udp",
													"DNS",
												],
												"docker-swarm-mngmt-tcp": [
													"2377",
													"2377",
													"tcp",
													"Docker Swarm cluster management",
												],
												"docker-swarm-node-tcp": [
													"7946",
													"7946",
													"tcp",
													"Docker Swarm node",
												],
												"docker-swarm-node-udp": [
													"7946",
													"7946",
													"udp",
													"Docker Swarm node",
												],
												"docker-swarm-overlay-udp": [
													"4789",
													"4789",
													"udp",
													"Docker Swarm Overlay Network Traffic",
												],
												"elasticsearch-java-tcp": [
													"9300",
													"9300",
													"tcp",
													"Elasticsearch Java interface",
												],
												"elasticsearch-rest-tcp": [
													"9200",
													"9200",
													"tcp",
													"Elasticsearch REST interface",
												],
												"grafana-tcp": [
													"3000",
													"3000",
													"tcp",
													"Grafana Dashboard",
												],
												"graphite-2003-tcp": [
													"2003",
													"2003",
													"tcp",
													"Carbon receiver plain text",
												],
												"graphite-2004-tcp": [
													"2004",
													"2004",
													"tcp",
													"Carbon receiver pickle",
												],
												"graphite-2023-tcp": [
													"2023",
													"2023",
													"tcp",
													"Carbon aggregator plaintext",
												],
												"graphite-2024-tcp": [
													"2024",
													"2024",
													"tcp",
													"Carbon aggregator pickle",
												],
												"graphite-8080-tcp": [
													"8080",
													"8080",
													"tcp",
													"Graphite gunicorn port",
												],
												"graphite-8125-tcp": [
													"8125",
													"8125",
													"tcp",
													"Statsd TCP",
												],
												"graphite-8125-udp": [
													"8125",
													"8125",
													"udp",
													"Statsd UDP default",
												],
												"graphite-8126-tcp": [
													"8126",
													"8126",
													"tcp",
													"Statsd admin",
												],
												"graphite-webui": [
													"80",
													"80",
													"tcp",
													"Graphite admin interface",
												],
												"http-80-tcp": [
													"80",
													"80",
													"tcp",
													"HTTP",
												],
												"http-8080-tcp": [
													"8080",
													"8080",
													"tcp",
													"HTTP",
												],
												"https-443-tcp": [
													"443",
													"443",
													"tcp",
													"HTTPS",
												],
												"https-8443-tcp": [
													"8443",
													"8443",
													"tcp",
													"HTTPS",
												],
												"ipsec-4500-udp": [
													"4500",
													"4500",
													"udp",
													"IPSEC NAT-T",
												],
												"ipsec-500-udp": [
													"500",
													"500",
													"udp",
													"IPSEC ISAKMP",
												],
												"kafka-broker-tcp": [
													"9092",
													"9092",
													"tcp",
													"Kafka broker 0.8.2+",
												],
												"kafka-broker-tls-tcp": [
													"9094",
													"9094",
													"tcp",
													"Kafka TLS enabled broker 0.8.2+",
												],
												"kafka-jmx-exporter-tcp": [
													"11001",
													"11001",
													"tcp",
													"Kafka JMX Exporter",
												],
												"kafka-node-exporter-tcp": [
													"11002",
													"11002",
													"tcp",
													"Kafka Node Exporter",
												],
												"kibana-tcp": [
													"5601",
													"5601",
													"tcp",
													"Kibana Web Interface",
												],
												"kubernetes-api-tcp": [
													"6443",
													"6443",
													"tcp",
													"Kubernetes API Server",
												],
												"ldap-tcp": [
													"389",
													"389",
													"tcp",
													"LDAP",
												],
												"ldaps-tcp": [
													"636",
													"636",
													"tcp",
													"LDAPS",
												],
												"logstash-tcp": [
													"5044",
													"5044",
													"tcp",
													"Logstash",
												],
												"memcached-tcp": [
													"11211",
													"11211",
													"tcp",
													"Memcached",
												],
												"minio-tcp": [
													"9000",
													"9000",
													"tcp",
													"MinIO",
												],
												"mongodb-27017-tcp": [
													"27017",
													"27017",
													"tcp",
													"MongoDB",
												],
												"mongodb-27018-tcp": [
													"27018",
													"27018",
													"tcp",
													"MongoDB shard",
												],
												"mongodb-27019-tcp": [
													"27019",
													"27019",
													"tcp",
													"MongoDB config server",
												],
												"mssql-analytics-tcp": [
													"2383",
													"2383",
													"tcp",
													"MSSQL Analytics",
												],
												"mssql-broker-tcp": [
													"4022",
													"4022",
													"tcp",
													"MSSQL Broker",
												],
												"mssql-tcp": [
													"1433",
													"1433",
													"tcp",
													"MSSQL Server",
												],
												"mssql-udp": [
													"1434",
													"1434",
													"udp",
													"MSSQL Browser",
												],
												"mysql-tcp": [
													"3306",
													"3306",
													"tcp",
													"MySQL/Aurora",
												],
												"nfs-tcp": [
													"2049",
													"2049",
													"tcp",
													"NFS/EFS",
												],
												"nomad-http-tcp": [
													"4646",
													"4646",
													"tcp",
													"Nomad HTTP",
												],
												"nomad-rpc-tcp": [
													"4647",
													"4647",
													"tcp",
													"Nomad RPC",
												],
												"nomad-serf-tcp": [
													"4648",
													"4648",
													"tcp",
													"Serf",
												],
												"nomad-serf-udp": [
													"4648",
													"4648",
													"udp",
													"Serf",
												],
												"ntp-udp": [
													"123",
													"123",
													"udp",
													"NTP",
												],
												"openvpn-https-tcp": [
													"443",
													"443",
													"tcp",
													"OpenVPN",
												],
												"openvpn-tcp": [
													"943",
													"943",
													"tcp",
													"OpenVPN",
												],
												"openvpn-udp": [
													"1194",
													"1194",
													"udp",
													"OpenVPN",
												],
												"oracle-db-tcp": [
													"1521",
													"1521",
													"tcp",
													"Oracle",
												],
												"postgresql-tcp": [
													"5432",
													"5432",
													"tcp",
													"PostgreSQL",
												],
												"prometheus-http-tcp": [
													"9090",
													"9090",
													"tcp",
													"Prometheus",
												],
												"prometheus-pushgateway-http-tcp": [
													"9091",
													"9091",
													"tcp",
													"Prometheus Pushgateway",
												],
												"puppet-tcp": [
													"8140",
													"8140",
													"tcp",
													"Puppet",
												],
												"puppetdb-tcp": [
													"8081",
													"8081",
													"tcp",
													"PuppetDB",
												],
												"rabbitmq-15672-tcp": [
													"15672",
													"15672",
													"tcp",
													"RabbitMQ",
												],
												"rabbitmq-25672-tcp": [
													"25672",
													"25672",
													"tcp",
													"RabbitMQ",
												],
												"rabbitmq-4369-tcp": [
													"4369",
													"4369",
													"tcp",
													"RabbitMQ epmd",
												],
												"rabbitmq-5671-tcp": [
													"5671",
													"5671",
													"tcp",
													"RabbitMQ",
												],
												"rabbitmq-5672-tcp": [
													"5672",
													"5672",
													"tcp",
													"RabbitMQ",
												],
												"rdp-tcp": [
													"3389",
													"3389",
													"tcp",
													"Remote Desktop",
												],
												"rdp-udp": [
													"3389",
													"3389",
													"udp",
													"Remote Desktop",
												],
												"redis-tcp": [
													"6379",
													"6379",
													"tcp",
													"Redis",
												],
												"redshift-tcp": [
													"5439",
													"5439",
													"tcp",
													"Redshift",
												],
												"solr-tcp": [
													"8983",
													"8987",
													"tcp",
													"Solr",
												],
												"splunk-hec-tcp": [
													"8088",
													"8088",
													"tcp",
													"Splunk HEC",
												],
												"splunk-indexer-tcp": [
													"9997",
													"9997",
													"tcp",
													"Splunk indexer",
												],
												"splunk-splunkd-tcp": [
													"8089",
													"8089",
													"tcp",
													"Splunkd",
												],
												"splunk-web-tcp": [
													"8000",
													"8000",
													"tcp",
													"Splunk Web",
												],
												"squid-proxy-tcp": [
													"3128",
													"3128",
													"tcp",
													"Squid default proxy",
												],
												"ssh-tcp": [
													"22",
													"22",
													"tcp",
													"SSH",
												],
												"storm-nimbus-tcp": [
													"6627",
													"6627",
													"tcp",
													"Nimbus",
												],
												"storm-supervisor-tcp": [
													"6700",
													"6703",
													"tcp",
													"Supervisor",
												],
												"storm-ui-tcp": [
													"8080",
													"8080",
													"tcp",
													"Storm UI",
												],
												"web-jmx-tcp": [
													"1099",
													"1099",
													"tcp",
													"JMX",
												],
												"winrm-http-tcp": [
													"5985",
													"5985",
													"tcp",
													"WinRM HTTP",
												],
												"winrm-https-tcp": [
													"5986",
													"5986",
													"tcp",
													"WinRM HTTPS",
												],
												"zipkin-admin-query-tcp": [
													"9901",
													"9901",
													"tcp",
													"Zipkin Admin port query",
												],
												"zipkin-admin-tcp": [
													"9990",
													"9990",
													"tcp",
													"Zipkin Admin port collector",
												],
												"zipkin-admin-web-tcp": [
													"9991",
													"9991",
													"tcp",
													"Zipkin Admin port web",
												],
												"zipkin-query-tcp": [
													"9411",
													"9411",
													"tcp",
													"Zipkin query port",
												],
												"zipkin-web-tcp": [
													"8080",
													"8080",
													"tcp",
													"Zipkin web port",
												],
												"zookeeper-2181-tcp": [
													"2181",
													"2181",
													"tcp",
													"Zookeeper",
												],
												"zookeeper-2888-tcp": [
													"2888",
													"2888",
													"tcp",
													"Zookeeper",
												],
												"zookeeper-3888-tcp": [
													"3888",
													"3888",
													"tcp",
													"Zookeeper",
												],
												"zookeeper-jmx-tcp": [
													"7199",
													"7199",
													"tcp",
													"JMX",
												],
											},
											"description": "Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])",
										},
										"tags": {
											"default":     {},
											"description": "A mapping of tags to assign to security group",
										},
										"use_name_prefix": {
											"default":     true,
											"description": "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation",
										},
										"vpc_id": {
											"description": "ID of the VPC where to create security group",
										},
									},
								},
								"source": "../../",
							},
						},
						"outputs": {
							"this_security_group_description": {
								"description": "The description of the security group",
								"expression": {
									"references": [
										"module.sg.this_security_group_description",
										"module.sg",
									],
								},
							},
							"this_security_group_id": {
								"description": "The ID of the security group",
								"expression": {
									"references": [
										"module.sg.this_security_group_id",
										"module.sg",
									],
								},
							},
							"this_security_group_name": {
								"description": "The name of the security group",
								"expression": {
									"references": [
										"module.sg.this_security_group_name",
										"module.sg",
									],
								},
							},
							"this_security_group_owner_id": {
								"description": "The owner ID",
								"expression": {
									"references": [
										"module.sg.this_security_group_owner_id",
										"module.sg",
									],
								},
							},
							"this_security_group_vpc_id": {
								"description": "The VPC ID",
								"expression": {
									"references": [
										"module.sg.this_security_group_vpc_id",
										"module.sg",
									],
								},
							},
						},
						"variables": {
							"auto_computed_egress_rules": {
								"default":     [],
								"description": "List of computed egress rules to add automatically",
							},
							"auto_computed_egress_with_self": {
								"default":     [],
								"description": "List of maps defining computed egress rules with self to add automatically",
							},
							"auto_computed_ingress_rules": {
								"default":     [],
								"description": "List of ingress rules to add automatically",
							},
							"auto_computed_ingress_with_self": {
								"default":     [],
								"description": "List of maps defining computed ingress rules with self to add automatically",
							},
							"auto_egress_rules": {
								"default": [
									"all-all",
								],
								"description": "List of egress rules to add automatically",
							},
							"auto_egress_with_self": {
								"default":     [],
								"description": "List of maps defining egress rules with self to add automatically",
							},
							"auto_ingress_rules": {
								"default": [
									"http-80-tcp",
									"http-8080-tcp",
									"https-443-tcp",
									"web-jmx-tcp",
								],
								"description": "List of ingress rules to add automatically",
							},
							"auto_ingress_with_self": {
								"default": [
									{
										"rule": "all-all",
									},
								],
								"description": "List of maps defining ingress rules with self to add automatically",
							},
							"auto_number_of_computed_egress_rules": {
								"default":     0,
								"description": "Number of computed egress rules to create by name",
							},
							"auto_number_of_computed_egress_with_self": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'self' is defined",
							},
							"auto_number_of_computed_ingress_rules": {
								"default":     0,
								"description": "Number of computed ingress rules to create by name",
							},
							"auto_number_of_computed_ingress_with_self": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'self' is defined",
							},
							"computed_egress_cidr_blocks": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of IPv4 CIDR ranges to use on all computed egress rules",
							},
							"computed_egress_ipv6_cidr_blocks": {
								"default": [
									"::/0",
								],
								"description": "List of IPv6 CIDR ranges to use on all computed egress rules",
							},
							"computed_egress_prefix_list_ids": {
								"default":     [],
								"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules",
							},
							"computed_egress_rules": {
								"default":     [],
								"description": "List of computed egress rules to create by name",
							},
							"computed_egress_with_cidr_blocks": {
								"default":     [],
								"description": "List of computed egress rules to create where 'cidr_blocks' is used",
							},
							"computed_egress_with_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of computed egress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"computed_egress_with_self": {
								"default":     [],
								"description": "List of computed egress rules to create where 'self' is defined",
							},
							"computed_egress_with_source_security_group_id": {
								"default":     [],
								"description": "List of computed egress rules to create where 'source_security_group_id' is used",
							},
							"computed_ingress_cidr_blocks": {
								"default":     [],
								"description": "List of IPv4 CIDR ranges to use on all computed ingress rules",
							},
							"computed_ingress_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of IPv6 CIDR ranges to use on all computed ingress rules",
							},
							"computed_ingress_prefix_list_ids": {
								"default":     [],
								"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules",
							},
							"computed_ingress_rules": {
								"default":     [],
								"description": "List of computed ingress rules to create by name",
							},
							"computed_ingress_with_cidr_blocks": {
								"default":     [],
								"description": "List of computed ingress rules to create where 'cidr_blocks' is used",
							},
							"computed_ingress_with_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"computed_ingress_with_self": {
								"default":     [],
								"description": "List of computed ingress rules to create where 'self' is defined",
							},
							"computed_ingress_with_source_security_group_id": {
								"default":     [],
								"description": "List of computed ingress rules to create where 'source_security_group_id' is used",
							},
							"create": {
								"default":     true,
								"description": "Whether to create security group and all rules",
							},
							"description": {
								"default":     "Security Group managed by Terraform",
								"description": "Description of security group",
							},
							"egress_cidr_blocks": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of IPv4 CIDR ranges to use on all egress rules",
							},
							"egress_ipv6_cidr_blocks": {
								"default": [
									"::/0",
								],
								"description": "List of IPv6 CIDR ranges to use on all egress rules",
							},
							"egress_prefix_list_ids": {
								"default":     [],
								"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules",
							},
							"egress_rules": {
								"default":     [],
								"description": "List of egress rules to create by name",
							},
							"egress_with_cidr_blocks": {
								"default":     [],
								"description": "List of egress rules to create where 'cidr_blocks' is used",
							},
							"egress_with_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of egress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"egress_with_self": {
								"default":     [],
								"description": "List of egress rules to create where 'self' is defined",
							},
							"egress_with_source_security_group_id": {
								"default":     [],
								"description": "List of egress rules to create where 'source_security_group_id' is used",
							},
							"ingress_cidr_blocks": {
								"default":     [],
								"description": "List of IPv4 CIDR ranges to use on all ingress rules",
							},
							"ingress_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of IPv6 CIDR ranges to use on all ingress rules",
							},
							"ingress_prefix_list_ids": {
								"default":     [],
								"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules",
							},
							"ingress_rules": {
								"default":     [],
								"description": "List of ingress rules to create by name",
							},
							"ingress_with_cidr_blocks": {
								"default":     [],
								"description": "List of ingress rules to create where 'cidr_blocks' is used",
							},
							"ingress_with_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of ingress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"ingress_with_self": {
								"default":     [],
								"description": "List of ingress rules to create where 'self' is defined",
							},
							"ingress_with_source_security_group_id": {
								"default":     [],
								"description": "List of ingress rules to create where 'source_security_group_id' is used",
							},
							"name": {
								"description": "Name of security group",
							},
							"number_of_computed_egress_cidr_blocks": {
								"default":     0,
								"description": "Number of IPv4 CIDR ranges to use on all computed egress rules",
							},
							"number_of_computed_egress_ipv6_cidr_blocks": {
								"default":     0,
								"description": "Number of IPv6 CIDR ranges to use on all computed egress rules",
							},
							"number_of_computed_egress_prefix_list_ids": {
								"default":     0,
								"description": "Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules",
							},
							"number_of_computed_egress_rules": {
								"default":     0,
								"description": "Number of computed egress rules to create by name",
							},
							"number_of_computed_egress_with_cidr_blocks": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'cidr_blocks' is used",
							},
							"number_of_computed_egress_with_ipv6_cidr_blocks": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"number_of_computed_egress_with_self": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'self' is defined",
							},
							"number_of_computed_egress_with_source_security_group_id": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'source_security_group_id' is used",
							},
							"number_of_computed_ingress_cidr_blocks": {
								"default":     0,
								"description": "Number of IPv4 CIDR ranges to use on all computed ingress rules",
							},
							"number_of_computed_ingress_ipv6_cidr_blocks": {
								"default":     0,
								"description": "Number of IPv6 CIDR ranges to use on all computed ingress rules",
							},
							"number_of_computed_ingress_prefix_list_ids": {
								"default":     0,
								"description": "Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules",
							},
							"number_of_computed_ingress_rules": {
								"default":     0,
								"description": "Number of computed ingress rules to create by name",
							},
							"number_of_computed_ingress_with_cidr_blocks": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'cidr_blocks' is used",
							},
							"number_of_computed_ingress_with_ipv6_cidr_blocks": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"number_of_computed_ingress_with_self": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'self' is defined",
							},
							"number_of_computed_ingress_with_source_security_group_id": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'source_security_group_id' is used",
							},
							"revoke_rules_on_delete": {
								"default":     false,
								"description": "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR.",
							},
							"tags": {
								"default":     {},
								"description": "A mapping of tags to assign to security group",
							},
							"use_name_prefix": {
								"default":     true,
								"description": "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation",
							},
							"vpc_id": {
								"description": "ID of the VPC where to create security group",
							},
						},
					},
					"source":             "terraform-aws-modules/security-group/aws//modules/web",
					"version_constraint": "3.17.0",
				},
				"ec2_instances": {
					"expressions": {
						"instance_count": {
							"references": [
								"var.instance_count",
							],
						},
						"instance_type": {
							"references": [
								"var.instance_type",
							],
						},
						"security_group_ids": {
							"references": [
								"module.app_security_group.this_security_group_id",
								"module.app_security_group",
							],
						},
						"subnet_ids": {
							"references": [
								"module.vpc.private_subnets",
								"module.vpc",
							],
						},
						"tags": {
							"constant_value": {
								"environment": "development",
								"project":     "project-alpha",
							},
						},
					},
					"module": {
						"outputs": {
							"instance_ids": {
								"description": "IDs of EC2 instances",
								"expression": {
									"references": [
										"aws_instance.app",
									],
								},
							},
						},
						"resources": [
							{
								"address": "aws_instance.app",
								"count_expression": {
									"references": [
										"var.instance_count",
									],
								},
								"expressions": {
									"ami": {
										"references": [
											"data.aws_ami.amazon_linux.id",
											"data.aws_ami.amazon_linux",
										],
									},
									"instance_type": {
										"references": [
											"var.instance_type",
										],
									},
									"subnet_id": {
										"references": [
											"var.subnet_ids",
											"count.index",
											"var.subnet_ids",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
									"user_data": {
										"constant_value": "#!/bin/bash\nsudo yum update -y\nsudo yum install httpd -y\nsudo systemctl enable httpd\nsudo systemctl start httpd\necho \"<html><body><div>Hello, world!</div></body></html>\" > /var/www/html/index.html\n",
									},
									"vpc_security_group_ids": {
										"references": [
											"var.security_group_ids",
										],
									},
								},
								"mode":                "managed",
								"name":                "app",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_instance",
							},
							{
								"address": "data.aws_ami.amazon_linux",
								"expressions": {
									"filter": [
										{
											"name": {
												"constant_value": "name",
											},
											"values": {
												"constant_value": [
													"amzn2-ami-hvm-*-x86_64-gp2",
												],
											},
										},
									],
									"most_recent": {
										"constant_value": true,
									},
									"owners": {
										"constant_value": [
											"amazon",
										],
									},
								},
								"mode":                "data",
								"name":                "amazon_linux",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_ami",
							},
						],
						"variables": {
							"instance_count": {
								"description": "Number of EC2 instances to deploy",
							},
							"instance_type": {
								"description": "Type of EC2 instance to use",
							},
							"security_group_ids": {
								"description": "Security group IDs for EC2 instances",
							},
							"subnet_ids": {
								"description": "Subnet IDs for EC2 instances",
							},
							"tags": {
								"default":     {},
								"description": "Tags for instances",
							},
						},
					},
					"source": "./modules/aws-instance",
				},
				"elb_http": {
					"expressions": {
						"health_check": {
							"constant_value": {
								"healthy_threshold":   3,
								"interval":            10,
								"target":              "HTTP:80/index.html",
								"timeout":             5,
								"unhealthy_threshold": 10,
							},
						},
						"instances": {
							"references": [
								"module.ec2_instances.instance_ids",
								"module.ec2_instances",
							],
						},
						"internal": {
							"constant_value": false,
						},
						"listener": {
							"constant_value": [
								{
									"instance_port":     "80",
									"instance_protocol": "HTTP",
									"lb_port":           "80",
									"lb_protocol":       "HTTP",
								},
							],
						},
						"name": {
							"references": [
								"random_string.lb_id.result",
								"random_string.lb_id",
							],
						},
						"number_of_instances": {
							"references": [
								"module.ec2_instances.instance_ids",
								"module.ec2_instances",
							],
						},
						"security_groups": {
							"references": [
								"module.lb_security_group.this_security_group_id",
								"module.lb_security_group",
							],
						},
						"subnets": {
							"references": [
								"module.vpc.public_subnets",
								"module.vpc",
							],
						},
						"tags": {
							"constant_value": {
								"environment": "development",
								"project":     "project-alpha",
							},
						},
					},
					"module": {
						"module_calls": {
							"elb": {
								"expressions": {
									"access_logs": {
										"references": [
											"var.access_logs",
										],
									},
									"connection_draining": {
										"references": [
											"var.connection_draining",
										],
									},
									"connection_draining_timeout": {
										"references": [
											"var.connection_draining_timeout",
										],
									},
									"create_elb": {
										"references": [
											"var.create_elb",
										],
									},
									"cross_zone_load_balancing": {
										"references": [
											"var.cross_zone_load_balancing",
										],
									},
									"health_check": {
										"references": [
											"var.health_check",
										],
									},
									"idle_timeout": {
										"references": [
											"var.idle_timeout",
										],
									},
									"internal": {
										"references": [
											"var.internal",
										],
									},
									"listener": {
										"references": [
											"var.listener",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"name_prefix": {
										"references": [
											"var.name_prefix",
										],
									},
									"security_groups": {
										"references": [
											"var.security_groups",
										],
									},
									"subnets": {
										"references": [
											"var.subnets",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.name",
										],
									},
								},
								"module": {
									"outputs": {
										"this_elb_arn": {
											"description": "The ARN of the ELB",
											"expression": {
												"references": [
													"aws_elb.this",
												],
											},
										},
										"this_elb_dns_name": {
											"description": "The DNS name of the ELB",
											"expression": {
												"references": [
													"aws_elb.this",
												],
											},
										},
										"this_elb_id": {
											"description": "The name of the ELB",
											"expression": {
												"references": [
													"aws_elb.this",
												],
											},
										},
										"this_elb_instances": {
											"description": "The list of instances in the ELB",
											"expression": {
												"references": [
													"aws_elb.this",
												],
											},
										},
										"this_elb_name": {
											"description": "The name of the ELB",
											"expression": {
												"references": [
													"aws_elb.this",
												],
											},
										},
										"this_elb_source_security_group": {
											"description": "The name of the security group that you can use as part of your inbound rules for your load balancer's back-end application instances. Use this for Classic or Default VPC only.",
											"expression": {
												"references": [
													"aws_elb.this",
												],
											},
										},
										"this_elb_source_security_group_id": {
											"description": "The ID of the security group that you can use as part of your inbound rules for your load balancer's back-end application instances. Only available on ELBs launched in a VPC.",
											"expression": {
												"references": [
													"aws_elb.this",
												],
											},
										},
										"this_elb_zone_id": {
											"description": "The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)",
											"expression": {
												"references": [
													"aws_elb.this",
												],
											},
										},
									},
									"resources": [
										{
											"address": "aws_elb.this",
											"count_expression": {
												"references": [
													"var.create_elb",
												],
											},
											"expressions": {
												"connection_draining": {
													"references": [
														"var.connection_draining",
													],
												},
												"connection_draining_timeout": {
													"references": [
														"var.connection_draining_timeout",
													],
												},
												"cross_zone_load_balancing": {
													"references": [
														"var.cross_zone_load_balancing",
													],
												},
												"health_check": [
													{
														"healthy_threshold": {
															"references": [
																"var.health_check",
															],
														},
														"interval": {
															"references": [
																"var.health_check",
															],
														},
														"target": {
															"references": [
																"var.health_check",
															],
														},
														"timeout": {
															"references": [
																"var.health_check",
															],
														},
														"unhealthy_threshold": {
															"references": [
																"var.health_check",
															],
														},
													},
												],
												"idle_timeout": {
													"references": [
														"var.idle_timeout",
													],
												},
												"internal": {
													"references": [
														"var.internal",
													],
												},
												"name": {
													"references": [
														"var.name",
													],
												},
												"name_prefix": {
													"references": [
														"var.name_prefix",
													],
												},
												"security_groups": {
													"references": [
														"var.security_groups",
													],
												},
												"subnets": {
													"references": [
														"var.subnets",
													],
												},
												"tags": {
													"references": [
														"var.tags",
														"var.name",
													],
												},
											},
											"mode":                "managed",
											"name":                "this",
											"provider_config_key": "module.elb_http.module.elb:aws",
											"schema_version":      0,
											"type":                "aws_elb",
										},
									],
									"variables": {
										"access_logs": {
											"default":     {},
											"description": "An access logs block",
										},
										"connection_draining": {
											"default":     false,
											"description": "Boolean to enable connection draining",
										},
										"connection_draining_timeout": {
											"default":     300,
											"description": "The time in seconds to allow for connections to drain",
										},
										"create_elb": {
											"default":     true,
											"description": "Create the elb or not",
										},
										"cross_zone_load_balancing": {
											"default":     true,
											"description": "Enable cross-zone load balancing",
										},
										"health_check": {
											"description": "A health check block",
										},
										"idle_timeout": {
											"default":     60,
											"description": "The time in seconds that the connection is allowed to be idle",
										},
										"internal": {
											"description": "If true, ELB will be an internal ELB",
										},
										"listener": {
											"description": "A list of listener blocks",
										},
										"name": {
											"description": "The name of the ELB",
										},
										"name_prefix": {
											"description": "The prefix name of the ELB",
										},
										"security_groups": {
											"description": "A list of security group IDs to assign to the ELB",
										},
										"subnets": {
											"description": "A list of subnet IDs to attach to the ELB",
										},
										"tags": {
											"default":     {},
											"description": "A mapping of tags to assign to the resource",
										},
									},
								},
								"source": "./modules/elb",
							},
							"elb_attachment": {
								"expressions": {
									"create_attachment": {
										"references": [
											"var.create_elb",
										],
									},
									"elb": {
										"references": [
											"module.elb.this_elb_id",
											"module.elb",
										],
									},
									"instances": {
										"references": [
											"var.instances",
										],
									},
									"number_of_instances": {
										"references": [
											"var.number_of_instances",
										],
									},
								},
								"module": {
									"resources": [
										{
											"address": "aws_elb_attachment.this",
											"count_expression": {
												"references": [
													"var.create_attachment",
													"var.number_of_instances",
												],
											},
											"expressions": {
												"elb": {
													"references": [
														"var.elb",
													],
												},
												"instance": {
													"references": [
														"var.instances",
														"count.index",
													],
												},
											},
											"mode":                "managed",
											"name":                "this",
											"provider_config_key": "module.elb_http.module.elb_attachment:aws",
											"schema_version":      0,
											"type":                "aws_elb_attachment",
										},
									],
									"variables": {
										"create_attachment": {
											"default":     true,
											"description": "Create the elb attachment or not",
										},
										"elb": {
											"description": "The name of the ELB",
										},
										"instances": {
											"description": "List of instances ID to place in the ELB pool",
										},
										"number_of_instances": {
											"description": "Number of instances ID to place in the ELB pool",
										},
									},
								},
								"source": "./modules/elb_attachment",
							},
						},
						"outputs": {
							"this_elb_arn": {
								"description": "The ARN of the ELB",
								"expression": {
									"references": [
										"module.elb.this_elb_arn",
										"module.elb",
									],
								},
							},
							"this_elb_dns_name": {
								"description": "The DNS name of the ELB",
								"expression": {
									"references": [
										"module.elb.this_elb_dns_name",
										"module.elb",
									],
								},
							},
							"this_elb_id": {
								"description": "The name of the ELB",
								"expression": {
									"references": [
										"module.elb.this_elb_id",
										"module.elb",
									],
								},
							},
							"this_elb_instances": {
								"description": "The list of instances in the ELB",
								"expression": {
									"references": [
										"module.elb.this_elb_instances",
										"module.elb",
									],
								},
							},
							"this_elb_name": {
								"description": "The name of the ELB",
								"expression": {
									"references": [
										"module.elb.this_elb_name",
										"module.elb",
									],
								},
							},
							"this_elb_source_security_group_id": {
								"description": "The ID of the security group that you can use as part of your inbound rules for your load balancer's back-end application instances",
								"expression": {
									"references": [
										"module.elb.this_elb_source_security_group_id",
										"module.elb",
									],
								},
							},
							"this_elb_zone_id": {
								"description": "The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)",
								"expression": {
									"references": [
										"module.elb.this_elb_zone_id",
										"module.elb",
									],
								},
							},
						},
						"variables": {
							"access_logs": {
								"default":     {},
								"description": "An access logs block",
							},
							"connection_draining": {
								"default":     false,
								"description": "Boolean to enable connection draining",
							},
							"connection_draining_timeout": {
								"default":     300,
								"description": "The time in seconds to allow for connections to drain",
							},
							"create_elb": {
								"default":     true,
								"description": "Create the elb or not",
							},
							"cross_zone_load_balancing": {
								"default":     true,
								"description": "Enable cross-zone load balancing",
							},
							"health_check": {
								"description": "A health check block",
							},
							"idle_timeout": {
								"default":     60,
								"description": "The time in seconds that the connection is allowed to be idle",
							},
							"instances": {
								"default":     [],
								"description": "List of instances ID to place in the ELB pool",
							},
							"internal": {
								"default":     false,
								"description": "If true, ELB will be an internal ELB",
							},
							"listener": {
								"description": "A list of listener blocks",
							},
							"name": {
								"description": "The name of the ELB",
							},
							"name_prefix": {
								"description": "The prefix name of the ELB",
							},
							"number_of_instances": {
								"default":     0,
								"description": "Number of instances to attach to ELB",
							},
							"security_groups": {
								"description": "A list of security group IDs to assign to the ELB",
							},
							"subnets": {
								"description": "A list of subnet IDs to attach to the ELB",
							},
							"tags": {
								"default":     {},
								"description": "A mapping of tags to assign to the resource",
							},
						},
					},
					"source":             "terraform-aws-modules/elb/aws",
					"version_constraint": "2.4.0",
				},
				"lb_security_group": {
					"expressions": {
						"description": {
							"constant_value": "Security group for load balancer with HTTP ports open within VPC",
						},
						"ingress_cidr_blocks": {
							"constant_value": [
								"10.0.0.0/16",
							],
						},
						"ingress_with_cidr_blocks": {
							"constant_value": [
								{
									"cidr_blocks": "10.0.0.0/16",
									"description": "SSH restricted to internal network",
									"from_port":   22,
									"protocol":    "tcp",
									"to_port":     22,
								},
							],
						},
						"name": {
							"constant_value": "lb-sg-project-alpha-dev",
						},
						"tags": {
							"constant_value": {
								"environment": "development",
								"project":     "project-alpha",
							},
						},
						"vpc_id": {
							"references": [
								"module.vpc.vpc_id",
								"module.vpc",
							],
						},
					},
					"module": {
						"module_calls": {
							"sg": {
								"expressions": {
									"computed_egress_rules": {
										"references": [
											"var.auto_computed_egress_rules",
											"var.computed_egress_rules",
										],
									},
									"computed_egress_with_cidr_blocks": {
										"references": [
											"var.computed_egress_with_cidr_blocks",
										],
									},
									"computed_egress_with_ipv6_cidr_blocks": {
										"references": [
											"var.computed_egress_with_ipv6_cidr_blocks",
										],
									},
									"computed_egress_with_self": {
										"references": [
											"var.auto_computed_egress_with_self",
											"var.computed_egress_with_self",
										],
									},
									"computed_egress_with_source_security_group_id": {
										"references": [
											"var.computed_egress_with_source_security_group_id",
										],
									},
									"computed_ingress_rules": {
										"references": [
											"var.auto_computed_ingress_rules",
											"var.computed_ingress_rules",
										],
									},
									"computed_ingress_with_cidr_blocks": {
										"references": [
											"var.computed_ingress_with_cidr_blocks",
										],
									},
									"computed_ingress_with_ipv6_cidr_blocks": {
										"references": [
											"var.computed_ingress_with_ipv6_cidr_blocks",
										],
									},
									"computed_ingress_with_self": {
										"references": [
											"var.auto_computed_ingress_with_self",
											"var.computed_ingress_with_self",
										],
									},
									"computed_ingress_with_source_security_group_id": {
										"references": [
											"var.computed_ingress_with_source_security_group_id",
										],
									},
									"create": {
										"references": [
											"var.create",
										],
									},
									"description": {
										"references": [
											"var.description",
										],
									},
									"egress_cidr_blocks": {
										"references": [
											"var.egress_cidr_blocks",
										],
									},
									"egress_ipv6_cidr_blocks": {
										"references": [
											"var.egress_ipv6_cidr_blocks",
										],
									},
									"egress_prefix_list_ids": {
										"references": [
											"var.egress_prefix_list_ids",
										],
									},
									"egress_rules": {
										"references": [
											"var.auto_egress_rules",
											"var.egress_rules",
										],
									},
									"egress_with_cidr_blocks": {
										"references": [
											"var.egress_with_cidr_blocks",
										],
									},
									"egress_with_ipv6_cidr_blocks": {
										"references": [
											"var.egress_with_ipv6_cidr_blocks",
										],
									},
									"egress_with_self": {
										"references": [
											"var.auto_egress_with_self",
											"var.egress_with_self",
										],
									},
									"egress_with_source_security_group_id": {
										"references": [
											"var.egress_with_source_security_group_id",
										],
									},
									"ingress_cidr_blocks": {
										"references": [
											"var.ingress_cidr_blocks",
										],
									},
									"ingress_ipv6_cidr_blocks": {
										"references": [
											"var.ingress_ipv6_cidr_blocks",
										],
									},
									"ingress_prefix_list_ids": {
										"references": [
											"var.ingress_prefix_list_ids",
										],
									},
									"ingress_rules": {
										"references": [
											"var.auto_ingress_rules",
											"var.ingress_rules",
										],
									},
									"ingress_with_cidr_blocks": {
										"references": [
											"var.ingress_with_cidr_blocks",
										],
									},
									"ingress_with_ipv6_cidr_blocks": {
										"references": [
											"var.ingress_with_ipv6_cidr_blocks",
										],
									},
									"ingress_with_self": {
										"references": [
											"var.auto_ingress_with_self",
											"var.ingress_with_self",
										],
									},
									"ingress_with_source_security_group_id": {
										"references": [
											"var.ingress_with_source_security_group_id",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"number_of_computed_egress_rules": {
										"references": [
											"var.auto_number_of_computed_egress_rules",
											"var.number_of_computed_egress_rules",
										],
									},
									"number_of_computed_egress_with_cidr_blocks": {
										"references": [
											"var.number_of_computed_egress_with_cidr_blocks",
										],
									},
									"number_of_computed_egress_with_ipv6_cidr_blocks": {
										"references": [
											"var.number_of_computed_egress_with_ipv6_cidr_blocks",
										],
									},
									"number_of_computed_egress_with_self": {
										"references": [
											"var.auto_number_of_computed_egress_with_self",
											"var.number_of_computed_egress_with_self",
										],
									},
									"number_of_computed_egress_with_source_security_group_id": {
										"references": [
											"var.number_of_computed_egress_with_source_security_group_id",
										],
									},
									"number_of_computed_ingress_rules": {
										"references": [
											"var.auto_number_of_computed_ingress_rules",
											"var.number_of_computed_ingress_rules",
										],
									},
									"number_of_computed_ingress_with_cidr_blocks": {
										"references": [
											"var.number_of_computed_ingress_with_cidr_blocks",
										],
									},
									"number_of_computed_ingress_with_ipv6_cidr_blocks": {
										"references": [
											"var.number_of_computed_ingress_with_ipv6_cidr_blocks",
										],
									},
									"number_of_computed_ingress_with_self": {
										"references": [
											"var.auto_number_of_computed_ingress_with_self",
											"var.number_of_computed_ingress_with_self",
										],
									},
									"number_of_computed_ingress_with_source_security_group_id": {
										"references": [
											"var.number_of_computed_ingress_with_source_security_group_id",
										],
									},
									"revoke_rules_on_delete": {
										"references": [
											"var.revoke_rules_on_delete",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
									"use_name_prefix": {
										"references": [
											"var.use_name_prefix",
										],
									},
									"vpc_id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"module": {
									"outputs": {
										"this_security_group_description": {
											"description": "The description of the security group",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
										"this_security_group_id": {
											"description": "The ID of the security group",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
										"this_security_group_name": {
											"description": "The name of the security group",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
										"this_security_group_owner_id": {
											"description": "The owner ID",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
										"this_security_group_vpc_id": {
											"description": "The VPC ID",
											"expression": {
												"references": [
													"aws_security_group.this",
													"aws_security_group.this_name_prefix",
												],
											},
										},
									},
									"resources": [
										{
											"address": "aws_security_group.this",
											"count_expression": {
												"references": [
													"var.create",
													"var.use_name_prefix",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.description",
													],
												},
												"name": {
													"references": [
														"var.name",
													],
												},
												"revoke_rules_on_delete": {
													"references": [
														"var.revoke_rules_on_delete",
													],
												},
												"tags": {
													"references": [
														"var.name",
														"var.tags",
													],
												},
												"vpc_id": {
													"references": [
														"var.vpc_id",
													],
												},
											},
											"mode":                "managed",
											"name":                "this",
											"provider_config_key": "aws",
											"schema_version":      1,
											"type":                "aws_security_group",
										},
										{
											"address": "aws_security_group.this_name_prefix",
											"count_expression": {
												"references": [
													"var.create",
													"var.use_name_prefix",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.description",
													],
												},
												"name_prefix": {
													"references": [
														"var.name",
													],
												},
												"revoke_rules_on_delete": {
													"references": [
														"var.revoke_rules_on_delete",
													],
												},
												"tags": {
													"references": [
														"var.name",
														"var.tags",
													],
												},
												"vpc_id": {
													"references": [
														"var.vpc_id",
													],
												},
											},
											"mode":                "managed",
											"name":                "this_name_prefix",
											"provider_config_key": "aws",
											"schema_version":      1,
											"type":                "aws_security_group",
										},
										{
											"address": "aws_security_group_rule.computed_egress_rules",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_rules",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.egress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.rules",
														"var.computed_egress_rules",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.rules",
														"var.computed_egress_rules",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.egress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.rules",
														"var.computed_egress_rules",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.rules",
														"var.computed_egress_rules",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_rules",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_egress_with_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_with_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
														"var.egress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_cidr_blocks",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.computed_egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_with_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_with_ipv6_cidr_blocks",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.egress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_with_ipv6_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_egress_with_self",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_with_self",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
														"var.rules",
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
														"var.rules",
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"self": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.computed_egress_with_self",
														"count.index",
														"var.rules",
														"var.computed_egress_with_self",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_with_self",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_egress_with_source_security_group_id",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_egress_with_source_security_group_id",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"source_security_group_id": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.computed_egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_egress_with_source_security_group_id",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "computed_egress_with_source_security_group_id",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_rules",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_rules",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.ingress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.rules",
														"var.computed_ingress_rules",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.rules",
														"var.computed_ingress_rules",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.ingress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.rules",
														"var.computed_ingress_rules",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.rules",
														"var.computed_ingress_rules",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_rules",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_with_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_with_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
														"var.ingress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_with_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_with_ipv6_cidr_blocks",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.ingress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_with_ipv6_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_with_self",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_with_self",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"self": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.computed_ingress_with_self",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_self",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_with_self",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.computed_ingress_with_source_security_group_id",
											"count_expression": {
												"references": [
													"var.create",
													"var.number_of_computed_ingress_with_source_security_group_id",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"source_security_group_id": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.computed_ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "computed_ingress_with_source_security_group_id",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_rules",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_rules",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.egress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.rules",
														"var.egress_rules",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.rules",
														"var.egress_rules",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.egress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.rules",
														"var.egress_rules",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.rules",
														"var.egress_rules",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_rules",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_with_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_with_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
														"var.egress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_cidr_blocks",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.egress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_with_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_with_ipv6_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_with_ipv6_cidr_blocks",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.egress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.egress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_with_ipv6_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_with_self",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_with_self",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.egress_with_self",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.egress_with_self",
														"count.index",
														"var.rules",
														"var.egress_with_self",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.egress_with_self",
														"count.index",
														"var.rules",
														"var.egress_with_self",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"self": {
													"references": [
														"var.egress_with_self",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.egress_with_self",
														"count.index",
														"var.rules",
														"var.egress_with_self",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_with_self",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.egress_with_source_security_group_id",
											"count_expression": {
												"references": [
													"var.create",
													"var.egress_with_source_security_group_id",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.egress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"source_security_group_id": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.egress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.egress_with_source_security_group_id",
														"count.index",
													],
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "egress_with_source_security_group_id",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_rules",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_rules",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.ingress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.rules",
														"var.ingress_rules",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.rules",
														"var.ingress_rules",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.ingress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.rules",
														"var.ingress_rules",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.rules",
														"var.ingress_rules",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_rules",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_with_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_with_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
														"var.ingress_cidr_blocks",
													],
												},
												"description": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.ingress_with_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_with_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_with_ipv6_cidr_blocks",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_with_ipv6_cidr_blocks",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"ipv6_cidr_blocks": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.ingress_ipv6_cidr_blocks",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"to_port": {
													"references": [
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
														"var.rules",
														"var.ingress_with_ipv6_cidr_blocks",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_with_ipv6_cidr_blocks",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_with_self",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_with_self",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.ingress_with_self",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.ingress_with_self",
														"count.index",
														"var.rules",
														"var.ingress_with_self",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.ingress_with_self",
														"count.index",
														"var.rules",
														"var.ingress_with_self",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"self": {
													"references": [
														"var.ingress_with_self",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.ingress_with_self",
														"count.index",
														"var.rules",
														"var.ingress_with_self",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_with_self",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.ingress_with_source_security_group_id",
											"count_expression": {
												"references": [
													"var.create",
													"var.ingress_with_source_security_group_id",
												],
											},
											"expressions": {
												"description": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"from_port": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"prefix_list_ids": {
													"references": [
														"var.ingress_prefix_list_ids",
													],
												},
												"protocol": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"security_group_id": {
													"references": [
														"local.this_sg_id",
													],
												},
												"source_security_group_id": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.ingress_with_source_security_group_id",
														"count.index",
														"var.rules",
														"var.ingress_with_source_security_group_id",
														"count.index",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "ingress_with_source_security_group_id",
											"provider_config_key": "aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
									],
									"variables": {
										"auto_groups": {
											"default": {
												"activemq": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"activemq-5671-tcp",
														"activemq-8883-tcp",
														"activemq-61614-tcp",
														"activemq-61617-tcp",
														"activemq-61619-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"alertmanager": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"alertmanager-9093-tcp",
														"alertmanager-9094-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"carbon-relay-ng": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"carbon-line-in-tcp",
														"carbon-line-in-udp",
														"carbon-pickle-tcp",
														"carbon-pickle-udp",
														"carbon-gui-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"cassandra": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"cassandra-clients-tcp",
														"cassandra-thrift-clients-tcp",
														"cassandra-jmx-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"consul": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"consul-tcp",
														"consul-cli-rpc-tcp",
														"consul-webui-tcp",
														"consul-dns-tcp",
														"consul-dns-udp",
														"consul-serf-lan-tcp",
														"consul-serf-lan-udp",
														"consul-serf-wan-tcp",
														"consul-serf-wan-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"docker-swarm": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"docker-swarm-mngmt-tcp",
														"docker-swarm-node-tcp",
														"docker-swarm-node-udp",
														"docker-swarm-overlay-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"elasticsearch": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"elasticsearch-rest-tcp",
														"elasticsearch-java-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"grafana": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"grafana-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"graphite-statsd": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"graphite-webui",
														"graphite-2003-tcp",
														"graphite-2004-tcp",
														"graphite-2023-tcp",
														"graphite-2024-tcp",
														"graphite-8080-tcp",
														"graphite-8125-tcp",
														"graphite-8125-udp",
														"graphite-8126-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"http-80": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"http-80-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"http-8080": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"http-8080-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"https-443": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"https-443-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"https-8443": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"https-8443-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ipsec-4500": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ipsec-4500-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ipsec-500": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ipsec-500-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"kafka": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"kafka-broker-tcp",
														"kafka-broker-tls-tcp",
														"kafka-jmx-exporter-tcp",
														"kafka-node-exporter-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"kibana": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"kibana-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"kubernetes-api": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"kubernetes-api-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ldap": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ldap-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ldaps": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ldaps-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"logstash": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"logstash-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"memcached": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"memcached-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"minio": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"minio-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"mongodb": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"mongodb-27017-tcp",
														"mongodb-27018-tcp",
														"mongodb-27019-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"mssql": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"mssql-tcp",
														"mssql-udp",
														"mssql-analytics-tcp",
														"mssql-broker-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"mysql": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"mysql-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"nfs": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"nfs-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"nomad": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"nomad-http-tcp",
														"nomad-rpc-tcp",
														"nomad-serf-tcp",
														"nomad-serf-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ntp": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ntp-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"openvpn": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"openvpn-udp",
														"openvpn-tcp",
														"openvpn-https-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"oracle-db": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"oracle-db-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"postgresql": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"postgresql-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"prometheus": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"prometheus-http-tcp",
														"prometheus-pushgateway-http-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"puppet": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"puppet-tcp",
														"puppetdb-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"rabbitmq": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"rabbitmq-4369-tcp",
														"rabbitmq-5671-tcp",
														"rabbitmq-5672-tcp",
														"rabbitmq-15672-tcp",
														"rabbitmq-25672-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"rdp": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"rdp-tcp",
														"rdp-udp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"redis": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"redis-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"redshift": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"redshift-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"solr": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"solr-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"splunk": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"splunk-indexer-tcp",
														"splunk-clients-tcp",
														"splunk-splunkd-tcp",
														"splunk-hec-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"squid": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"squid-proxy-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"ssh": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"ssh-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"storm": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"storm-nimbus-tcp",
														"storm-ui-tcp",
														"storm-supervisor-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"web": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"http-80-tcp",
														"http-8080-tcp",
														"https-443-tcp",
														"web-jmx-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"winrm": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"winrm-http-tcp",
														"winrm-https-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"zipkin": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"zipkin-admin-tcp",
														"zipkin-admin-query-tcp",
														"zipkin-admin-web-tcp",
														"zipkin-query-tcp",
														"zipkin-web-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
												"zookeeper": {
													"egress_rules": [
														"all-all",
													],
													"ingress_rules": [
														"zookeeper-2181-tcp",
														"zookeeper-2888-tcp",
														"zookeeper-3888-tcp",
														"zookeeper-jmx-tcp",
													],
													"ingress_with_self": [
														"all-all",
													],
												},
											},
											"description": "Map of groups of security group rules to use to generate modules (see update_groups.sh)",
										},
										"computed_egress_rules": {
											"default":     [],
											"description": "List of computed egress rules to create by name",
										},
										"computed_egress_with_cidr_blocks": {
											"default":     [],
											"description": "List of computed egress rules to create where 'cidr_blocks' is used",
										},
										"computed_egress_with_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of computed egress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"computed_egress_with_self": {
											"default":     [],
											"description": "List of computed egress rules to create where 'self' is defined",
										},
										"computed_egress_with_source_security_group_id": {
											"default":     [],
											"description": "List of computed egress rules to create where 'source_security_group_id' is used",
										},
										"computed_ingress_rules": {
											"default":     [],
											"description": "List of computed ingress rules to create by name",
										},
										"computed_ingress_with_cidr_blocks": {
											"default":     [],
											"description": "List of computed ingress rules to create where 'cidr_blocks' is used",
										},
										"computed_ingress_with_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"computed_ingress_with_self": {
											"default":     [],
											"description": "List of computed ingress rules to create where 'self' is defined",
										},
										"computed_ingress_with_source_security_group_id": {
											"default":     [],
											"description": "List of computed ingress rules to create where 'source_security_group_id' is used",
										},
										"create": {
											"default":     true,
											"description": "Whether to create security group and all rules",
										},
										"description": {
											"default":     "Security Group managed by Terraform",
											"description": "Description of security group",
										},
										"egress_cidr_blocks": {
											"default": [
												"0.0.0.0/0",
											],
											"description": "List of IPv4 CIDR ranges to use on all egress rules",
										},
										"egress_ipv6_cidr_blocks": {
											"default": [
												"::/0",
											],
											"description": "List of IPv6 CIDR ranges to use on all egress rules",
										},
										"egress_prefix_list_ids": {
											"default":     [],
											"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules",
										},
										"egress_rules": {
											"default":     [],
											"description": "List of egress rules to create by name",
										},
										"egress_with_cidr_blocks": {
											"default":     [],
											"description": "List of egress rules to create where 'cidr_blocks' is used",
										},
										"egress_with_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of egress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"egress_with_self": {
											"default":     [],
											"description": "List of egress rules to create where 'self' is defined",
										},
										"egress_with_source_security_group_id": {
											"default":     [],
											"description": "List of egress rules to create where 'source_security_group_id' is used",
										},
										"ingress_cidr_blocks": {
											"default":     [],
											"description": "List of IPv4 CIDR ranges to use on all ingress rules",
										},
										"ingress_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of IPv6 CIDR ranges to use on all ingress rules",
										},
										"ingress_prefix_list_ids": {
											"default":     [],
											"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules",
										},
										"ingress_rules": {
											"default":     [],
											"description": "List of ingress rules to create by name",
										},
										"ingress_with_cidr_blocks": {
											"default":     [],
											"description": "List of ingress rules to create where 'cidr_blocks' is used",
										},
										"ingress_with_ipv6_cidr_blocks": {
											"default":     [],
											"description": "List of ingress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"ingress_with_self": {
											"default":     [],
											"description": "List of ingress rules to create where 'self' is defined",
										},
										"ingress_with_source_security_group_id": {
											"default":     [],
											"description": "List of ingress rules to create where 'source_security_group_id' is used",
										},
										"name": {
											"description": "Name of security group",
										},
										"number_of_computed_egress_rules": {
											"default":     0,
											"description": "Number of computed egress rules to create by name",
										},
										"number_of_computed_egress_with_cidr_blocks": {
											"default":     0,
											"description": "Number of computed egress rules to create where 'cidr_blocks' is used",
										},
										"number_of_computed_egress_with_ipv6_cidr_blocks": {
											"default":     0,
											"description": "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"number_of_computed_egress_with_self": {
											"default":     0,
											"description": "Number of computed egress rules to create where 'self' is defined",
										},
										"number_of_computed_egress_with_source_security_group_id": {
											"default":     0,
											"description": "Number of computed egress rules to create where 'source_security_group_id' is used",
										},
										"number_of_computed_ingress_rules": {
											"default":     0,
											"description": "Number of computed ingress rules to create by name",
										},
										"number_of_computed_ingress_with_cidr_blocks": {
											"default":     0,
											"description": "Number of computed ingress rules to create where 'cidr_blocks' is used",
										},
										"number_of_computed_ingress_with_ipv6_cidr_blocks": {
											"default":     0,
											"description": "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
										},
										"number_of_computed_ingress_with_self": {
											"default":     0,
											"description": "Number of computed ingress rules to create where 'self' is defined",
										},
										"number_of_computed_ingress_with_source_security_group_id": {
											"default":     0,
											"description": "Number of computed ingress rules to create where 'source_security_group_id' is used",
										},
										"revoke_rules_on_delete": {
											"default":     false,
											"description": "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR.",
										},
										"rules": {
											"default": {
												"_": [
													"",
													"",
													"",
												],
												"activemq-5671-tcp": [
													"5671",
													"5671",
													"tcp",
													"ActiveMQ AMQP",
												],
												"activemq-61614-tcp": [
													"61614",
													"61614",
													"tcp",
													"ActiveMQ STOMP",
												],
												"activemq-61617-tcp": [
													"61617",
													"61617",
													"tcp",
													"ActiveMQ OpenWire",
												],
												"activemq-61619-tcp": [
													"61619",
													"61619",
													"tcp",
													"ActiveMQ WebSocket",
												],
												"activemq-8883-tcp": [
													"8883",
													"8883",
													"tcp",
													"ActiveMQ MQTT",
												],
												"alertmanager-9093-tcp": [
													"9093",
													"9093",
													"tcp",
													"Alert Manager",
												],
												"alertmanager-9094-tcp": [
													"9094",
													"9094",
													"tcp",
													"Alert Manager Cluster",
												],
												"all-all": [
													"-1",
													"-1",
													"-1",
													"All protocols",
												],
												"all-icmp": [
													"-1",
													"-1",
													"icmp",
													"All IPV4 ICMP",
												],
												"all-ipv6-icmp": [
													"-1",
													"-1",
													"58",
													"All IPV6 ICMP",
												],
												"all-tcp": [
													"0",
													"65535",
													"tcp",
													"All TCP ports",
												],
												"all-udp": [
													"0",
													"65535",
													"udp",
													"All UDP ports",
												],
												"carbon-admin-tcp": [
													"2004",
													"2004",
													"tcp",
													"Carbon admin",
												],
												"carbon-gui-udp": [
													"8081",
													"8081",
													"tcp",
													"Carbon GUI",
												],
												"carbon-line-in-tcp": [
													"2003",
													"2003",
													"tcp",
													"Carbon line-in",
												],
												"carbon-line-in-udp": [
													"2003",
													"2003",
													"udp",
													"Carbon line-in",
												],
												"carbon-pickle-tcp": [
													"2013",
													"2013",
													"tcp",
													"Carbon pickle",
												],
												"carbon-pickle-udp": [
													"2013",
													"2013",
													"udp",
													"Carbon pickle",
												],
												"cassandra-clients-tcp": [
													"9042",
													"9042",
													"tcp",
													"Cassandra clients",
												],
												"cassandra-jmx-tcp": [
													"7199",
													"7199",
													"tcp",
													"JMX",
												],
												"cassandra-thrift-clients-tcp": [
													"9160",
													"9160",
													"tcp",
													"Cassandra Thrift clients",
												],
												"consul-cli-rpc-tcp": [
													"8400",
													"8400",
													"tcp",
													"Consul CLI RPC",
												],
												"consul-dns-tcp": [
													"8600",
													"8600",
													"tcp",
													"Consul DNS",
												],
												"consul-dns-udp": [
													"8600",
													"8600",
													"udp",
													"Consul DNS",
												],
												"consul-serf-lan-tcp": [
													"8301",
													"8301",
													"tcp",
													"Serf LAN",
												],
												"consul-serf-lan-udp": [
													"8301",
													"8301",
													"udp",
													"Serf LAN",
												],
												"consul-serf-wan-tcp": [
													"8302",
													"8302",
													"tcp",
													"Serf WAN",
												],
												"consul-serf-wan-udp": [
													"8302",
													"8302",
													"udp",
													"Serf WAN",
												],
												"consul-tcp": [
													"8300",
													"8300",
													"tcp",
													"Consul server",
												],
												"consul-webui-tcp": [
													"8500",
													"8500",
													"tcp",
													"Consul web UI",
												],
												"dns-tcp": [
													"53",
													"53",
													"tcp",
													"DNS",
												],
												"dns-udp": [
													"53",
													"53",
													"udp",
													"DNS",
												],
												"docker-swarm-mngmt-tcp": [
													"2377",
													"2377",
													"tcp",
													"Docker Swarm cluster management",
												],
												"docker-swarm-node-tcp": [
													"7946",
													"7946",
													"tcp",
													"Docker Swarm node",
												],
												"docker-swarm-node-udp": [
													"7946",
													"7946",
													"udp",
													"Docker Swarm node",
												],
												"docker-swarm-overlay-udp": [
													"4789",
													"4789",
													"udp",
													"Docker Swarm Overlay Network Traffic",
												],
												"elasticsearch-java-tcp": [
													"9300",
													"9300",
													"tcp",
													"Elasticsearch Java interface",
												],
												"elasticsearch-rest-tcp": [
													"9200",
													"9200",
													"tcp",
													"Elasticsearch REST interface",
												],
												"grafana-tcp": [
													"3000",
													"3000",
													"tcp",
													"Grafana Dashboard",
												],
												"graphite-2003-tcp": [
													"2003",
													"2003",
													"tcp",
													"Carbon receiver plain text",
												],
												"graphite-2004-tcp": [
													"2004",
													"2004",
													"tcp",
													"Carbon receiver pickle",
												],
												"graphite-2023-tcp": [
													"2023",
													"2023",
													"tcp",
													"Carbon aggregator plaintext",
												],
												"graphite-2024-tcp": [
													"2024",
													"2024",
													"tcp",
													"Carbon aggregator pickle",
												],
												"graphite-8080-tcp": [
													"8080",
													"8080",
													"tcp",
													"Graphite gunicorn port",
												],
												"graphite-8125-tcp": [
													"8125",
													"8125",
													"tcp",
													"Statsd TCP",
												],
												"graphite-8125-udp": [
													"8125",
													"8125",
													"udp",
													"Statsd UDP default",
												],
												"graphite-8126-tcp": [
													"8126",
													"8126",
													"tcp",
													"Statsd admin",
												],
												"graphite-webui": [
													"80",
													"80",
													"tcp",
													"Graphite admin interface",
												],
												"http-80-tcp": [
													"80",
													"80",
													"tcp",
													"HTTP",
												],
												"http-8080-tcp": [
													"8080",
													"8080",
													"tcp",
													"HTTP",
												],
												"https-443-tcp": [
													"443",
													"443",
													"tcp",
													"HTTPS",
												],
												"https-8443-tcp": [
													"8443",
													"8443",
													"tcp",
													"HTTPS",
												],
												"ipsec-4500-udp": [
													"4500",
													"4500",
													"udp",
													"IPSEC NAT-T",
												],
												"ipsec-500-udp": [
													"500",
													"500",
													"udp",
													"IPSEC ISAKMP",
												],
												"kafka-broker-tcp": [
													"9092",
													"9092",
													"tcp",
													"Kafka broker 0.8.2+",
												],
												"kafka-broker-tls-tcp": [
													"9094",
													"9094",
													"tcp",
													"Kafka TLS enabled broker 0.8.2+",
												],
												"kafka-jmx-exporter-tcp": [
													"11001",
													"11001",
													"tcp",
													"Kafka JMX Exporter",
												],
												"kafka-node-exporter-tcp": [
													"11002",
													"11002",
													"tcp",
													"Kafka Node Exporter",
												],
												"kibana-tcp": [
													"5601",
													"5601",
													"tcp",
													"Kibana Web Interface",
												],
												"kubernetes-api-tcp": [
													"6443",
													"6443",
													"tcp",
													"Kubernetes API Server",
												],
												"ldap-tcp": [
													"389",
													"389",
													"tcp",
													"LDAP",
												],
												"ldaps-tcp": [
													"636",
													"636",
													"tcp",
													"LDAPS",
												],
												"logstash-tcp": [
													"5044",
													"5044",
													"tcp",
													"Logstash",
												],
												"memcached-tcp": [
													"11211",
													"11211",
													"tcp",
													"Memcached",
												],
												"minio-tcp": [
													"9000",
													"9000",
													"tcp",
													"MinIO",
												],
												"mongodb-27017-tcp": [
													"27017",
													"27017",
													"tcp",
													"MongoDB",
												],
												"mongodb-27018-tcp": [
													"27018",
													"27018",
													"tcp",
													"MongoDB shard",
												],
												"mongodb-27019-tcp": [
													"27019",
													"27019",
													"tcp",
													"MongoDB config server",
												],
												"mssql-analytics-tcp": [
													"2383",
													"2383",
													"tcp",
													"MSSQL Analytics",
												],
												"mssql-broker-tcp": [
													"4022",
													"4022",
													"tcp",
													"MSSQL Broker",
												],
												"mssql-tcp": [
													"1433",
													"1433",
													"tcp",
													"MSSQL Server",
												],
												"mssql-udp": [
													"1434",
													"1434",
													"udp",
													"MSSQL Browser",
												],
												"mysql-tcp": [
													"3306",
													"3306",
													"tcp",
													"MySQL/Aurora",
												],
												"nfs-tcp": [
													"2049",
													"2049",
													"tcp",
													"NFS/EFS",
												],
												"nomad-http-tcp": [
													"4646",
													"4646",
													"tcp",
													"Nomad HTTP",
												],
												"nomad-rpc-tcp": [
													"4647",
													"4647",
													"tcp",
													"Nomad RPC",
												],
												"nomad-serf-tcp": [
													"4648",
													"4648",
													"tcp",
													"Serf",
												],
												"nomad-serf-udp": [
													"4648",
													"4648",
													"udp",
													"Serf",
												],
												"ntp-udp": [
													"123",
													"123",
													"udp",
													"NTP",
												],
												"openvpn-https-tcp": [
													"443",
													"443",
													"tcp",
													"OpenVPN",
												],
												"openvpn-tcp": [
													"943",
													"943",
													"tcp",
													"OpenVPN",
												],
												"openvpn-udp": [
													"1194",
													"1194",
													"udp",
													"OpenVPN",
												],
												"oracle-db-tcp": [
													"1521",
													"1521",
													"tcp",
													"Oracle",
												],
												"postgresql-tcp": [
													"5432",
													"5432",
													"tcp",
													"PostgreSQL",
												],
												"prometheus-http-tcp": [
													"9090",
													"9090",
													"tcp",
													"Prometheus",
												],
												"prometheus-pushgateway-http-tcp": [
													"9091",
													"9091",
													"tcp",
													"Prometheus Pushgateway",
												],
												"puppet-tcp": [
													"8140",
													"8140",
													"tcp",
													"Puppet",
												],
												"puppetdb-tcp": [
													"8081",
													"8081",
													"tcp",
													"PuppetDB",
												],
												"rabbitmq-15672-tcp": [
													"15672",
													"15672",
													"tcp",
													"RabbitMQ",
												],
												"rabbitmq-25672-tcp": [
													"25672",
													"25672",
													"tcp",
													"RabbitMQ",
												],
												"rabbitmq-4369-tcp": [
													"4369",
													"4369",
													"tcp",
													"RabbitMQ epmd",
												],
												"rabbitmq-5671-tcp": [
													"5671",
													"5671",
													"tcp",
													"RabbitMQ",
												],
												"rabbitmq-5672-tcp": [
													"5672",
													"5672",
													"tcp",
													"RabbitMQ",
												],
												"rdp-tcp": [
													"3389",
													"3389",
													"tcp",
													"Remote Desktop",
												],
												"rdp-udp": [
													"3389",
													"3389",
													"udp",
													"Remote Desktop",
												],
												"redis-tcp": [
													"6379",
													"6379",
													"tcp",
													"Redis",
												],
												"redshift-tcp": [
													"5439",
													"5439",
													"tcp",
													"Redshift",
												],
												"solr-tcp": [
													"8983",
													"8987",
													"tcp",
													"Solr",
												],
												"splunk-hec-tcp": [
													"8088",
													"8088",
													"tcp",
													"Splunk HEC",
												],
												"splunk-indexer-tcp": [
													"9997",
													"9997",
													"tcp",
													"Splunk indexer",
												],
												"splunk-splunkd-tcp": [
													"8089",
													"8089",
													"tcp",
													"Splunkd",
												],
												"splunk-web-tcp": [
													"8000",
													"8000",
													"tcp",
													"Splunk Web",
												],
												"squid-proxy-tcp": [
													"3128",
													"3128",
													"tcp",
													"Squid default proxy",
												],
												"ssh-tcp": [
													"22",
													"22",
													"tcp",
													"SSH",
												],
												"storm-nimbus-tcp": [
													"6627",
													"6627",
													"tcp",
													"Nimbus",
												],
												"storm-supervisor-tcp": [
													"6700",
													"6703",
													"tcp",
													"Supervisor",
												],
												"storm-ui-tcp": [
													"8080",
													"8080",
													"tcp",
													"Storm UI",
												],
												"web-jmx-tcp": [
													"1099",
													"1099",
													"tcp",
													"JMX",
												],
												"winrm-http-tcp": [
													"5985",
													"5985",
													"tcp",
													"WinRM HTTP",
												],
												"winrm-https-tcp": [
													"5986",
													"5986",
													"tcp",
													"WinRM HTTPS",
												],
												"zipkin-admin-query-tcp": [
													"9901",
													"9901",
													"tcp",
													"Zipkin Admin port query",
												],
												"zipkin-admin-tcp": [
													"9990",
													"9990",
													"tcp",
													"Zipkin Admin port collector",
												],
												"zipkin-admin-web-tcp": [
													"9991",
													"9991",
													"tcp",
													"Zipkin Admin port web",
												],
												"zipkin-query-tcp": [
													"9411",
													"9411",
													"tcp",
													"Zipkin query port",
												],
												"zipkin-web-tcp": [
													"8080",
													"8080",
													"tcp",
													"Zipkin web port",
												],
												"zookeeper-2181-tcp": [
													"2181",
													"2181",
													"tcp",
													"Zookeeper",
												],
												"zookeeper-2888-tcp": [
													"2888",
													"2888",
													"tcp",
													"Zookeeper",
												],
												"zookeeper-3888-tcp": [
													"3888",
													"3888",
													"tcp",
													"Zookeeper",
												],
												"zookeeper-jmx-tcp": [
													"7199",
													"7199",
													"tcp",
													"JMX",
												],
											},
											"description": "Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])",
										},
										"tags": {
											"default":     {},
											"description": "A mapping of tags to assign to security group",
										},
										"use_name_prefix": {
											"default":     true,
											"description": "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation",
										},
										"vpc_id": {
											"description": "ID of the VPC where to create security group",
										},
									},
								},
								"source": "../../",
							},
						},
						"outputs": {
							"this_security_group_description": {
								"description": "The description of the security group",
								"expression": {
									"references": [
										"module.sg.this_security_group_description",
										"module.sg",
									],
								},
							},
							"this_security_group_id": {
								"description": "The ID of the security group",
								"expression": {
									"references": [
										"module.sg.this_security_group_id",
										"module.sg",
									],
								},
							},
							"this_security_group_name": {
								"description": "The name of the security group",
								"expression": {
									"references": [
										"module.sg.this_security_group_name",
										"module.sg",
									],
								},
							},
							"this_security_group_owner_id": {
								"description": "The owner ID",
								"expression": {
									"references": [
										"module.sg.this_security_group_owner_id",
										"module.sg",
									],
								},
							},
							"this_security_group_vpc_id": {
								"description": "The VPC ID",
								"expression": {
									"references": [
										"module.sg.this_security_group_vpc_id",
										"module.sg",
									],
								},
							},
						},
						"variables": {
							"auto_computed_egress_rules": {
								"default":     [],
								"description": "List of computed egress rules to add automatically",
							},
							"auto_computed_egress_with_self": {
								"default":     [],
								"description": "List of maps defining computed egress rules with self to add automatically",
							},
							"auto_computed_ingress_rules": {
								"default":     [],
								"description": "List of ingress rules to add automatically",
							},
							"auto_computed_ingress_with_self": {
								"default":     [],
								"description": "List of maps defining computed ingress rules with self to add automatically",
							},
							"auto_egress_rules": {
								"default": [
									"all-all",
								],
								"description": "List of egress rules to add automatically",
							},
							"auto_egress_with_self": {
								"default":     [],
								"description": "List of maps defining egress rules with self to add automatically",
							},
							"auto_ingress_rules": {
								"default": [
									"http-80-tcp",
									"http-8080-tcp",
									"https-443-tcp",
									"web-jmx-tcp",
								],
								"description": "List of ingress rules to add automatically",
							},
							"auto_ingress_with_self": {
								"default": [
									{
										"rule": "all-all",
									},
								],
								"description": "List of maps defining ingress rules with self to add automatically",
							},
							"auto_number_of_computed_egress_rules": {
								"default":     0,
								"description": "Number of computed egress rules to create by name",
							},
							"auto_number_of_computed_egress_with_self": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'self' is defined",
							},
							"auto_number_of_computed_ingress_rules": {
								"default":     0,
								"description": "Number of computed ingress rules to create by name",
							},
							"auto_number_of_computed_ingress_with_self": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'self' is defined",
							},
							"computed_egress_cidr_blocks": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of IPv4 CIDR ranges to use on all computed egress rules",
							},
							"computed_egress_ipv6_cidr_blocks": {
								"default": [
									"::/0",
								],
								"description": "List of IPv6 CIDR ranges to use on all computed egress rules",
							},
							"computed_egress_prefix_list_ids": {
								"default":     [],
								"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules",
							},
							"computed_egress_rules": {
								"default":     [],
								"description": "List of computed egress rules to create by name",
							},
							"computed_egress_with_cidr_blocks": {
								"default":     [],
								"description": "List of computed egress rules to create where 'cidr_blocks' is used",
							},
							"computed_egress_with_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of computed egress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"computed_egress_with_self": {
								"default":     [],
								"description": "List of computed egress rules to create where 'self' is defined",
							},
							"computed_egress_with_source_security_group_id": {
								"default":     [],
								"description": "List of computed egress rules to create where 'source_security_group_id' is used",
							},
							"computed_ingress_cidr_blocks": {
								"default":     [],
								"description": "List of IPv4 CIDR ranges to use on all computed ingress rules",
							},
							"computed_ingress_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of IPv6 CIDR ranges to use on all computed ingress rules",
							},
							"computed_ingress_prefix_list_ids": {
								"default":     [],
								"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules",
							},
							"computed_ingress_rules": {
								"default":     [],
								"description": "List of computed ingress rules to create by name",
							},
							"computed_ingress_with_cidr_blocks": {
								"default":     [],
								"description": "List of computed ingress rules to create where 'cidr_blocks' is used",
							},
							"computed_ingress_with_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"computed_ingress_with_self": {
								"default":     [],
								"description": "List of computed ingress rules to create where 'self' is defined",
							},
							"computed_ingress_with_source_security_group_id": {
								"default":     [],
								"description": "List of computed ingress rules to create where 'source_security_group_id' is used",
							},
							"create": {
								"default":     true,
								"description": "Whether to create security group and all rules",
							},
							"description": {
								"default":     "Security Group managed by Terraform",
								"description": "Description of security group",
							},
							"egress_cidr_blocks": {
								"default": [
									"0.0.0.0/0",
								],
								"description": "List of IPv4 CIDR ranges to use on all egress rules",
							},
							"egress_ipv6_cidr_blocks": {
								"default": [
									"::/0",
								],
								"description": "List of IPv6 CIDR ranges to use on all egress rules",
							},
							"egress_prefix_list_ids": {
								"default":     [],
								"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules",
							},
							"egress_rules": {
								"default":     [],
								"description": "List of egress rules to create by name",
							},
							"egress_with_cidr_blocks": {
								"default":     [],
								"description": "List of egress rules to create where 'cidr_blocks' is used",
							},
							"egress_with_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of egress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"egress_with_self": {
								"default":     [],
								"description": "List of egress rules to create where 'self' is defined",
							},
							"egress_with_source_security_group_id": {
								"default":     [],
								"description": "List of egress rules to create where 'source_security_group_id' is used",
							},
							"ingress_cidr_blocks": {
								"default":     [],
								"description": "List of IPv4 CIDR ranges to use on all ingress rules",
							},
							"ingress_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of IPv6 CIDR ranges to use on all ingress rules",
							},
							"ingress_prefix_list_ids": {
								"default":     [],
								"description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules",
							},
							"ingress_rules": {
								"default":     [],
								"description": "List of ingress rules to create by name",
							},
							"ingress_with_cidr_blocks": {
								"default":     [],
								"description": "List of ingress rules to create where 'cidr_blocks' is used",
							},
							"ingress_with_ipv6_cidr_blocks": {
								"default":     [],
								"description": "List of ingress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"ingress_with_self": {
								"default":     [],
								"description": "List of ingress rules to create where 'self' is defined",
							},
							"ingress_with_source_security_group_id": {
								"default":     [],
								"description": "List of ingress rules to create where 'source_security_group_id' is used",
							},
							"name": {
								"description": "Name of security group",
							},
							"number_of_computed_egress_cidr_blocks": {
								"default":     0,
								"description": "Number of IPv4 CIDR ranges to use on all computed egress rules",
							},
							"number_of_computed_egress_ipv6_cidr_blocks": {
								"default":     0,
								"description": "Number of IPv6 CIDR ranges to use on all computed egress rules",
							},
							"number_of_computed_egress_prefix_list_ids": {
								"default":     0,
								"description": "Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules",
							},
							"number_of_computed_egress_rules": {
								"default":     0,
								"description": "Number of computed egress rules to create by name",
							},
							"number_of_computed_egress_with_cidr_blocks": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'cidr_blocks' is used",
							},
							"number_of_computed_egress_with_ipv6_cidr_blocks": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"number_of_computed_egress_with_self": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'self' is defined",
							},
							"number_of_computed_egress_with_source_security_group_id": {
								"default":     0,
								"description": "Number of computed egress rules to create where 'source_security_group_id' is used",
							},
							"number_of_computed_ingress_cidr_blocks": {
								"default":     0,
								"description": "Number of IPv4 CIDR ranges to use on all computed ingress rules",
							},
							"number_of_computed_ingress_ipv6_cidr_blocks": {
								"default":     0,
								"description": "Number of IPv6 CIDR ranges to use on all computed ingress rules",
							},
							"number_of_computed_ingress_prefix_list_ids": {
								"default":     0,
								"description": "Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules",
							},
							"number_of_computed_ingress_rules": {
								"default":     0,
								"description": "Number of computed ingress rules to create by name",
							},
							"number_of_computed_ingress_with_cidr_blocks": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'cidr_blocks' is used",
							},
							"number_of_computed_ingress_with_ipv6_cidr_blocks": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
							},
							"number_of_computed_ingress_with_self": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'self' is defined",
							},
							"number_of_computed_ingress_with_source_security_group_id": {
								"default":     0,
								"description": "Number of computed ingress rules to create where 'source_security_group_id' is used",
							},
							"revoke_rules_on_delete": {
								"default":     false,
								"description": "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR.",
							},
							"tags": {
								"default":     {},
								"description": "A mapping of tags to assign to security group",
							},
							"use_name_prefix": {
								"default":     true,
								"description": "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation",
							},
							"vpc_id": {
								"description": "ID of the VPC where to create security group",
							},
						},
					},
					"source":             "terraform-aws-modules/security-group/aws//modules/web",
					"version_constraint": "3.17.0",
				},
				"vpc": {
					"expressions": {
						"azs": {
							"references": [
								"data.aws_availability_zones.available.names",
								"data.aws_availability_zones.available",
							],
						},
						"cidr": {
							"constant_value": "10.0.0.0/16",
						},
						"enable_nat_gateway": {
							"constant_value": true,
						},
						"enable_vpn_gateway": {
							"constant_value": false,
						},
						"private_subnets": {
							"constant_value": [
								"10.0.101.0/24",
								"10.0.102.0/24",
							],
						},
						"public_subnets": {
							"constant_value": [
								"10.0.1.0/24",
								"10.0.2.0/24",
							],
						},
						"tags": {
							"constant_value": {
								"environment": "development",
								"project":     "project-alpha",
							},
						},
					},
					"module": {
						"outputs": {
							"azs": {
								"description": "A list of availability zones specified as argument to this module",
								"expression": {
									"references": [
										"var.azs",
									],
								},
							},
							"cgw_arns": {
								"description": "List of ARNs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"cgw_ids": {
								"description": "List of IDs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"database_internet_gateway_route_id": {
								"description": "ID of the database internet gateway route.",
								"expression": {
									"references": [
										"aws_route.database_internet_gateway",
									],
								},
							},
							"database_ipv6_egress_route_id": {
								"description": "ID of the database IPv6 egress route.",
								"expression": {
									"references": [
										"aws_route.database_ipv6_egress",
									],
								},
							},
							"database_nat_gateway_route_ids": {
								"description": "List of IDs of the database nat gateway route.",
								"expression": {
									"references": [
										"aws_route.database_nat_gateway",
									],
								},
							},
							"database_network_acl_arn": {
								"description": "ARN of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database",
									],
								},
							},
							"database_network_acl_id": {
								"description": "ID of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database",
									],
								},
							},
							"database_route_table_association_ids": {
								"description": "List of IDs of the database route table association",
								"expression": {
									"references": [
										"aws_route_table_association.database",
									],
								},
							},
							"database_route_table_ids": {
								"description": "List of IDs of database route tables",
								"expression": {
									"references": [
										"aws_route_table.database",
										"aws_route_table.database",
										"aws_route_table.private",
									],
								},
							},
							"database_subnet_arns": {
								"description": "List of ARNs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnet_group": {
								"description": "ID of database subnet group",
								"expression": {
									"references": [
										"aws_db_subnet_group.database",
									],
								},
							},
							"database_subnets": {
								"description": "List of IDs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"default_network_acl_id": {
								"description": "The ID of the default network ACL",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"default_route_table_id": {
								"description": "The ID of the default route table",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"default_security_group_id": {
								"description": "The ID of the security group created by default on VPC creation",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"default_vpc_arn": {
								"description": "The ARN of the VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_cidr_block": {
								"description": "The CIDR block of the VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_network_acl_id": {
								"description": "The ID of the default network ACL",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_route_table_id": {
								"description": "The ID of the default route table",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_security_group_id": {
								"description": "The ID of the security group created by default on VPC creation",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_hostnames": {
								"description": "Whether or not the VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_support": {
								"description": "Whether or not the VPC has DNS support",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_id": {
								"description": "The ID of the VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with this VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"egress_only_internet_gateway_id": {
								"description": "The ID of the egress only Internet Gateway",
								"expression": {
									"references": [
										"aws_egress_only_internet_gateway.this",
									],
								},
							},
							"elasticache_network_acl_arn": {
								"description": "ARN of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_network_acl_id": {
								"description": "ID of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_route_table_association_ids": {
								"description": "List of IDs of the elasticache route table association",
								"expression": {
									"references": [
										"aws_route_table_association.elasticache",
									],
								},
							},
							"elasticache_route_table_ids": {
								"description": "List of IDs of elasticache route tables",
								"expression": {
									"references": [
										"aws_route_table.elasticache",
										"aws_route_table.elasticache",
										"aws_route_table.private",
									],
								},
							},
							"elasticache_subnet_arns": {
								"description": "List of ARNs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnet_group": {
								"description": "ID of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnet_group_name": {
								"description": "Name of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnets": {
								"description": "List of IDs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"igw_arn": {
								"description": "The ARN of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this",
									],
								},
							},
							"igw_id": {
								"description": "The ID of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this",
									],
								},
							},
							"intra_network_acl_arn": {
								"description": "ARN of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra",
									],
								},
							},
							"intra_network_acl_id": {
								"description": "ID of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra",
									],
								},
							},
							"intra_route_table_association_ids": {
								"description": "List of IDs of the intra route table association",
								"expression": {
									"references": [
										"aws_route_table_association.intra",
									],
								},
							},
							"intra_route_table_ids": {
								"description": "List of IDs of intra route tables",
								"expression": {
									"references": [
										"aws_route_table.intra",
									],
								},
							},
							"intra_subnet_arns": {
								"description": "List of ARNs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets": {
								"description": "List of IDs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"name": {
								"description": "The name of the VPC specified as argument to this module",
								"expression": {
									"references": [
										"var.name",
									],
								},
							},
							"nat_ids": {
								"description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"aws_eip.nat",
									],
								},
							},
							"nat_public_ips": {
								"description": "List of public Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"var.reuse_nat_ips",
										"var.external_nat_ips",
										"aws_eip.nat",
									],
								},
							},
							"natgw_ids": {
								"description": "List of NAT Gateway IDs",
								"expression": {
									"references": [
										"aws_nat_gateway.this",
									],
								},
							},
							"private_ipv6_egress_route_ids": {
								"description": "List of IDs of the ipv6 egress route.",
								"expression": {
									"references": [
										"aws_route.private_ipv6_egress",
									],
								},
							},
							"private_nat_gateway_route_ids": {
								"description": "List of IDs of the private nat gateway route.",
								"expression": {
									"references": [
										"aws_route.private_nat_gateway",
									],
								},
							},
							"private_network_acl_arn": {
								"description": "ARN of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private",
									],
								},
							},
							"private_network_acl_id": {
								"description": "ID of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private",
									],
								},
							},
							"private_route_table_association_ids": {
								"description": "List of IDs of the private route table association",
								"expression": {
									"references": [
										"aws_route_table_association.private",
									],
								},
							},
							"private_route_table_ids": {
								"description": "List of IDs of private route tables",
								"expression": {
									"references": [
										"aws_route_table.private",
									],
								},
							},
							"private_subnet_arns": {
								"description": "List of ARNs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets": {
								"description": "List of IDs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"public_internet_gateway_ipv6_route_id": {
								"description": "ID of the IPv6 internet gateway route.",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway_ipv6",
									],
								},
							},
							"public_internet_gateway_route_id": {
								"description": "ID of the internet gateway route.",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway",
									],
								},
							},
							"public_network_acl_arn": {
								"description": "ARN of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public",
									],
								},
							},
							"public_network_acl_id": {
								"description": "ID of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public",
									],
								},
							},
							"public_route_table_association_ids": {
								"description": "List of IDs of the public route table association",
								"expression": {
									"references": [
										"aws_route_table_association.public",
									],
								},
							},
							"public_route_table_ids": {
								"description": "List of IDs of public route tables",
								"expression": {
									"references": [
										"aws_route_table.public",
									],
								},
							},
							"public_subnet_arns": {
								"description": "List of ARNs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets": {
								"description": "List of IDs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"redshift_network_acl_arn": {
								"description": "ARN of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_network_acl_id": {
								"description": "ID of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_public_route_table_association_ids": {
								"description": "List of IDs of the public redshidt route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift_public",
									],
								},
							},
							"redshift_route_table_association_ids": {
								"description": "List of IDs of the redshift route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift",
									],
								},
							},
							"redshift_route_table_ids": {
								"description": "List of IDs of redshift route tables",
								"expression": {
									"references": [
										"aws_route_table.redshift",
										"aws_route_table.redshift",
										"aws_route_table.private",
									],
								},
							},
							"redshift_subnet_arns": {
								"description": "List of ARNs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnet_group": {
								"description": "ID of redshift subnet group",
								"expression": {
									"references": [
										"aws_redshift_subnet_group.redshift",
									],
								},
							},
							"redshift_subnets": {
								"description": "List of IDs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"this_customer_gateway": {
								"description": "Map of Customer Gateway attributes",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"vgw_arn": {
								"description": "The ARN of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this",
									],
								},
							},
							"vgw_id": {
								"description": "The ID of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this",
										"aws_vpn_gateway_attachment.this",
									],
								},
							},
							"vpc_arn": {
								"description": "The ARN of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_cidr_block": {
								"description": "The CIDR block of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_hostnames": {
								"description": "Whether or not the VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_support": {
								"description": "Whether or not the VPC has DNS support",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_endpoint_access_analyzer_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Access Analyzer.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.access_analyzer",
									],
								},
							},
							"vpc_endpoint_access_analyzer_id": {
								"description": "The ID of VPC endpoint for Access Analyzer",
								"expression": {
									"references": [
										"aws_vpc_endpoint.access_analyzer",
									],
								},
							},
							"vpc_endpoint_access_analyzer_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Access Analyzer.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.access_analyzer",
									],
								},
							},
							"vpc_endpoint_acm_pca_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ACM PCA.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.acm_pca",
									],
								},
							},
							"vpc_endpoint_acm_pca_id": {
								"description": "The ID of VPC endpoint for ACM PCA",
								"expression": {
									"references": [
										"aws_vpc_endpoint.acm_pca",
									],
								},
							},
							"vpc_endpoint_acm_pca_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ACM PCA.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.acm_pca",
									],
								},
							},
							"vpc_endpoint_apigw_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for APIGW.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.apigw",
									],
								},
							},
							"vpc_endpoint_apigw_id": {
								"description": "The ID of VPC endpoint for APIGW",
								"expression": {
									"references": [
										"aws_vpc_endpoint.apigw",
									],
								},
							},
							"vpc_endpoint_apigw_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for APIGW.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.apigw",
									],
								},
							},
							"vpc_endpoint_appmesh_envoy_management_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for AppMesh.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appmesh_envoy_management",
									],
								},
							},
							"vpc_endpoint_appmesh_envoy_management_id": {
								"description": "The ID of VPC endpoint for AppMesh",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appmesh_envoy_management",
									],
								},
							},
							"vpc_endpoint_appmesh_envoy_management_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for AppMesh.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appmesh_envoy_management",
									],
								},
							},
							"vpc_endpoint_appstream_api_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for AppStream API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_api",
									],
								},
							},
							"vpc_endpoint_appstream_api_id": {
								"description": "The ID of VPC endpoint for AppStream API",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_api",
									],
								},
							},
							"vpc_endpoint_appstream_api_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for AppStream API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_api",
									],
								},
							},
							"vpc_endpoint_appstream_streaming_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for AppStream Streaming.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_streaming",
									],
								},
							},
							"vpc_endpoint_appstream_streaming_id": {
								"description": "The ID of VPC endpoint for AppStream Streaming",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_streaming",
									],
								},
							},
							"vpc_endpoint_appstream_streaming_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for AppStream Streaming.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_streaming",
									],
								},
							},
							"vpc_endpoint_athena_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Athena.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.athena",
									],
								},
							},
							"vpc_endpoint_athena_id": {
								"description": "The ID of VPC endpoint for Athena",
								"expression": {
									"references": [
										"aws_vpc_endpoint.athena",
									],
								},
							},
							"vpc_endpoint_athena_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Athena.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.athena",
									],
								},
							},
							"vpc_endpoint_auto_scaling_plans_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Auto Scaling Plans.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.auto_scaling_plans",
									],
								},
							},
							"vpc_endpoint_auto_scaling_plans_id": {
								"description": "The ID of VPC endpoint for Auto Scaling Plans",
								"expression": {
									"references": [
										"aws_vpc_endpoint.auto_scaling_plans",
									],
								},
							},
							"vpc_endpoint_auto_scaling_plans_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Auto Scaling Plans.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.auto_scaling_plans",
									],
								},
							},
							"vpc_endpoint_cloud_directory_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Cloud Directory.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloud_directory",
									],
								},
							},
							"vpc_endpoint_cloud_directory_id": {
								"description": "The ID of VPC endpoint for Cloud Directory",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloud_directory",
									],
								},
							},
							"vpc_endpoint_cloud_directory_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Cloud Directory.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloud_directory",
									],
								},
							},
							"vpc_endpoint_cloudformation_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Cloudformation.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudformation",
									],
								},
							},
							"vpc_endpoint_cloudformation_id": {
								"description": "The ID of VPC endpoint for Cloudformation",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudformation",
									],
								},
							},
							"vpc_endpoint_cloudformation_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Cloudformation.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudformation",
									],
								},
							},
							"vpc_endpoint_cloudtrail_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CloudTrail.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudtrail",
									],
								},
							},
							"vpc_endpoint_cloudtrail_id": {
								"description": "The ID of VPC endpoint for CloudTrail",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudtrail",
									],
								},
							},
							"vpc_endpoint_cloudtrail_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CloudTrail.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudtrail",
									],
								},
							},
							"vpc_endpoint_codeartifact_api_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Codeartifact API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_api",
									],
								},
							},
							"vpc_endpoint_codeartifact_api_id": {
								"description": "The ID of VPC endpoint for Codeartifact API",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_api",
									],
								},
							},
							"vpc_endpoint_codeartifact_api_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Codeartifact API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_api",
									],
								},
							},
							"vpc_endpoint_codeartifact_repositories_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Codeartifact repositories.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_repositories",
									],
								},
							},
							"vpc_endpoint_codeartifact_repositories_id": {
								"description": "The ID of VPC endpoint for Codeartifact repositories",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_repositories",
									],
								},
							},
							"vpc_endpoint_codeartifact_repositories_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Codeartifact repositories.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_repositories",
									],
								},
							},
							"vpc_endpoint_codebuild_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for codebuild.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codebuild",
									],
								},
							},
							"vpc_endpoint_codebuild_id": {
								"description": "The ID of VPC endpoint for codebuild",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codebuild",
									],
								},
							},
							"vpc_endpoint_codebuild_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for codebuild.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codebuild",
									],
								},
							},
							"vpc_endpoint_codecommit_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for codecommit.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codecommit",
									],
								},
							},
							"vpc_endpoint_codecommit_id": {
								"description": "The ID of VPC endpoint for codecommit",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codecommit",
									],
								},
							},
							"vpc_endpoint_codecommit_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for codecommit.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codecommit",
									],
								},
							},
							"vpc_endpoint_codepipeline_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CodePipeline.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codepipeline",
									],
								},
							},
							"vpc_endpoint_codepipeline_id": {
								"description": "The ID of VPC endpoint for CodePipeline",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codepipeline",
									],
								},
							},
							"vpc_endpoint_codepipeline_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CodePipeline.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codepipeline",
									],
								},
							},
							"vpc_endpoint_config_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for config.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.config",
									],
								},
							},
							"vpc_endpoint_config_id": {
								"description": "The ID of VPC endpoint for config",
								"expression": {
									"references": [
										"aws_vpc_endpoint.config",
									],
								},
							},
							"vpc_endpoint_config_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for config.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.config",
									],
								},
							},
							"vpc_endpoint_datasync_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for DataSync.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.datasync",
									],
								},
							},
							"vpc_endpoint_datasync_id": {
								"description": "The ID of VPC endpoint for DataSync",
								"expression": {
									"references": [
										"aws_vpc_endpoint.datasync",
									],
								},
							},
							"vpc_endpoint_datasync_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for DataSync.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.datasync",
									],
								},
							},
							"vpc_endpoint_dynamodb_id": {
								"description": "The ID of VPC endpoint for DynamoDB",
								"expression": {
									"references": [
										"aws_vpc_endpoint.dynamodb",
									],
								},
							},
							"vpc_endpoint_dynamodb_pl_id": {
								"description": "The prefix list for the DynamoDB VPC endpoint.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.dynamodb",
									],
								},
							},
							"vpc_endpoint_ebs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EBS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ebs",
									],
								},
							},
							"vpc_endpoint_ebs_id": {
								"description": "The ID of VPC endpoint for EBS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ebs",
									],
								},
							},
							"vpc_endpoint_ebs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EBS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ebs",
									],
								},
							},
							"vpc_endpoint_ec2_autoscaling_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EC2 Autoscaling.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2_autoscaling",
									],
								},
							},
							"vpc_endpoint_ec2_autoscaling_id": {
								"description": "The ID of VPC endpoint for EC2 Autoscaling",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2_autoscaling",
									],
								},
							},
							"vpc_endpoint_ec2_autoscaling_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EC2 Autoscaling",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2_autoscaling",
									],
								},
							},
							"vpc_endpoint_ec2_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EC2.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2",
									],
								},
							},
							"vpc_endpoint_ec2_id": {
								"description": "The ID of VPC endpoint for EC2",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2",
									],
								},
							},
							"vpc_endpoint_ec2_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EC2",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2",
									],
								},
							},
							"vpc_endpoint_ec2messages_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EC2MESSAGES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2messages",
									],
								},
							},
							"vpc_endpoint_ec2messages_id": {
								"description": "The ID of VPC endpoint for EC2MESSAGES",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2messages",
									],
								},
							},
							"vpc_endpoint_ec2messages_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EC2MESSAGES",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2messages",
									],
								},
							},
							"vpc_endpoint_ecr_api_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECR API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_api",
									],
								},
							},
							"vpc_endpoint_ecr_api_id": {
								"description": "The ID of VPC endpoint for ECR API",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_api",
									],
								},
							},
							"vpc_endpoint_ecr_api_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECR API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_api",
									],
								},
							},
							"vpc_endpoint_ecr_dkr_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECR DKR.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_dkr",
									],
								},
							},
							"vpc_endpoint_ecr_dkr_id": {
								"description": "The ID of VPC endpoint for ECR DKR",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_dkr",
									],
								},
							},
							"vpc_endpoint_ecr_dkr_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECR DKR.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_dkr",
									],
								},
							},
							"vpc_endpoint_ecs_agent_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECS Agent.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_agent",
									],
								},
							},
							"vpc_endpoint_ecs_agent_id": {
								"description": "The ID of VPC endpoint for ECS Agent",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_agent",
									],
								},
							},
							"vpc_endpoint_ecs_agent_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECS Agent.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_agent",
									],
								},
							},
							"vpc_endpoint_ecs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs",
									],
								},
							},
							"vpc_endpoint_ecs_id": {
								"description": "The ID of VPC endpoint for ECS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs",
									],
								},
							},
							"vpc_endpoint_ecs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs",
									],
								},
							},
							"vpc_endpoint_ecs_telemetry_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECS Telemetry.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_telemetry",
									],
								},
							},
							"vpc_endpoint_ecs_telemetry_id": {
								"description": "The ID of VPC endpoint for ECS Telemetry",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_telemetry",
									],
								},
							},
							"vpc_endpoint_ecs_telemetry_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECS Telemetry.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_telemetry",
									],
								},
							},
							"vpc_endpoint_efs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EFS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.efs",
									],
								},
							},
							"vpc_endpoint_efs_id": {
								"description": "The ID of VPC endpoint for EFS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.efs",
									],
								},
							},
							"vpc_endpoint_efs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EFS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.efs",
									],
								},
							},
							"vpc_endpoint_elastic_inference_runtime_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Elastic Inference Runtime.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elastic_inference_runtime",
									],
								},
							},
							"vpc_endpoint_elastic_inference_runtime_id": {
								"description": "The ID of VPC endpoint for Elastic Inference Runtime",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elastic_inference_runtime",
									],
								},
							},
							"vpc_endpoint_elastic_inference_runtime_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Elastic Inference Runtime.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elastic_inference_runtime",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Elastic Beanstalk.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_health_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Elastic Beanstalk Health.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk_health",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_health_id": {
								"description": "The ID of VPC endpoint for Elastic Beanstalk Health",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk_health",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_health_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Elastic Beanstalk Health.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk_health",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_id": {
								"description": "The ID of VPC endpoint for Elastic Beanstalk",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Elastic Beanstalk.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk",
									],
								},
							},
							"vpc_endpoint_elasticloadbalancing_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Elastic Load Balancing.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticloadbalancing",
									],
								},
							},
							"vpc_endpoint_elasticloadbalancing_id": {
								"description": "The ID of VPC endpoint for Elastic Load Balancing",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticloadbalancing",
									],
								},
							},
							"vpc_endpoint_elasticloadbalancing_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Elastic Load Balancing.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticloadbalancing",
									],
								},
							},
							"vpc_endpoint_elasticmapreduce_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EMR.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.emr",
									],
								},
							},
							"vpc_endpoint_elasticmapreduce_id": {
								"description": "The ID of VPC endpoint for EMR",
								"expression": {
									"references": [
										"aws_vpc_endpoint.emr",
									],
								},
							},
							"vpc_endpoint_elasticmapreduce_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EMR.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.emr",
									],
								},
							},
							"vpc_endpoint_events_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CloudWatch Events.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.events",
									],
								},
							},
							"vpc_endpoint_events_id": {
								"description": "The ID of VPC endpoint for CloudWatch Events",
								"expression": {
									"references": [
										"aws_vpc_endpoint.events",
									],
								},
							},
							"vpc_endpoint_events_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CloudWatch Events.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.events",
									],
								},
							},
							"vpc_endpoint_git_codecommit_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for git_codecommit.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.git_codecommit",
									],
								},
							},
							"vpc_endpoint_git_codecommit_id": {
								"description": "The ID of VPC endpoint for git_codecommit",
								"expression": {
									"references": [
										"aws_vpc_endpoint.git_codecommit",
									],
								},
							},
							"vpc_endpoint_git_codecommit_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for git_codecommit.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.git_codecommit",
									],
								},
							},
							"vpc_endpoint_glue_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Glue.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.glue",
									],
								},
							},
							"vpc_endpoint_glue_id": {
								"description": "The ID of VPC endpoint for Glue",
								"expression": {
									"references": [
										"aws_vpc_endpoint.glue",
									],
								},
							},
							"vpc_endpoint_glue_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Glue.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.glue",
									],
								},
							},
							"vpc_endpoint_kinesis_firehose_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Kinesis Firehose.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_firehose",
									],
								},
							},
							"vpc_endpoint_kinesis_firehose_id": {
								"description": "The ID of VPC endpoint for Kinesis Firehose",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_firehose",
									],
								},
							},
							"vpc_endpoint_kinesis_firehose_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Kinesis Firehose.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_firehose",
									],
								},
							},
							"vpc_endpoint_kinesis_streams_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Kinesis Streams.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_streams",
									],
								},
							},
							"vpc_endpoint_kinesis_streams_id": {
								"description": "The ID of VPC endpoint for Kinesis Streams",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_streams",
									],
								},
							},
							"vpc_endpoint_kinesis_streams_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Kinesis Streams.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_streams",
									],
								},
							},
							"vpc_endpoint_kms_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for KMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kms",
									],
								},
							},
							"vpc_endpoint_kms_id": {
								"description": "The ID of VPC endpoint for KMS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kms",
									],
								},
							},
							"vpc_endpoint_kms_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for KMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kms",
									],
								},
							},
							"vpc_endpoint_lambda_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Lambda.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.lambda",
									],
								},
							},
							"vpc_endpoint_lambda_id": {
								"description": "The ID of VPC endpoint for Lambda",
								"expression": {
									"references": [
										"aws_vpc_endpoint.lambda",
									],
								},
							},
							"vpc_endpoint_lambda_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Lambda.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.lambda",
									],
								},
							},
							"vpc_endpoint_logs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CloudWatch Logs.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.logs",
									],
								},
							},
							"vpc_endpoint_logs_id": {
								"description": "The ID of VPC endpoint for CloudWatch Logs",
								"expression": {
									"references": [
										"aws_vpc_endpoint.logs",
									],
								},
							},
							"vpc_endpoint_logs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CloudWatch Logs.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.logs",
									],
								},
							},
							"vpc_endpoint_monitoring_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CloudWatch Monitoring.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.monitoring",
									],
								},
							},
							"vpc_endpoint_monitoring_id": {
								"description": "The ID of VPC endpoint for CloudWatch Monitoring",
								"expression": {
									"references": [
										"aws_vpc_endpoint.monitoring",
									],
								},
							},
							"vpc_endpoint_monitoring_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CloudWatch Monitoring.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.monitoring",
									],
								},
							},
							"vpc_endpoint_qldb_session_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for QLDB Session.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.qldb_session",
									],
								},
							},
							"vpc_endpoint_qldb_session_id": {
								"description": "The ID of VPC endpoint for QLDB Session",
								"expression": {
									"references": [
										"aws_vpc_endpoint.qldb_session",
									],
								},
							},
							"vpc_endpoint_qldb_session_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for QLDB Session.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.qldb_session",
									],
								},
							},
							"vpc_endpoint_rekognition_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Rekognition.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.rekognition",
									],
								},
							},
							"vpc_endpoint_rekognition_id": {
								"description": "The ID of VPC endpoint for Rekognition",
								"expression": {
									"references": [
										"aws_vpc_endpoint.rekognition",
									],
								},
							},
							"vpc_endpoint_rekognition_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Rekognition.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.rekognition",
									],
								},
							},
							"vpc_endpoint_s3_id": {
								"description": "The ID of VPC endpoint for S3",
								"expression": {
									"references": [
										"aws_vpc_endpoint.s3",
									],
								},
							},
							"vpc_endpoint_s3_pl_id": {
								"description": "The prefix list for the S3 VPC endpoint.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.s3",
									],
								},
							},
							"vpc_endpoint_sagemaker_api_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SageMaker API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_api",
									],
								},
							},
							"vpc_endpoint_sagemaker_api_id": {
								"description": "The ID of VPC endpoint for SageMaker API",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_api",
									],
								},
							},
							"vpc_endpoint_sagemaker_api_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SageMaker API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_api",
									],
								},
							},
							"vpc_endpoint_sagemaker_runtime_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SageMaker Runtime.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_runtime",
									],
								},
							},
							"vpc_endpoint_sagemaker_runtime_id": {
								"description": "The ID of VPC endpoint for SageMaker Runtime",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_runtime",
									],
								},
							},
							"vpc_endpoint_sagemaker_runtime_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SageMaker Runtime.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_runtime",
									],
								},
							},
							"vpc_endpoint_secretsmanager_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for secretsmanager.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.secretsmanager",
									],
								},
							},
							"vpc_endpoint_secretsmanager_id": {
								"description": "The ID of VPC endpoint for secretsmanager",
								"expression": {
									"references": [
										"aws_vpc_endpoint.secretsmanager",
									],
								},
							},
							"vpc_endpoint_secretsmanager_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for secretsmanager.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.secretsmanager",
									],
								},
							},
							"vpc_endpoint_servicecatalog_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Service Catalog.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.servicecatalog",
									],
								},
							},
							"vpc_endpoint_servicecatalog_id": {
								"description": "The ID of VPC endpoint for Service Catalog",
								"expression": {
									"references": [
										"aws_vpc_endpoint.servicecatalog",
									],
								},
							},
							"vpc_endpoint_servicecatalog_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Service Catalog.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.servicecatalog",
									],
								},
							},
							"vpc_endpoint_ses_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ses",
									],
								},
							},
							"vpc_endpoint_ses_id": {
								"description": "The ID of VPC endpoint for SES",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ses",
									],
								},
							},
							"vpc_endpoint_ses_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ses",
									],
								},
							},
							"vpc_endpoint_sms_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sms",
									],
								},
							},
							"vpc_endpoint_sms_id": {
								"description": "The ID of VPC endpoint for SMS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sms",
									],
								},
							},
							"vpc_endpoint_sms_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sms",
									],
								},
							},
							"vpc_endpoint_sns_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SNS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sns",
									],
								},
							},
							"vpc_endpoint_sns_id": {
								"description": "The ID of VPC endpoint for SNS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sns",
									],
								},
							},
							"vpc_endpoint_sns_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SNS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sns",
									],
								},
							},
							"vpc_endpoint_sqs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SQS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sqs",
									],
								},
							},
							"vpc_endpoint_sqs_id": {
								"description": "The ID of VPC endpoint for SQS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sqs",
									],
								},
							},
							"vpc_endpoint_sqs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SQS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sqs",
									],
								},
							},
							"vpc_endpoint_ssm_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SSM.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssm",
									],
								},
							},
							"vpc_endpoint_ssm_id": {
								"description": "The ID of VPC endpoint for SSM",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssm",
									],
								},
							},
							"vpc_endpoint_ssm_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SSM.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssm",
									],
								},
							},
							"vpc_endpoint_ssmmessages_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SSMMESSAGES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssmmessages",
									],
								},
							},
							"vpc_endpoint_ssmmessages_id": {
								"description": "The ID of VPC endpoint for SSMMESSAGES",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssmmessages",
									],
								},
							},
							"vpc_endpoint_ssmmessages_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SSMMESSAGES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssmmessages",
									],
								},
							},
							"vpc_endpoint_states_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Step Function.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.states",
									],
								},
							},
							"vpc_endpoint_states_id": {
								"description": "The ID of VPC endpoint for Step Function",
								"expression": {
									"references": [
										"aws_vpc_endpoint.states",
									],
								},
							},
							"vpc_endpoint_states_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Step Function.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.states",
									],
								},
							},
							"vpc_endpoint_storagegateway_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Storage Gateway.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.storagegateway",
									],
								},
							},
							"vpc_endpoint_storagegateway_id": {
								"description": "The ID of VPC endpoint for Storage Gateway",
								"expression": {
									"references": [
										"aws_vpc_endpoint.storagegateway",
									],
								},
							},
							"vpc_endpoint_storagegateway_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Storage Gateway.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.storagegateway",
									],
								},
							},
							"vpc_endpoint_sts_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for STS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sts",
									],
								},
							},
							"vpc_endpoint_sts_id": {
								"description": "The ID of VPC endpoint for STS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sts",
									],
								},
							},
							"vpc_endpoint_sts_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for STS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sts",
									],
								},
							},
							"vpc_endpoint_textract_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Textract.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.textract",
									],
								},
							},
							"vpc_endpoint_textract_id": {
								"description": "The ID of VPC endpoint for Textract",
								"expression": {
									"references": [
										"aws_vpc_endpoint.textract",
									],
								},
							},
							"vpc_endpoint_textract_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Textract.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.textract",
									],
								},
							},
							"vpc_endpoint_transfer_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Transfer.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transfer",
									],
								},
							},
							"vpc_endpoint_transfer_id": {
								"description": "The ID of VPC endpoint for Transfer",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transfer",
									],
								},
							},
							"vpc_endpoint_transfer_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Transfer.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transfer",
									],
								},
							},
							"vpc_endpoint_transferserver_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for transferserver.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transferserver",
									],
								},
							},
							"vpc_endpoint_transferserver_id": {
								"description": "The ID of VPC endpoint for transferserver",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transferserver",
									],
								},
							},
							"vpc_endpoint_transferserver_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for transferserver",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transferserver",
									],
								},
							},
							"vpc_endpoint_workspaces_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Workspaces.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.workspaces",
									],
								},
							},
							"vpc_endpoint_workspaces_id": {
								"description": "The ID of VPC endpoint for Workspaces",
								"expression": {
									"references": [
										"aws_vpc_endpoint.workspaces",
									],
								},
							},
							"vpc_endpoint_workspaces_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Workspaces.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.workspaces",
									],
								},
							},
							"vpc_flow_log_cloudwatch_iam_role_arn": {
								"description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
								"expression": {
									"references": [
										"local.flow_log_iam_role_arn",
									],
								},
							},
							"vpc_flow_log_destination_arn": {
								"description": "The ARN of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"local.flow_log_destination_arn",
									],
								},
							},
							"vpc_flow_log_destination_type": {
								"description": "The type of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"var.flow_log_destination_type",
									],
								},
							},
							"vpc_flow_log_id": {
								"description": "The ID of the Flow Log resource",
								"expression": {
									"references": [
										"aws_flow_log.this",
									],
								},
							},
							"vpc_id": {
								"description": "The ID of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_association_id": {
								"description": "The association ID for the IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_cidr_block": {
								"description": "The IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with this VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_owner_id": {
								"description": "The ID of the AWS account that owns the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_secondary_cidr_blocks": {
								"description": "List of secondary CIDR blocks of the VPC",
								"expression": {
									"references": [
										"aws_vpc_ipv4_cidr_block_association.this",
									],
								},
							},
						},
						"resources": [
							{
								"address": "aws_cloudwatch_log_group.flow_log",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_log_group",
									],
								},
								"expressions": {
									"kms_key_id": {
										"references": [
											"var.flow_log_cloudwatch_log_group_kms_key_id",
										],
									},
									"name": {
										"references": [
											"var.flow_log_cloudwatch_log_group_name_prefix",
											"local.vpc_id",
										],
									},
									"retention_in_days": {
										"references": [
											"var.flow_log_cloudwatch_log_group_retention_in_days",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "flow_log",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_cloudwatch_log_group",
							},
							{
								"address": "aws_customer_gateway.this",
								"expressions": {
									"bgp_asn": {
										"references": [
											"each.value[\"bgp_asn\"]",
											"each.value",
										],
									},
									"ip_address": {
										"references": [
											"each.value[\"ip_address\"]",
											"each.value",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"each.key",
											"var.tags",
											"var.customer_gateway_tags",
										],
									},
									"type": {
										"constant_value": "ipsec.1",
									},
								},
								"for_each_expression": {
									"references": [
										"var.customer_gateways",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_customer_gateway",
							},
							{
								"address": "aws_db_subnet_group.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_subnets",
										"var.create_database_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.database_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_db_subnet_group",
							},
							{
								"address": "aws_default_network_acl.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.manage_default_network_acl",
									],
								},
								"expressions": {
									"default_network_acl_id": {
										"references": [
											"aws_vpc.this",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.public",
											"aws_subnet.private",
											"aws_subnet.intra",
											"aws_subnet.database",
											"aws_subnet.redshift",
											"aws_subnet.elasticache",
											"aws_network_acl.public",
											"aws_network_acl.private",
											"aws_network_acl.intra",
											"aws_network_acl.database",
											"aws_network_acl.redshift",
											"aws_network_acl.elasticache",
										],
									},
									"tags": {
										"references": [
											"var.default_network_acl_name",
											"var.tags",
											"var.default_network_acl_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_default_network_acl",
							},
							{
								"address": "aws_default_security_group.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.manage_default_security_group",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.default_security_group_name",
											"var.tags",
											"var.default_security_group_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_default_security_group",
							},
							{
								"address": "aws_default_vpc.this",
								"count_expression": {
									"references": [
										"var.manage_default_vpc",
									],
								},
								"expressions": {
									"enable_classiclink": {
										"references": [
											"var.default_vpc_enable_classiclink",
										],
									},
									"enable_dns_hostnames": {
										"references": [
											"var.default_vpc_enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.default_vpc_enable_dns_support",
										],
									},
									"tags": {
										"references": [
											"var.default_vpc_name",
											"var.tags",
											"var.default_vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_default_vpc",
							},
							{
								"address": "aws_egress_only_internet_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"local.max_subnet_length",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_egress_only_internet_gateway",
							},
							{
								"address": "aws_eip.nat",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_nat_gateway",
										"var.reuse_nat_ips",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_eip_tags",
										],
									},
									"vpc": {
										"constant_value": true,
									},
								},
								"mode":                "managed",
								"name":                "nat",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_eip",
							},
							{
								"address": "aws_elasticache_subnet_group.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_subnets",
										"var.create_elasticache_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_elasticache_subnet_group",
							},
							{
								"address": "aws_flow_log.this",
								"count_expression": {
									"references": [
										"local.enable_flow_log",
									],
								},
								"expressions": {
									"iam_role_arn": {
										"references": [
											"local.flow_log_iam_role_arn",
										],
									},
									"log_destination": {
										"references": [
											"local.flow_log_destination_arn",
										],
									},
									"log_destination_type": {
										"references": [
											"var.flow_log_destination_type",
										],
									},
									"log_format": {
										"references": [
											"var.flow_log_log_format",
										],
									},
									"max_aggregation_interval": {
										"references": [
											"var.flow_log_max_aggregation_interval",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
									"traffic_type": {
										"references": [
											"var.flow_log_traffic_type",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_flow_log",
							},
							{
								"address": "aws_iam_policy.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"name_prefix": {
										"constant_value": "vpc-flow-log-to-cloudwatch-",
									},
									"policy": {
										"references": [
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_role.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"assume_role_policy": {
										"references": [
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
										],
									},
									"name_prefix": {
										"constant_value": "vpc-flow-log-role-",
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
											"aws_iam_policy.vpc_flow_log_cloudwatch[0]",
											"aws_iam_policy.vpc_flow_log_cloudwatch",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.vpc_flow_log_cloudwatch[0].name",
											"aws_iam_role.vpc_flow_log_cloudwatch[0]",
											"aws_iam_role.vpc_flow_log_cloudwatch",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_internet_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.public_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_internet_gateway",
							},
							{
								"address": "aws_nat_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"depends_on": [
									"aws_internet_gateway.this",
								],
								"expressions": {
									"allocation_id": {
										"references": [
											"local.nat_gateway_ips",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_gateway_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_nat_gateway",
							},
							{
								"address": "aws_network_acl.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_suffix",
											"var.name",
											"var.tags",
											"var.database_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_suffix",
											"var.name",
											"var.tags",
											"var.elasticache_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.intra",
										],
									},
									"tags": {
										"references": [
											"var.intra_subnet_suffix",
											"var.name",
											"var.tags",
											"var.intra_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"var.private_subnet_suffix",
											"var.name",
											"var.tags",
											"var.private_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.public",
										],
									},
									"tags": {
										"references": [
											"var.public_subnet_suffix",
											"var.name",
											"var.tags",
											"var.public_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_suffix",
											"var.name",
											"var.tags",
											"var.redshift_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl_rule.database_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
										"var.database_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.database_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
										"var.database_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
										"var.elasticache_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
										"var.elasticache_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
										"var.intra_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
										"var.intra_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
										"var.private_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
										"var.private_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
										"var.public_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
										"var.public_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
										"var.redshift_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
										"var.redshift_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_redshift_subnet_group.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.create_redshift_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.redshift_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_redshift_subnet_group",
							},
							{
								"address": "aws_route.database_internet_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_internet_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_ipv6_egress",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this[0].id",
											"aws_egress_only_internet_gateway.this[0]",
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_ipv6_egress",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_nat_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_nat_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_ipv6_egress",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"var.private_subnets",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_ipv6_egress",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_nat_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "private_nat_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.public_subnets",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway_ipv6",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.enable_ipv6",
										"var.public_subnets",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway_ipv6",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route_table.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.database_subnet_suffix",
											"var.tags",
											"var.database_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_elasticache_subnet_route_table",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.elasticache_subnet_suffix",
											"var.tags",
											"var.elasticache_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.intra_subnet_suffix",
											"var.tags",
											"var.intra_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"local.max_subnet_length",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.single_nat_gateway",
											"var.name",
											"var.private_subnet_suffix",
											"var.private_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.public_subnet_suffix",
											"var.name",
											"var.tags",
											"var.public_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_redshift_subnet_route_table",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.redshift_subnet_suffix",
											"var.tags",
											"var.redshift_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table_association.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_subnets",
										"var.database_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_database_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.database",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_subnets",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.elasticache",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_elasticache_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.elasticache",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_subnets",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.intra",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_subnets",
										"var.private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_subnets",
										"var.public_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.enable_public_redshift",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift_public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.enable_public_redshift",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.public",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_subnet.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_subnets",
										"var.database_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.database_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.database_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.database_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.database_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.database_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.database_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_subnets",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.elasticache_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.elasticache_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.elasticache_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.elasticache_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.elasticache_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.elasticache_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_subnets",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.intra_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.intra_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.intra_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.intra_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.intra_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.intra_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.intra_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_subnets",
										"var.private_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.private_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.private_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.private_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.private_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.private_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.private_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_subnets",
										"var.one_nat_gateway_per_az",
										"var.public_subnets",
										"var.azs",
										"var.public_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.public_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.public_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.public_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.public_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.public_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"map_public_ip_on_launch": {
										"references": [
											"var.map_public_ip_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.public_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.public_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.redshift_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.redshift_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.redshift_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.redshift_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.redshift_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.redshift_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_vpc.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
									],
								},
								"expressions": {
									"assign_generated_ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
										],
									},
									"cidr_block": {
										"references": [
											"var.cidr",
										],
									},
									"enable_classiclink": {
										"references": [
											"var.enable_classiclink",
										],
									},
									"enable_classiclink_dns_support": {
										"references": [
											"var.enable_classiclink_dns_support",
										],
									},
									"enable_dns_hostnames": {
										"references": [
											"var.enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.enable_dns_support",
										],
									},
									"instance_tenancy": {
										"references": [
											"var.instance_tenancy",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_vpc",
							},
							{
								"address": "aws_vpc_dhcp_options.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"domain_name": {
										"references": [
											"var.dhcp_options_domain_name",
										],
									},
									"domain_name_servers": {
										"references": [
											"var.dhcp_options_domain_name_servers",
										],
									},
									"netbios_name_servers": {
										"references": [
											"var.dhcp_options_netbios_name_servers",
										],
									},
									"netbios_node_type": {
										"references": [
											"var.dhcp_options_netbios_node_type",
										],
									},
									"ntp_servers": {
										"references": [
											"var.dhcp_options_ntp_servers",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.dhcp_options_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options",
							},
							{
								"address": "aws_vpc_dhcp_options_association.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"dhcp_options_id": {
										"references": [
											"aws_vpc_dhcp_options.this[0].id",
											"aws_vpc_dhcp_options.this[0]",
											"aws_vpc_dhcp_options.this",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options_association",
							},
							{
								"address": "aws_vpc_endpoint.access_analyzer",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_access_analyzer_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.access_analyzer_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.access_analyzer_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.access_analyzer[0].service_name",
											"data.aws_vpc_endpoint_service.access_analyzer[0]",
											"data.aws_vpc_endpoint_service.access_analyzer",
										],
									},
									"subnet_ids": {
										"references": [
											"var.access_analyzer_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "access_analyzer",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.acm_pca",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_acm_pca_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.acm_pca_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.acm_pca_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.acm_pca[0].service_name",
											"data.aws_vpc_endpoint_service.acm_pca[0]",
											"data.aws_vpc_endpoint_service.acm_pca",
										],
									},
									"subnet_ids": {
										"references": [
											"var.acm_pca_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "acm_pca",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.apigw",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_apigw_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.apigw_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.apigw_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.apigw[0].service_name",
											"data.aws_vpc_endpoint_service.apigw[0]",
											"data.aws_vpc_endpoint_service.apigw",
										],
									},
									"subnet_ids": {
										"references": [
											"var.apigw_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "apigw",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.appmesh_envoy_management",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appmesh_envoy_management_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.appmesh_envoy_management_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.appmesh_envoy_management_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.appmesh_envoy_management[0].service_name",
											"data.aws_vpc_endpoint_service.appmesh_envoy_management[0]",
											"data.aws_vpc_endpoint_service.appmesh_envoy_management",
										],
									},
									"subnet_ids": {
										"references": [
											"var.appmesh_envoy_management_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "appmesh_envoy_management",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.appstream_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appstream_api_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.appstream_api_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.appstream_api_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.appstream_api[0].service_name",
											"data.aws_vpc_endpoint_service.appstream_api[0]",
											"data.aws_vpc_endpoint_service.appstream_api",
										],
									},
									"subnet_ids": {
										"references": [
											"var.appstream_api_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "appstream_api",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.appstream_streaming",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appstream_streaming_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.appstream_streaming_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.appstream_streaming_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.appstream_streaming[0].service_name",
											"data.aws_vpc_endpoint_service.appstream_streaming[0]",
											"data.aws_vpc_endpoint_service.appstream_streaming",
										],
									},
									"subnet_ids": {
										"references": [
											"var.appstream_streaming_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "appstream_streaming",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.athena",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_athena_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.athena_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.athena_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.athena[0].service_name",
											"data.aws_vpc_endpoint_service.athena[0]",
											"data.aws_vpc_endpoint_service.athena",
										],
									},
									"subnet_ids": {
										"references": [
											"var.athena_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "athena",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.auto_scaling_plans",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_auto_scaling_plans_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.auto_scaling_plans_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.auto_scaling_plans_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.auto_scaling_plans[0].service_name",
											"data.aws_vpc_endpoint_service.auto_scaling_plans[0]",
											"data.aws_vpc_endpoint_service.auto_scaling_plans",
										],
									},
									"subnet_ids": {
										"references": [
											"var.auto_scaling_plans_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "auto_scaling_plans",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.cloud_directory",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloud_directory_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.cloud_directory_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.cloud_directory_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.cloud_directory[0].service_name",
											"data.aws_vpc_endpoint_service.cloud_directory[0]",
											"data.aws_vpc_endpoint_service.cloud_directory",
										],
									},
									"subnet_ids": {
										"references": [
											"var.cloud_directory_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "cloud_directory",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.cloudformation",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloudformation_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.cloudformation_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.cloudformation_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.cloudformation[0].service_name",
											"data.aws_vpc_endpoint_service.cloudformation[0]",
											"data.aws_vpc_endpoint_service.cloudformation",
										],
									},
									"subnet_ids": {
										"references": [
											"var.cloudformation_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "cloudformation",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.cloudtrail",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloudtrail_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.cloudtrail_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.cloudtrail_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.cloudtrail[0].service_name",
											"data.aws_vpc_endpoint_service.cloudtrail[0]",
											"data.aws_vpc_endpoint_service.cloudtrail",
										],
									},
									"subnet_ids": {
										"references": [
											"var.cloudtrail_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "cloudtrail",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codeartifact_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codeartifact_api_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codeartifact_api_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codeartifact_api_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codeartifact_api[0].service_name",
											"data.aws_vpc_endpoint_service.codeartifact_api[0]",
											"data.aws_vpc_endpoint_service.codeartifact_api",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codeartifact_api_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codeartifact_api",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codeartifact_repositories",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codeartifact_repositories_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codeartifact_repositories_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codeartifact_repositories_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codeartifact_repositories[0].service_name",
											"data.aws_vpc_endpoint_service.codeartifact_repositories[0]",
											"data.aws_vpc_endpoint_service.codeartifact_repositories",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codeartifact_repositories_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codeartifact_repositories",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codebuild",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codebuild_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codebuild_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codebuild_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codebuild[0].service_name",
											"data.aws_vpc_endpoint_service.codebuild[0]",
											"data.aws_vpc_endpoint_service.codebuild",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codebuild_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codebuild",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codecommit",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codecommit_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codecommit_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codecommit_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codecommit[0].service_name",
											"data.aws_vpc_endpoint_service.codecommit[0]",
											"data.aws_vpc_endpoint_service.codecommit",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codecommit_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codecommit",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codedeploy",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codedeploy_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codedeploy_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codedeploy_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codedeploy[0].service_name",
											"data.aws_vpc_endpoint_service.codedeploy[0]",
											"data.aws_vpc_endpoint_service.codedeploy",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codedeploy_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codedeploy",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codedeploy_commands_secure",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codedeploy_commands_secure_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codedeploy_commands_secure_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codedeploy_commands_secure_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codedeploy_commands_secure[0].service_name",
											"data.aws_vpc_endpoint_service.codedeploy_commands_secure[0]",
											"data.aws_vpc_endpoint_service.codedeploy_commands_secure",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codedeploy_commands_secure_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codedeploy_commands_secure",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codepipeline",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codepipeline_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codepipeline_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codepipeline_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codepipeline[0].service_name",
											"data.aws_vpc_endpoint_service.codepipeline[0]",
											"data.aws_vpc_endpoint_service.codepipeline",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codepipeline_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codepipeline",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.config",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_config_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.config_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.config_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.config[0].service_name",
											"data.aws_vpc_endpoint_service.config[0]",
											"data.aws_vpc_endpoint_service.config",
										],
									},
									"subnet_ids": {
										"references": [
											"var.config_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "config",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.datasync",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_datasync_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.datasync_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.datasync_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.datasync[0].service_name",
											"data.aws_vpc_endpoint_service.datasync[0]",
											"data.aws_vpc_endpoint_service.datasync",
										],
									},
									"subnet_ids": {
										"references": [
											"var.datasync_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "datasync",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
									],
								},
								"expressions": {
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.dynamodb[0].service_name",
											"data.aws_vpc_endpoint_service.dynamodb[0]",
											"data.aws_vpc_endpoint_service.dynamodb",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "dynamodb",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ebs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ebs_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ebs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ebs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ebs[0].service_name",
											"data.aws_vpc_endpoint_service.ebs[0]",
											"data.aws_vpc_endpoint_service.ebs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ebs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ebs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ec2",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ec2_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ec2_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ec2[0].service_name",
											"data.aws_vpc_endpoint_service.ec2[0]",
											"data.aws_vpc_endpoint_service.ec2",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ec2_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ec2",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ec2_autoscaling",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2_autoscaling_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ec2_autoscaling_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ec2_autoscaling_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ec2_autoscaling[0].service_name",
											"data.aws_vpc_endpoint_service.ec2_autoscaling[0]",
											"data.aws_vpc_endpoint_service.ec2_autoscaling",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ec2_autoscaling_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ec2_autoscaling",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ec2messages",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2messages_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ec2messages_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ec2messages_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ec2messages[0].service_name",
											"data.aws_vpc_endpoint_service.ec2messages[0]",
											"data.aws_vpc_endpoint_service.ec2messages",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ec2messages_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ec2messages",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecr_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecr_api_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ecr_api_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecr_api_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecr_api[0].service_name",
											"data.aws_vpc_endpoint_service.ecr_api[0]",
											"data.aws_vpc_endpoint_service.ecr_api",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecr_api_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecr_api",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecr_dkr",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecr_dkr_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ecr_dkr_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecr_dkr_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecr_dkr[0].service_name",
											"data.aws_vpc_endpoint_service.ecr_dkr[0]",
											"data.aws_vpc_endpoint_service.ecr_dkr",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecr_dkr_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecr_dkr",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ecs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecs[0].service_name",
											"data.aws_vpc_endpoint_service.ecs[0]",
											"data.aws_vpc_endpoint_service.ecs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecs_agent",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_agent_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ecs_agent_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecs_agent_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecs_agent[0].service_name",
											"data.aws_vpc_endpoint_service.ecs_agent[0]",
											"data.aws_vpc_endpoint_service.ecs_agent",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecs_agent_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecs_agent",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecs_telemetry",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_telemetry_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ecs_telemetry_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecs_telemetry_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecs_telemetry[0].service_name",
											"data.aws_vpc_endpoint_service.ecs_telemetry[0]",
											"data.aws_vpc_endpoint_service.ecs_telemetry",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecs_telemetry_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecs_telemetry",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.efs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_efs_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.efs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.efs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.efs[0].service_name",
											"data.aws_vpc_endpoint_service.efs[0]",
											"data.aws_vpc_endpoint_service.efs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.efs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "efs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.elastic_inference_runtime",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elastic_inference_runtime_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.elastic_inference_runtime_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.elastic_inference_runtime_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.elastic_inference_runtime[0].service_name",
											"data.aws_vpc_endpoint_service.elastic_inference_runtime[0]",
											"data.aws_vpc_endpoint_service.elastic_inference_runtime",
										],
									},
									"subnet_ids": {
										"references": [
											"var.elastic_inference_runtime_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elastic_inference_runtime",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.elasticbeanstalk",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticbeanstalk_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.elasticbeanstalk_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.elasticbeanstalk_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.elasticbeanstalk[0].service_name",
											"data.aws_vpc_endpoint_service.elasticbeanstalk[0]",
											"data.aws_vpc_endpoint_service.elasticbeanstalk",
										],
									},
									"subnet_ids": {
										"references": [
											"var.elasticbeanstalk_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticbeanstalk",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.elasticbeanstalk_health",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticbeanstalk_health_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.elasticbeanstalk_health_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.elasticbeanstalk_health_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.elasticbeanstalk_health[0].service_name",
											"data.aws_vpc_endpoint_service.elasticbeanstalk_health[0]",
											"data.aws_vpc_endpoint_service.elasticbeanstalk_health",
										],
									},
									"subnet_ids": {
										"references": [
											"var.elasticbeanstalk_health_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticbeanstalk_health",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.elasticloadbalancing",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticloadbalancing_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.elasticloadbalancing_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.elasticloadbalancing_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.elasticloadbalancing[0].service_name",
											"data.aws_vpc_endpoint_service.elasticloadbalancing[0]",
											"data.aws_vpc_endpoint_service.elasticloadbalancing",
										],
									},
									"subnet_ids": {
										"references": [
											"var.elasticloadbalancing_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticloadbalancing",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.emr",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_emr_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.emr_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.emr_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.emr[0].service_name",
											"data.aws_vpc_endpoint_service.emr[0]",
											"data.aws_vpc_endpoint_service.emr",
										],
									},
									"subnet_ids": {
										"references": [
											"var.emr_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "emr",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.events",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_events_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.events_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.events_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.events[0].service_name",
											"data.aws_vpc_endpoint_service.events[0]",
											"data.aws_vpc_endpoint_service.events",
										],
									},
									"subnet_ids": {
										"references": [
											"var.events_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "events",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.git_codecommit",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_git_codecommit_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.git_codecommit_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.git_codecommit_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.git_codecommit[0].service_name",
											"data.aws_vpc_endpoint_service.git_codecommit[0]",
											"data.aws_vpc_endpoint_service.git_codecommit",
										],
									},
									"subnet_ids": {
										"references": [
											"var.git_codecommit_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "git_codecommit",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.glue",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_glue_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.glue_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.glue_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.glue[0].service_name",
											"data.aws_vpc_endpoint_service.glue[0]",
											"data.aws_vpc_endpoint_service.glue",
										],
									},
									"subnet_ids": {
										"references": [
											"var.glue_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "glue",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.kinesis_firehose",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kinesis_firehose_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.kinesis_firehose_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.kinesis_firehose_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.kinesis_firehose[0].service_name",
											"data.aws_vpc_endpoint_service.kinesis_firehose[0]",
											"data.aws_vpc_endpoint_service.kinesis_firehose",
										],
									},
									"subnet_ids": {
										"references": [
											"var.kinesis_firehose_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "kinesis_firehose",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.kinesis_streams",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kinesis_streams_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.kinesis_streams_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.kinesis_streams_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.kinesis_streams[0].service_name",
											"data.aws_vpc_endpoint_service.kinesis_streams[0]",
											"data.aws_vpc_endpoint_service.kinesis_streams",
										],
									},
									"subnet_ids": {
										"references": [
											"var.kinesis_streams_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "kinesis_streams",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.kms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kms_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.kms_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.kms_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.kms[0].service_name",
											"data.aws_vpc_endpoint_service.kms[0]",
											"data.aws_vpc_endpoint_service.kms",
										],
									},
									"subnet_ids": {
										"references": [
											"var.kms_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "kms",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.lambda",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_lambda_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.lambda_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.lambda_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.lambda[0].service_name",
											"data.aws_vpc_endpoint_service.lambda[0]",
											"data.aws_vpc_endpoint_service.lambda",
										],
									},
									"subnet_ids": {
										"references": [
											"var.lambda_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "lambda",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.logs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_logs_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.logs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.logs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.logs[0].service_name",
											"data.aws_vpc_endpoint_service.logs[0]",
											"data.aws_vpc_endpoint_service.logs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.logs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "logs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.monitoring",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_monitoring_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.monitoring_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.monitoring_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.monitoring[0].service_name",
											"data.aws_vpc_endpoint_service.monitoring[0]",
											"data.aws_vpc_endpoint_service.monitoring",
										],
									},
									"subnet_ids": {
										"references": [
											"var.monitoring_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "monitoring",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.qldb_session",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_qldb_session_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.qldb_session_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.qldb_session_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.qldb_session[0].service_name",
											"data.aws_vpc_endpoint_service.qldb_session[0]",
											"data.aws_vpc_endpoint_service.qldb_session",
										],
									},
									"subnet_ids": {
										"references": [
											"var.qldb_session_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "qldb_session",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.rds",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_rds_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.rds_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.rds_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.rds[0].service_name",
											"data.aws_vpc_endpoint_service.rds[0]",
											"data.aws_vpc_endpoint_service.rds",
										],
									},
									"subnet_ids": {
										"references": [
											"var.rds_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "rds",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.rekognition",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_rekognition_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.rekognition_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.rekognition_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.rekognition[0].service_name",
											"data.aws_vpc_endpoint_service.rekognition[0]",
											"data.aws_vpc_endpoint_service.rekognition",
										],
									},
									"subnet_ids": {
										"references": [
											"var.rekognition_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "rekognition",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
									],
								},
								"expressions": {
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.s3[0].service_name",
											"data.aws_vpc_endpoint_service.s3[0]",
											"data.aws_vpc_endpoint_service.s3",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "s3",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sagemaker_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_api_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.sagemaker_api_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sagemaker_api_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sagemaker_api[0].service_name",
											"data.aws_vpc_endpoint_service.sagemaker_api[0]",
											"data.aws_vpc_endpoint_service.sagemaker_api",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sagemaker_api_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sagemaker_api",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sagemaker_notebook",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_notebook_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.sagemaker_notebook_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sagemaker_notebook_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sagemaker_notebook[0].service_name",
											"data.aws_vpc_endpoint_service.sagemaker_notebook[0]",
											"data.aws_vpc_endpoint_service.sagemaker_notebook",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sagemaker_notebook_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sagemaker_notebook",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sagemaker_runtime",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_runtime_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.sagemaker_runtime_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sagemaker_runtime_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sagemaker_runtime[0].service_name",
											"data.aws_vpc_endpoint_service.sagemaker_runtime[0]",
											"data.aws_vpc_endpoint_service.sagemaker_runtime",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sagemaker_runtime_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sagemaker_runtime",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.secretsmanager",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_secretsmanager_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.secretsmanager_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.secretsmanager_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.secretsmanager[0].service_name",
											"data.aws_vpc_endpoint_service.secretsmanager[0]",
											"data.aws_vpc_endpoint_service.secretsmanager",
										],
									},
									"subnet_ids": {
										"references": [
											"var.secretsmanager_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "secretsmanager",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.servicecatalog",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_servicecatalog_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.servicecatalog_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.servicecatalog_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.servicecatalog[0].service_name",
											"data.aws_vpc_endpoint_service.servicecatalog[0]",
											"data.aws_vpc_endpoint_service.servicecatalog",
										],
									},
									"subnet_ids": {
										"references": [
											"var.servicecatalog_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "servicecatalog",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ses",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ses_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ses_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ses_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ses[0].service_name",
											"data.aws_vpc_endpoint_service.ses[0]",
											"data.aws_vpc_endpoint_service.ses",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ses_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ses",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sms_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.sms_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sms_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sms[0].service_name",
											"data.aws_vpc_endpoint_service.sms[0]",
											"data.aws_vpc_endpoint_service.sms",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sms_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sms",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sns",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sns_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.sns_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sns_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sns[0].service_name",
											"data.aws_vpc_endpoint_service.sns[0]",
											"data.aws_vpc_endpoint_service.sns",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sns_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sns",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sqs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sqs_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.sqs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sqs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sqs[0].service_name",
											"data.aws_vpc_endpoint_service.sqs[0]",
											"data.aws_vpc_endpoint_service.sqs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sqs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sqs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ssm",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ssm_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ssm_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ssm_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ssm[0].service_name",
											"data.aws_vpc_endpoint_service.ssm[0]",
											"data.aws_vpc_endpoint_service.ssm",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ssm_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ssm",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ssmmessages",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ssmmessages_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ssmmessages_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ssmmessages_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ssmmessages[0].service_name",
											"data.aws_vpc_endpoint_service.ssmmessages[0]",
											"data.aws_vpc_endpoint_service.ssmmessages",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ssmmessages_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ssmmessages",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.states",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_states_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.states_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.states_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.states[0].service_name",
											"data.aws_vpc_endpoint_service.states[0]",
											"data.aws_vpc_endpoint_service.states",
										],
									},
									"subnet_ids": {
										"references": [
											"var.states_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "states",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.storagegateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_storagegateway_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.storagegateway_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.storagegateway_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.storagegateway[0].service_name",
											"data.aws_vpc_endpoint_service.storagegateway[0]",
											"data.aws_vpc_endpoint_service.storagegateway",
										],
									},
									"subnet_ids": {
										"references": [
											"var.storagegateway_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "storagegateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sts",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sts_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.sts_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sts_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sts[0].service_name",
											"data.aws_vpc_endpoint_service.sts[0]",
											"data.aws_vpc_endpoint_service.sts",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sts_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sts",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.textract",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_textract_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.textract_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.textract_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.textract[0].service_name",
											"data.aws_vpc_endpoint_service.textract[0]",
											"data.aws_vpc_endpoint_service.textract",
										],
									},
									"subnet_ids": {
										"references": [
											"var.textract_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "textract",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.transfer",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_transfer_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.transfer_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.transfer_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.transfer[0].service_name",
											"data.aws_vpc_endpoint_service.transfer[0]",
											"data.aws_vpc_endpoint_service.transfer",
										],
									},
									"subnet_ids": {
										"references": [
											"var.transfer_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "transfer",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.transferserver",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_transferserver_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.transferserver_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.transferserver_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.transferserver[0].service_name",
											"data.aws_vpc_endpoint_service.transferserver[0]",
											"data.aws_vpc_endpoint_service.transferserver",
										],
									},
									"subnet_ids": {
										"references": [
											"var.transferserver_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "transferserver",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.workspaces",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_workspaces_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.workspaces_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.workspaces_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.workspaces[0].service_name",
											"data.aws_vpc_endpoint_service.workspaces[0]",
											"data.aws_vpc_endpoint_service.workspaces",
										],
									},
									"subnet_ids": {
										"references": [
											"var.workspaces_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "workspaces",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.intra_dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.dynamodb[0].id",
											"aws_vpc_endpoint.dynamodb[0]",
											"aws_vpc_endpoint.dynamodb",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_dynamodb",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.intra_s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.s3[0].id",
											"aws_vpc_endpoint.s3[0]",
											"aws_vpc_endpoint.s3",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_s3",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.private_dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.dynamodb[0].id",
											"aws_vpc_endpoint.dynamodb[0]",
											"aws_vpc_endpoint.dynamodb",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_dynamodb",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.private_s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.s3[0].id",
											"aws_vpc_endpoint.s3[0]",
											"aws_vpc_endpoint.s3",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_s3",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.public_dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
										"var.public_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.dynamodb[0].id",
											"aws_vpc_endpoint.dynamodb[0]",
											"aws_vpc_endpoint.dynamodb",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_dynamodb",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.public_s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
										"var.enable_public_s3_endpoint",
										"var.public_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.s3[0].id",
											"aws_vpc_endpoint.s3[0]",
											"aws_vpc_endpoint.s3",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_s3",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_ipv4_cidr_block_association.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.secondary_cidr_blocks",
										"var.secondary_cidr_blocks",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.secondary_cidr_blocks",
											"count.index",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_ipv4_cidr_block_association",
							},
							{
								"address": "aws_vpn_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_vpn_gateway",
									],
								},
								"expressions": {
									"amazon_side_asn": {
										"references": [
											"var.amazon_side_asn",
										],
									},
									"availability_zone": {
										"references": [
											"var.vpn_gateway_az",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpn_gateway_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway",
							},
							{
								"address": "aws_vpn_gateway_attachment.this",
								"count_expression": {
									"references": [
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"var.vpn_gateway_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_attachment",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.propagate_intra_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.propagate_private_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"var.private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.propagate_public_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"sts:AssumeRole",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"vpc-flow-logs.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
										},
									],
								},
								"mode":                "data",
								"name":                "flow_log_cloudwatch_assume_role",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"logs:CreateLogGroup",
													"logs:CreateLogStream",
													"logs:PutLogEvents",
													"logs:DescribeLogGroups",
													"logs:DescribeLogStreams",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"resources": {
												"constant_value": [
													"*",
												],
											},
											"sid": {
												"constant_value": "AWSVPCFlowLogsPushToCloudWatch",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_vpc_endpoint_service.access_analyzer",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_access_analyzer_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "access-analyzer",
									},
								},
								"mode":                "data",
								"name":                "access_analyzer",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.acm_pca",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_acm_pca_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "acm-pca",
									},
								},
								"mode":                "data",
								"name":                "acm_pca",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.apigw",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_apigw_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "execute-api",
									},
								},
								"mode":                "data",
								"name":                "apigw",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.appmesh_envoy_management",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appmesh_envoy_management_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "appmesh-envoy-management",
									},
								},
								"mode":                "data",
								"name":                "appmesh_envoy_management",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.appstream_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appstream_streaming_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "appstream.api",
									},
								},
								"mode":                "data",
								"name":                "appstream_api",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.appstream_streaming",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appstream_streaming_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "appstream.streaming",
									},
								},
								"mode":                "data",
								"name":                "appstream_streaming",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.athena",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_athena_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "athena",
									},
								},
								"mode":                "data",
								"name":                "athena",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.auto_scaling_plans",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_auto_scaling_plans_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "autoscaling-plans",
									},
								},
								"mode":                "data",
								"name":                "auto_scaling_plans",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.cloud_directory",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloud_directory_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "clouddirectory",
									},
								},
								"mode":                "data",
								"name":                "cloud_directory",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.cloudformation",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloudformation_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "cloudformation",
									},
								},
								"mode":                "data",
								"name":                "cloudformation",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.cloudtrail",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloudtrail_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "cloudtrail",
									},
								},
								"mode":                "data",
								"name":                "cloudtrail",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codeartifact_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codeartifact_api_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codeartifact.api",
									},
								},
								"mode":                "data",
								"name":                "codeartifact_api",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codeartifact_repositories",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codeartifact_repositories_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codeartifact.repositories",
									},
								},
								"mode":                "data",
								"name":                "codeartifact_repositories",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codebuild",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codebuild_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codebuild",
									},
								},
								"mode":                "data",
								"name":                "codebuild",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codecommit",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codecommit_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codecommit",
									},
								},
								"mode":                "data",
								"name":                "codecommit",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codedeploy",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codedeploy_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codedeploy",
									},
								},
								"mode":                "data",
								"name":                "codedeploy",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codedeploy_commands_secure",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codedeploy_commands_secure_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codedeploy-commands-secure",
									},
								},
								"mode":                "data",
								"name":                "codedeploy_commands_secure",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codepipeline",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codepipeline_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codepipeline",
									},
								},
								"mode":                "data",
								"name":                "codepipeline",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.config",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_config_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "config",
									},
								},
								"mode":                "data",
								"name":                "config",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.datasync",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_datasync_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "datasync",
									},
								},
								"mode":                "data",
								"name":                "datasync",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "dynamodb",
									},
								},
								"mode":                "data",
								"name":                "dynamodb",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ebs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ebs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ebs",
									},
								},
								"mode":                "data",
								"name":                "ebs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ec2",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ec2",
									},
								},
								"mode":                "data",
								"name":                "ec2",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ec2_autoscaling",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2_autoscaling_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "autoscaling",
									},
								},
								"mode":                "data",
								"name":                "ec2_autoscaling",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ec2messages",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2messages_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ec2messages",
									},
								},
								"mode":                "data",
								"name":                "ec2messages",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecr_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecr_api_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecr.api",
									},
								},
								"mode":                "data",
								"name":                "ecr_api",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecr_dkr",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecr_dkr_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecr.dkr",
									},
								},
								"mode":                "data",
								"name":                "ecr_dkr",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecs",
									},
								},
								"mode":                "data",
								"name":                "ecs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecs_agent",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_agent_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecs-agent",
									},
								},
								"mode":                "data",
								"name":                "ecs_agent",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecs_telemetry",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_telemetry_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecs-telemetry",
									},
								},
								"mode":                "data",
								"name":                "ecs_telemetry",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.efs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_efs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticfilesystem",
									},
								},
								"mode":                "data",
								"name":                "efs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.elastic_inference_runtime",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elastic_inference_runtime_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elastic-inference.runtime",
									},
								},
								"mode":                "data",
								"name":                "elastic_inference_runtime",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.elasticbeanstalk",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticbeanstalk_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticbeanstalk",
									},
								},
								"mode":                "data",
								"name":                "elasticbeanstalk",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.elasticbeanstalk_health",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticbeanstalk_health_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticbeanstalk-health",
									},
								},
								"mode":                "data",
								"name":                "elasticbeanstalk_health",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.elasticloadbalancing",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticloadbalancing_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticloadbalancing",
									},
								},
								"mode":                "data",
								"name":                "elasticloadbalancing",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.emr",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_emr_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticmapreduce",
									},
								},
								"mode":                "data",
								"name":                "emr",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.events",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_events_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "events",
									},
								},
								"mode":                "data",
								"name":                "events",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.git_codecommit",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_git_codecommit_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "git-codecommit",
									},
								},
								"mode":                "data",
								"name":                "git_codecommit",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.glue",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_glue_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "glue",
									},
								},
								"mode":                "data",
								"name":                "glue",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.kinesis_firehose",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kinesis_firehose_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "kinesis-firehose",
									},
								},
								"mode":                "data",
								"name":                "kinesis_firehose",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.kinesis_streams",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kinesis_streams_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "kinesis-streams",
									},
								},
								"mode":                "data",
								"name":                "kinesis_streams",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.kms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kms_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "kms",
									},
								},
								"mode":                "data",
								"name":                "kms",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.lambda",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_lambda_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "lambda",
									},
								},
								"mode":                "data",
								"name":                "lambda",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.logs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_logs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "logs",
									},
								},
								"mode":                "data",
								"name":                "logs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.monitoring",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_monitoring_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "monitoring",
									},
								},
								"mode":                "data",
								"name":                "monitoring",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.qldb_session",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_qldb_session_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "qldb.session",
									},
								},
								"mode":                "data",
								"name":                "qldb_session",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.rds",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_rds_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "rds",
									},
								},
								"mode":                "data",
								"name":                "rds",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.rekognition",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_rekognition_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "rekognition",
									},
								},
								"mode":                "data",
								"name":                "rekognition",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "s3",
									},
								},
								"mode":                "data",
								"name":                "s3",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sagemaker_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_api_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sagemaker.api",
									},
								},
								"mode":                "data",
								"name":                "sagemaker_api",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sagemaker_notebook",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_notebook_endpoint",
									],
								},
								"expressions": {
									"service_name": {
										"references": [
											"var.sagemaker_notebook_endpoint_region",
										],
									},
								},
								"mode":                "data",
								"name":                "sagemaker_notebook",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sagemaker_runtime",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_runtime_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sagemaker.runtime",
									},
								},
								"mode":                "data",
								"name":                "sagemaker_runtime",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.secretsmanager",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_secretsmanager_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "secretsmanager",
									},
								},
								"mode":                "data",
								"name":                "secretsmanager",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.servicecatalog",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_servicecatalog_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "servicecatalog",
									},
								},
								"mode":                "data",
								"name":                "servicecatalog",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ses",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ses_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "email-smtp",
									},
								},
								"mode":                "data",
								"name":                "ses",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sms_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sms",
									},
								},
								"mode":                "data",
								"name":                "sms",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sns",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sns_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sns",
									},
								},
								"mode":                "data",
								"name":                "sns",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sqs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sqs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sqs",
									},
								},
								"mode":                "data",
								"name":                "sqs",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ssm",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ssm_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ssm",
									},
								},
								"mode":                "data",
								"name":                "ssm",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ssmmessages",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ssmmessages_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ssmmessages",
									},
								},
								"mode":                "data",
								"name":                "ssmmessages",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.states",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_states_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "states",
									},
								},
								"mode":                "data",
								"name":                "states",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.storagegateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_storagegateway_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "storagegateway",
									},
								},
								"mode":                "data",
								"name":                "storagegateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sts",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sts_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sts",
									},
								},
								"mode":                "data",
								"name":                "sts",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.textract",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_textract_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "textract",
									},
								},
								"mode":                "data",
								"name":                "textract",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.transfer",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_transfer_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "transfer",
									},
								},
								"mode":                "data",
								"name":                "transfer",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.transferserver",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_transferserver_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "transfer.server",
									},
								},
								"mode":                "data",
								"name":                "transferserver",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.workspaces",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_workspaces_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "workspaces",
									},
								},
								"mode":                "data",
								"name":                "workspaces",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
						],
						"variables": {
							"access_analyzer_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Access Analyzer endpoint",
							},
							"access_analyzer_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Access Analyzer endpoint",
							},
							"access_analyzer_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Access Analyzer endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"acm_pca_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ACM PCA endpoint",
							},
							"acm_pca_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ACM PCA endpoint",
							},
							"acm_pca_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ACM PCA endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"amazon_side_asn": {
								"default":     "64512",
								"description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN.",
							},
							"apigw_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for API GW endpoint",
							},
							"apigw_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for API GW  endpoint",
							},
							"apigw_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for API GW endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"appmesh_envoy_management_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for AppMesh endpoint",
							},
							"appmesh_envoy_management_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for AppMesh endpoint",
							},
							"appmesh_envoy_management_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for AppMesh endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"appstream_api_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for AppStream API endpoint",
							},
							"appstream_api_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for AppStream API endpoint",
							},
							"appstream_api_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for AppStream API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"appstream_streaming_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for AppStream Streaming endpoint",
							},
							"appstream_streaming_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for AppStream Streaming endpoint",
							},
							"appstream_streaming_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for AppStream Streaming endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"athena_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Athena endpoint",
							},
							"athena_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Athena endpoint",
							},
							"athena_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Athena endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"auto_scaling_plans_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Auto Scaling Plans endpoint",
							},
							"auto_scaling_plans_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Auto Scaling Plans endpoint",
							},
							"auto_scaling_plans_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Auto Scaling Plans endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"azs": {
								"default":     [],
								"description": "A list of availability zones names or ids in the region",
							},
							"cidr": {
								"default":     "0.0.0.0/0",
								"description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden",
							},
							"cloud_directory_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Cloud Directory endpoint",
							},
							"cloud_directory_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Cloud Directory endpoint",
							},
							"cloud_directory_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Cloud Directory endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"cloudformation_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Cloudformation endpoint",
							},
							"cloudformation_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Cloudformation endpoint",
							},
							"cloudformation_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Cloudformation endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"cloudtrail_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CloudTrail endpoint",
							},
							"cloudtrail_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CloudTrail endpoint",
							},
							"cloudtrail_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CloudTrail endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codeartifact_api_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Codeartifact API endpoint",
							},
							"codeartifact_api_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Codeartifact API endpoint",
							},
							"codeartifact_api_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Codeartifact API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codeartifact_repositories_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Codeartifact repositories endpoint",
							},
							"codeartifact_repositories_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Codeartifact repositories endpoint",
							},
							"codeartifact_repositories_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Codeartifact repositories endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codebuild_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Codebuild endpoint",
							},
							"codebuild_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Codebuild endpoint",
							},
							"codebuild_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Codebuilt endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codecommit_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Codecommit endpoint",
							},
							"codecommit_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Codecommit endpoint",
							},
							"codecommit_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codedeploy_commands_secure_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CodeDeploy Commands Secure endpoint",
							},
							"codedeploy_commands_secure_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CodeDeploy Commands Secure endpoint",
							},
							"codedeploy_commands_secure_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CodeDeploy Commands Secure endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codedeploy_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CodeDeploy endpoint",
							},
							"codedeploy_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CodeDeploy endpoint",
							},
							"codedeploy_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CodeDeploy endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codepipeline_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CodePipeline endpoint",
							},
							"codepipeline_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CodePipeline endpoint",
							},
							"codepipeline_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CodePipeline endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"config_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for config endpoint",
							},
							"config_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for config endpoint",
							},
							"config_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for config endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"create_database_internet_gateway_route": {
								"default":     false,
								"description": "Controls if an internet gateway route for public database access should be created",
							},
							"create_database_nat_gateway_route": {
								"default":     false,
								"description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
							},
							"create_database_subnet_group": {
								"default":     true,
								"description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
							},
							"create_database_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for database should be created",
							},
							"create_egress_only_igw": {
								"default":     true,
								"description": "Controls if an Egress Only Internet Gateway is created and its related routes.",
							},
							"create_elasticache_subnet_group": {
								"default":     true,
								"description": "Controls if elasticache subnet group should be created",
							},
							"create_elasticache_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for elasticache should be created",
							},
							"create_flow_log_cloudwatch_iam_role": {
								"default":     false,
								"description": "Whether to create IAM role for VPC Flow Logs",
							},
							"create_flow_log_cloudwatch_log_group": {
								"default":     false,
								"description": "Whether to create CloudWatch log group for VPC Flow Logs",
							},
							"create_igw": {
								"default":     true,
								"description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them.",
							},
							"create_redshift_subnet_group": {
								"default":     true,
								"description": "Controls if redshift subnet group should be created",
							},
							"create_redshift_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for redshift should be created",
							},
							"create_vpc": {
								"default":     true,
								"description": "Controls if VPC should be created (it affects almost all resources)",
							},
							"customer_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the Customer Gateway",
							},
							"customer_gateways": {
								"default":     {},
								"description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
							},
							"database_acl_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets network ACL",
							},
							"database_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
							},
							"database_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets inbound network ACL rules",
							},
							"database_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets outbound network ACL rules",
							},
							"database_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the database route tables",
							},
							"database_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"database_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the database subnet group",
							},
							"database_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"database_subnet_suffix": {
								"default":     "db",
								"description": "Suffix to append to database subnets name",
							},
							"database_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets",
							},
							"database_subnets": {
								"default":     [],
								"description": "A list of database subnets",
							},
							"datasync_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Data Sync endpoint",
							},
							"datasync_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Data Sync endpoint",
							},
							"datasync_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Data Sync endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"default_network_acl_egress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of egress rules to set on the Default Network ACL",
							},
							"default_network_acl_ingress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of ingress rules to set on the Default Network ACL",
							},
							"default_network_acl_name": {
								"default":     "",
								"description": "Name to be used on the Default Network ACL",
							},
							"default_network_acl_tags": {
								"default":     {},
								"description": "Additional tags for the Default Network ACL",
							},
							"default_security_group_egress": {
								"description": "List of maps of egress rules to set on the default security group",
							},
							"default_security_group_ingress": {
								"description": "List of maps of ingress rules to set on the default security group",
							},
							"default_security_group_name": {
								"default":     "default",
								"description": "Name to be used on the default security group",
							},
							"default_security_group_tags": {
								"default":     {},
								"description": "Additional tags for the default security group",
							},
							"default_vpc_enable_classiclink": {
								"default":     false,
								"description": "Should be true to enable ClassicLink in the Default VPC",
							},
							"default_vpc_enable_dns_hostnames": {
								"default":     false,
								"description": "Should be true to enable DNS hostnames in the Default VPC",
							},
							"default_vpc_enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the Default VPC",
							},
							"default_vpc_name": {
								"default":     "",
								"description": "Name to be used on the Default VPC",
							},
							"default_vpc_tags": {
								"default":     {},
								"description": "Additional tags for the Default VPC",
							},
							"dhcp_options_domain_name": {
								"default":     "",
								"description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_domain_name_servers": {
								"default": [
									"AmazonProvidedDNS",
								],
								"description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_name_servers": {
								"default":     [],
								"description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_node_type": {
								"default":     "",
								"description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_ntp_servers": {
								"default":     [],
								"description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_tags": {
								"default":     {},
								"description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
							},
							"ebs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EBS endpoint",
							},
							"ebs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EBS endpoint",
							},
							"ebs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EBS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"ec2_autoscaling_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EC2 Autoscaling endpoint",
							},
							"ec2_autoscaling_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EC2 Autoscaling endpoint",
							},
							"ec2_autoscaling_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EC2 Autoscaling endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ec2_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EC2 endpoint",
							},
							"ec2_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EC2 endpoint",
							},
							"ec2_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EC2 endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ec2messages_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EC2MESSAGES endpoint",
							},
							"ec2messages_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EC2MESSAGES endpoint",
							},
							"ec2messages_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EC2MESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ecr_api_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECR API endpoint",
							},
							"ecr_api_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECR API endpoint",
							},
							"ecr_api_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECR api endpoint. If omitted, private subnets will be used.",
							},
							"ecr_dkr_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECR DKR endpoint",
							},
							"ecr_dkr_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECR DKR endpoint",
							},
							"ecr_dkr_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECR dkr endpoint. If omitted, private subnets will be used.",
							},
							"ecs_agent_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECS Agent endpoint",
							},
							"ecs_agent_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECS Agent endpoint",
							},
							"ecs_agent_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECS Agent endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ecs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECS endpoint",
							},
							"ecs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECS endpoint",
							},
							"ecs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ecs_telemetry_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECS Telemetry endpoint",
							},
							"ecs_telemetry_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECS Telemetry endpoint",
							},
							"ecs_telemetry_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECS Telemetry endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"efs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EFS endpoint",
							},
							"efs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EFS endpoint",
							},
							"efs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EFS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"elastic_inference_runtime_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Inference Runtime endpoint",
							},
							"elastic_inference_runtime_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Elastic Inference Runtime endpoint",
							},
							"elastic_inference_runtime_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Elastic Inference Runtime endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"elasticache_acl_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets network ACL",
							},
							"elasticache_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
							},
							"elasticache_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets inbound network ACL rules",
							},
							"elasticache_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets outbound network ACL rules",
							},
							"elasticache_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache route tables",
							},
							"elasticache_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"elasticache_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"elasticache_subnet_suffix": {
								"default":     "elasticache",
								"description": "Suffix to append to elasticache subnets name",
							},
							"elasticache_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets",
							},
							"elasticache_subnets": {
								"default":     [],
								"description": "A list of elasticache subnets",
							},
							"elasticbeanstalk_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Beanstalk endpoint",
							},
							"elasticbeanstalk_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Elastic Beanstalk endpoint",
							},
							"elasticbeanstalk_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Elastic Beanstalk endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"elasticbeanstalk_health_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Beanstalk Health endpoint",
							},
							"elasticbeanstalk_health_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Elastic Beanstalk Health endpoint",
							},
							"elasticbeanstalk_health_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Elastic Beanstalk Health endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"elasticloadbalancing_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Load Balancing endpoint",
							},
							"elasticloadbalancing_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Elastic Load Balancing endpoint",
							},
							"elasticloadbalancing_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Elastic Load Balancing endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"emr_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EMR endpoint",
							},
							"emr_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EMR endpoint",
							},
							"emr_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EMR endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"enable_access_analyzer_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Access Analyzer endpoint to the VPC",
							},
							"enable_acm_pca_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an ACM PCA endpoint to the VPC",
							},
							"enable_apigw_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an api gateway endpoint to the VPC",
							},
							"enable_appmesh_envoy_management_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a AppMesh endpoint to the VPC",
							},
							"enable_appstream_api_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a AppStream API endpoint to the VPC",
							},
							"enable_appstream_streaming_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a AppStream Streaming endpoint to the VPC",
							},
							"enable_athena_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Athena endpoint to the VPC",
							},
							"enable_auto_scaling_plans_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Auto Scaling Plans endpoint to the VPC",
							},
							"enable_classiclink": {
								"description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic.",
							},
							"enable_classiclink_dns_support": {
								"description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic.",
							},
							"enable_cloud_directory_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Cloud Directory endpoint to the VPC",
							},
							"enable_cloudformation_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Cloudformation endpoint to the VPC",
							},
							"enable_cloudtrail_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CloudTrail endpoint to the VPC",
							},
							"enable_codeartifact_api_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Codeartifact API endpoint to the VPC",
							},
							"enable_codeartifact_repositories_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Codeartifact repositories endpoint to the VPC",
							},
							"enable_codebuild_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Codebuild endpoint to the VPC",
							},
							"enable_codecommit_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Codecommit endpoint to the VPC",
							},
							"enable_codedeploy_commands_secure_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an CodeDeploy Commands Secure endpoint to the VPC",
							},
							"enable_codedeploy_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an CodeDeploy endpoint to the VPC",
							},
							"enable_codepipeline_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CodePipeline endpoint to the VPC",
							},
							"enable_config_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an config endpoint to the VPC",
							},
							"enable_datasync_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Data Sync endpoint to the VPC",
							},
							"enable_dhcp_options": {
								"default":     false,
								"description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
							},
							"enable_dns_hostnames": {
								"default":     false,
								"description": "Should be true to enable DNS hostnames in the VPC",
							},
							"enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the VPC",
							},
							"enable_dynamodb_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a DynamoDB endpoint to the VPC",
							},
							"enable_ebs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EBS endpoint to the VPC",
							},
							"enable_ec2_autoscaling_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EC2 Autoscaling endpoint to the VPC",
							},
							"enable_ec2_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EC2 endpoint to the VPC",
							},
							"enable_ec2messages_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EC2MESSAGES endpoint to the VPC",
							},
							"enable_ecr_api_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an ecr api endpoint to the VPC",
							},
							"enable_ecr_dkr_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an ecr dkr endpoint to the VPC",
							},
							"enable_ecs_agent_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a ECS Agent endpoint to the VPC",
							},
							"enable_ecs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a ECS endpoint to the VPC",
							},
							"enable_ecs_telemetry_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a ECS Telemetry endpoint to the VPC",
							},
							"enable_efs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EFS endpoint to the VPC",
							},
							"enable_elastic_inference_runtime_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Elastic Inference Runtime endpoint to the VPC",
							},
							"enable_elasticbeanstalk_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Elastic Beanstalk endpoint to the VPC",
							},
							"enable_elasticbeanstalk_health_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Elastic Beanstalk Health endpoint to the VPC",
							},
							"enable_elasticloadbalancing_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Elastic Load Balancing endpoint to the VPC",
							},
							"enable_emr_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EMR endpoint to the VPC",
							},
							"enable_events_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CloudWatch Events endpoint to the VPC",
							},
							"enable_flow_log": {
								"default":     false,
								"description": "Whether or not to enable VPC Flow Logs",
							},
							"enable_git_codecommit_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Git Codecommit endpoint to the VPC",
							},
							"enable_glue_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Glue endpoint to the VPC",
							},
							"enable_ipv6": {
								"default":     false,
								"description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.",
							},
							"enable_kinesis_firehose_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Kinesis Firehose endpoint to the VPC",
							},
							"enable_kinesis_streams_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Kinesis Streams endpoint to the VPC",
							},
							"enable_kms_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a KMS endpoint to the VPC",
							},
							"enable_lambda_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Lambda endpoint to the VPC",
							},
							"enable_logs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CloudWatch Logs endpoint to the VPC",
							},
							"enable_monitoring_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CloudWatch Monitoring endpoint to the VPC",
							},
							"enable_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision NAT Gateways for each of your private networks",
							},
							"enable_public_redshift": {
								"default":     false,
								"description": "Controls if redshift should have public routing table",
							},
							"enable_public_s3_endpoint": {
								"default":     true,
								"description": "Whether to enable S3 VPC Endpoint for public subnets",
							},
							"enable_qldb_session_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an QLDB Session endpoint to the VPC",
							},
							"enable_rds_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an RDS endpoint to the VPC",
							},
							"enable_rekognition_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Rekognition endpoint to the VPC",
							},
							"enable_s3_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an S3 endpoint to the VPC",
							},
							"enable_sagemaker_api_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a SageMaker API endpoint to the VPC",
							},
							"enable_sagemaker_notebook_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Sagemaker Notebook endpoint to the VPC",
							},
							"enable_sagemaker_runtime_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a SageMaker Runtime endpoint to the VPC",
							},
							"enable_secretsmanager_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Secrets Manager endpoint to the VPC",
							},
							"enable_servicecatalog_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Service Catalog endpoint to the VPC",
							},
							"enable_ses_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an SES endpoint to the VPC",
							},
							"enable_sms_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an SMS endpoint to the VPC",
							},
							"enable_sns_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a SNS endpoint to the VPC",
							},
							"enable_sqs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an SQS endpoint to the VPC",
							},
							"enable_ssm_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an SSM endpoint to the VPC",
							},
							"enable_ssmmessages_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a SSMMESSAGES endpoint to the VPC",
							},
							"enable_states_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Step Function endpoint to the VPC",
							},
							"enable_storagegateway_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Storage Gateway endpoint to the VPC",
							},
							"enable_sts_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a STS endpoint to the VPC",
							},
							"enable_textract_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Textract endpoint to the VPC",
							},
							"enable_transfer_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Transfer endpoint to the VPC",
							},
							"enable_transferserver_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Transfer Server endpoint to the VPC",
							},
							"enable_vpn_gateway": {
								"default":     false,
								"description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
							},
							"enable_workspaces_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Workspaces endpoint to the VPC",
							},
							"events_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Events endpoint",
							},
							"events_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CloudWatch Events endpoint",
							},
							"events_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CloudWatch Events endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"external_nat_ip_ids": {
								"default":     [],
								"description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
							},
							"external_nat_ips": {
								"default":     [],
								"description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
							},
							"flow_log_cloudwatch_iam_role_arn": {
								"default":     "",
								"description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided.",
							},
							"flow_log_cloudwatch_log_group_kms_key_id": {
								"description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs.",
							},
							"flow_log_cloudwatch_log_group_name_prefix": {
								"default":     "/aws/vpc-flow-log/",
								"description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs.",
							},
							"flow_log_cloudwatch_log_group_retention_in_days": {
								"description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs.",
							},
							"flow_log_destination_arn": {
								"default":     "",
								"description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided.",
							},
							"flow_log_destination_type": {
								"default":     "cloud-watch-logs",
								"description": "Type of flow log destination. Can be s3 or cloud-watch-logs.",
							},
							"flow_log_log_format": {
								"description": "The fields to include in the flow log record, in the order in which they should appear.",
							},
							"flow_log_max_aggregation_interval": {
								"default":     600,
								"description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds.",
							},
							"flow_log_traffic_type": {
								"default":     "ALL",
								"description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL.",
							},
							"git_codecommit_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Git Codecommit endpoint",
							},
							"git_codecommit_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Git Codecommit endpoint",
							},
							"git_codecommit_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Git Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"glue_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Glue endpoint",
							},
							"glue_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Glue endpoint",
							},
							"glue_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Glue endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"igw_tags": {
								"default":     {},
								"description": "Additional tags for the internet gateway",
							},
							"instance_tenancy": {
								"default":     "default",
								"description": "A tenancy option for instances launched into the VPC",
							},
							"intra_acl_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets network ACL",
							},
							"intra_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
							},
							"intra_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets inbound network ACLs",
							},
							"intra_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets outbound network ACLs",
							},
							"intra_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the intra route tables",
							},
							"intra_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"intra_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"intra_subnet_suffix": {
								"default":     "intra",
								"description": "Suffix to append to intra subnets name",
							},
							"intra_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets",
							},
							"intra_subnets": {
								"default":     [],
								"description": "A list of intra subnets",
							},
							"kinesis_firehose_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Firehose endpoint",
							},
							"kinesis_firehose_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Kinesis Firehose endpoint",
							},
							"kinesis_firehose_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Kinesis Firehose endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"kinesis_streams_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Streams endpoint",
							},
							"kinesis_streams_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Kinesis Streams endpoint",
							},
							"kinesis_streams_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Kinesis Streams endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"kms_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for KMS endpoint",
							},
							"kms_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for KMS endpoint",
							},
							"kms_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for KMS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"lambda_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Lambda endpoint",
							},
							"lambda_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Lambda endpoint",
							},
							"lambda_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Lambda endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"logs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Logs endpoint",
							},
							"logs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CloudWatch Logs endpoint",
							},
							"logs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CloudWatch Logs endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"manage_default_network_acl": {
								"default":     false,
								"description": "Should be true to adopt and manage Default Network ACL",
							},
							"manage_default_security_group": {
								"default":     false,
								"description": "Should be true to adopt and manage default security group",
							},
							"manage_default_vpc": {
								"default":     false,
								"description": "Should be true to adopt and manage Default VPC",
							},
							"map_public_ip_on_launch": {
								"default":     true,
								"description": "Should be false if you do not want to auto-assign public IP on launch",
							},
							"monitoring_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Monitoring endpoint",
							},
							"monitoring_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CloudWatch Monitoring endpoint",
							},
							"monitoring_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CloudWatch Monitoring endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"name": {
								"default":     "",
								"description": "Name to be used on all the resources as identifier",
							},
							"nat_eip_tags": {
								"default":     {},
								"description": "Additional tags for the NAT EIP",
							},
							"nat_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the NAT gateways",
							},
							"one_nat_gateway_per_az": {
								"default":     false,
								"description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.",
							},
							"private_acl_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets network ACL",
							},
							"private_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
							},
							"private_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets inbound network ACLs",
							},
							"private_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets outbound network ACLs",
							},
							"private_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the private route tables",
							},
							"private_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"private_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"private_subnet_suffix": {
								"default":     "private",
								"description": "Suffix to append to private subnets name",
							},
							"private_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets",
							},
							"private_subnets": {
								"default":     [],
								"description": "A list of private subnets inside the VPC",
							},
							"propagate_intra_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_private_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_public_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"public_acl_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets network ACL",
							},
							"public_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
							},
							"public_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets inbound network ACLs",
							},
							"public_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets outbound network ACLs",
							},
							"public_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the public route tables",
							},
							"public_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"public_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"public_subnet_suffix": {
								"default":     "public",
								"description": "Suffix to append to public subnets name",
							},
							"public_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets",
							},
							"public_subnets": {
								"default":     [],
								"description": "A list of public subnets inside the VPC",
							},
							"qldb_session_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for QLDB Session endpoint",
							},
							"qldb_session_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for QLDB Session endpoint",
							},
							"qldb_session_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for QLDB Session endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"rds_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for RDS endpoint",
							},
							"rds_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for RDS endpoint",
							},
							"rds_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for RDS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"redshift_acl_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets network ACL",
							},
							"redshift_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
							},
							"redshift_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets inbound network ACL rules",
							},
							"redshift_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets outbound network ACL rules",
							},
							"redshift_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the redshift route tables",
							},
							"redshift_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"redshift_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnet group",
							},
							"redshift_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"redshift_subnet_suffix": {
								"default":     "redshift",
								"description": "Suffix to append to redshift subnets name",
							},
							"redshift_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets",
							},
							"redshift_subnets": {
								"default":     [],
								"description": "A list of redshift subnets",
							},
							"rekognition_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Rekognition endpoint",
							},
							"rekognition_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Rekognition endpoint",
							},
							"rekognition_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Rekognition endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"reuse_nat_ips": {
								"default":     false,
								"description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
							},
							"sagemaker_api_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SageMaker API endpoint",
							},
							"sagemaker_api_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SageMaker API endpoint",
							},
							"sagemaker_api_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SageMaker API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"sagemaker_notebook_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Sagemaker Notebook endpoint",
							},
							"sagemaker_notebook_endpoint_region": {
								"default":     "",
								"description": "Region to use for Sagemaker Notebook endpoint",
							},
							"sagemaker_notebook_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Sagemaker Notebook endpoint",
							},
							"sagemaker_notebook_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Sagemaker Notebook endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"sagemaker_runtime_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SageMaker Runtime endpoint",
							},
							"sagemaker_runtime_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SageMaker Runtime endpoint",
							},
							"sagemaker_runtime_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SageMaker Runtime endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"secondary_cidr_blocks": {
								"default":     [],
								"description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
							},
							"secretsmanager_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Secrets Manager endpoint",
							},
							"secretsmanager_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Secrets Manager endpoint",
							},
							"secretsmanager_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Secrets Manager endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"servicecatalog_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Service Catalog endpoint",
							},
							"servicecatalog_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Service Catalog endpoint",
							},
							"servicecatalog_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Service Catalog endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ses_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SES endpoint",
							},
							"ses_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SES endpoint",
							},
							"ses_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"single_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
							},
							"sms_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SMS endpoint",
							},
							"sms_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SMS endpoint",
							},
							"sms_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SMS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"sns_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SNS endpoint",
							},
							"sns_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SNS endpoint",
							},
							"sns_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SNS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"sqs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SQS endpoint",
							},
							"sqs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SQS endpoint",
							},
							"sqs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SQS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ssm_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SSM endpoint",
							},
							"ssm_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SSM endpoint",
							},
							"ssm_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SSM endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ssmmessages_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SSMMESSAGES endpoint",
							},
							"ssmmessages_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SSMMESSAGES endpoint",
							},
							"ssmmessages_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SSMMESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"states_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Step Function endpoint",
							},
							"states_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Step Function endpoint",
							},
							"states_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Step Function endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"storagegateway_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Storage Gateway endpoint",
							},
							"storagegateway_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Storage Gateway endpoint",
							},
							"storagegateway_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Storage Gateway endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"sts_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for STS endpoint",
							},
							"sts_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for STS endpoint",
							},
							"sts_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for STS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"tags": {
								"default":     {},
								"description": "A map of tags to add to all resources",
							},
							"textract_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Textract endpoint",
							},
							"textract_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Textract endpoint",
							},
							"textract_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Textract endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"transfer_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Transfer endpoint",
							},
							"transfer_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Transfer endpoint",
							},
							"transfer_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Transfer endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"transferserver_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Transfer Server endpoint",
							},
							"transferserver_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Transfer Server endpoint",
							},
							"transferserver_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Transfer Server endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"vpc_endpoint_tags": {
								"default":     {},
								"description": "Additional tags for the VPC Endpoints",
							},
							"vpc_flow_log_tags": {
								"default":     {},
								"description": "Additional tags for the VPC Flow Logs",
							},
							"vpc_tags": {
								"default":     {},
								"description": "Additional tags for the VPC",
							},
							"vpn_gateway_az": {
								"description": "The Availability Zone for the VPN Gateway",
							},
							"vpn_gateway_id": {
								"default":     "",
								"description": "ID of VPN Gateway to attach to the VPC",
							},
							"vpn_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the VPN gateway",
							},
							"workspaces_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Workspaces endpoint",
							},
							"workspaces_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Workspaces endpoint",
							},
							"workspaces_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Workspaces endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
						},
					},
					"source":             "terraform-aws-modules/vpc/aws",
					"version_constraint": "2.64.0",
				},
			},
			"outputs": {
				"public_dns_name": {
					"description": "Public DNS names of the load balancer for this project",
					"expression": {
						"references": [
							"module.elb_http.this_elb_dns_name",
							"module.elb_http",
						],
					},
				},
			},
			"resources": [
				{
					"address": "aws_ebs_volume.unencrypted",
					"expressions": {
						"availability_zone": {
							"constant_value": "us-west-1b",
						},
						"encrypted": {
							"constant_value": true,
						},
						"size": {
							"constant_value": 8,
						},
					},
					"mode":                "managed",
					"name":                "unencrypted",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_ebs_volume",
				},
				{
					"address": "random_string.lb_id",
					"expressions": {
						"length": {
							"constant_value": 3,
						},
						"special": {
							"constant_value": false,
						},
					},
					"mode":                "managed",
					"name":                "lb_id",
					"provider_config_key": "random",
					"schema_version":      1,
					"type":                "random_string",
				},
				{
					"address": "data.aws_availability_zones.available",
					"expressions": {
						"state": {
							"constant_value": "available",
						},
					},
					"mode":                "data",
					"name":                "available",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_availability_zones",
				},
			],
			"variables": {
				"instance_count": {
					"description": "Number of EC2 instances to create",
				},
				"instance_type": {
					"description": "EC2 instance type",
				},
			},
		},
	},
	"format_version": "1.2",
	"output_changes": {
		"public_dns_name": {
			"actions": [
				"no-op",
			],
			"after":            "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
			"after_sensitive":  false,
			"after_unknown":    false,
			"before":           "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
			"before_sensitive": false,
		},
	},
	"planned_values": {
		"outputs": {
			"public_dns_name": {
				"sensitive": false,
				"value":     "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
			},
		},
		"root_module": {
			"child_modules": [
				{
					"address": "module.app_security_group",
					"child_modules": [
						{
							"address": "module.app_security_group.module.sg",
							"resources": [
								{
									"address":        "module.app_security_group.module.sg.aws_security_group.this_name_prefix[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "this_name_prefix",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 1,
									"sensitive_values": {
										"egress": [
											{
												"cidr_blocks": [
													false,
												],
												"ipv6_cidr_blocks": [
													false,
												],
												"prefix_list_ids": [],
												"security_groups": [],
											},
										],
										"ingress": [
											{
												"cidr_blocks": [
													false,
													false,
												],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
											{
												"cidr_blocks": [
													false,
													false,
												],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
											{
												"cidr_blocks": [
													false,
													false,
												],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
											{
												"cidr_blocks": [
													false,
													false,
												],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
											{
												"cidr_blocks":      [],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
										],
										"tags": {},
									},
									"type": "aws_security_group",
									"values": {
										"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-06326fc6a0a3eb4b8",
										"description": "Security group for web-servers with HTTP ports open within VPC",
										"egress": [
											{
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description": "All protocols",
												"from_port":   0,
												"ipv6_cidr_blocks": [
													"::/0",
												],
												"prefix_list_ids": [],
												"protocol":        "-1",
												"security_groups": [],
												"self":            false,
												"to_port":         0,
											},
										],
										"id": "sg-06326fc6a0a3eb4b8",
										"ingress": [
											{
												"cidr_blocks": [
													"10.0.1.0/24",
													"10.0.2.0/24",
												],
												"description":      "HTTP",
												"from_port":        8080,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "tcp",
												"security_groups":  [],
												"self":             false,
												"to_port":          8080,
											},
											{
												"cidr_blocks": [
													"10.0.1.0/24",
													"10.0.2.0/24",
												],
												"description":      "HTTP",
												"from_port":        80,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "tcp",
												"security_groups":  [],
												"self":             false,
												"to_port":          80,
											},
											{
												"cidr_blocks": [
													"10.0.1.0/24",
													"10.0.2.0/24",
												],
												"description":      "HTTPS",
												"from_port":        443,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "tcp",
												"security_groups":  [],
												"self":             false,
												"to_port":          443,
											},
											{
												"cidr_blocks": [
													"10.0.1.0/24",
													"10.0.2.0/24",
												],
												"description":      "JMX",
												"from_port":        1099,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "tcp",
												"security_groups":  [],
												"self":             false,
												"to_port":          1099,
											},
											{
												"cidr_blocks":      [],
												"description":      "Ingress Rule",
												"from_port":        0,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "-1",
												"security_groups":  [],
												"self":             true,
												"to_port":          0,
											},
										],
										"name":                   "web-sg-project-alpha-dev-20251002133440267500000001",
										"name_prefix":            "web-sg-project-alpha-dev-",
										"owner_id":               "737366052617",
										"revoke_rules_on_delete": false,
										"tags": {
											"Name":        "web-sg-project-alpha-dev",
											"environment": "development",
											"project":     "project-alpha",
										},
										"timeouts": null,
										"vpc_id":   "vpc-0803d92b938b67530",
									},
								},
								{
									"address":        "module.app_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "egress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
										"ipv6_cidr_blocks": [
											false,
										],
										"prefix_list_ids": [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description": "All protocols",
										"from_port":   0,
										"id":          "sgrule-1165095938",
										"ipv6_cidr_blocks": [
											"::/0",
										],
										"prefix_list_ids":   [],
										"protocol":          "-1",
										"security_group_id": "sg-06326fc6a0a3eb4b8",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  0,
										"type":                     "egress",
									},
								},
								{
									"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "ingress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
											false,
										],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"10.0.1.0/24",
											"10.0.2.0/24",
										],
										"description":       "HTTP",
										"from_port":         80,
										"id":                "sgrule-1527321307",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "tcp",
										"security_group_id": "sg-06326fc6a0a3eb4b8",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  80,
										"type":                     "ingress",
									},
								},
								{
									"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
									"index":          1,
									"mode":           "managed",
									"name":           "ingress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
											false,
										],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"10.0.1.0/24",
											"10.0.2.0/24",
										],
										"description":       "HTTP",
										"from_port":         8080,
										"id":                "sgrule-879057280",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "tcp",
										"security_group_id": "sg-06326fc6a0a3eb4b8",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  8080,
										"type":                     "ingress",
									},
								},
								{
									"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
									"index":          2,
									"mode":           "managed",
									"name":           "ingress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
											false,
										],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"10.0.1.0/24",
											"10.0.2.0/24",
										],
										"description":       "HTTPS",
										"from_port":         443,
										"id":                "sgrule-798564216",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "tcp",
										"security_group_id": "sg-06326fc6a0a3eb4b8",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  443,
										"type":                     "ingress",
									},
								},
								{
									"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
									"index":          3,
									"mode":           "managed",
									"name":           "ingress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
											false,
										],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"10.0.1.0/24",
											"10.0.2.0/24",
										],
										"description":       "JMX",
										"from_port":         1099,
										"id":                "sgrule-2319081979",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "tcp",
										"security_group_id": "sg-06326fc6a0a3eb4b8",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  1099,
										"type":                     "ingress",
									},
								},
								{
									"address":        "module.app_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "ingress_with_self",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks":      [],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks":       [],
										"description":       "Ingress Rule",
										"from_port":         0,
										"id":                "sgrule-742313647",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "-1",
										"security_group_id": "sg-06326fc6a0a3eb4b8",
										"self":              true,
										"source_security_group_id": "sg-06326fc6a0a3eb4b8",
										"to_port":                  0,
										"type":                     "ingress",
									},
								},
							],
						},
					],
				},
				{
					"address": "module.ec2_instances",
					"resources": [
						{
							"address":        "module.ec2_instances.aws_instance.app[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "app",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"credit_specification": [
									{},
								],
								"ebs_block_device": [],
								"enclave_options": [
									{},
								],
								"ephemeral_block_device": [],
								"ipv6_addresses":         [],
								"metadata_options": [
									{},
								],
								"network_interface": [],
								"root_block_device": [
									{},
								],
								"secondary_private_ips": [],
								"security_groups":       [],
								"tags":                  {},
								"volume_tags":           {},
								"vpc_security_group_ids": [
									false,
								],
							},
							"type": "aws_instance",
							"values": {
								"ami": "ami-0fb832921029d9dfc",
								"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-03b9dd825ffb52b7c",
								"associate_public_ip_address": false,
								"availability_zone":           "us-west-1b",
								"cpu_core_count":              1,
								"cpu_threads_per_core":        1,
								"credit_specification": [
									{
										"cpu_credits": "standard",
									},
								],
								"disable_api_termination": false,
								"ebs_block_device":        [],
								"ebs_optimized":           false,
								"enclave_options": [
									{
										"enabled": false,
									},
								],
								"ephemeral_block_device": [],
								"get_password_data":      false,
								"hibernation":            false,
								"host_id":                null,
								"iam_instance_profile":   "",
								"id": "i-03b9dd825ffb52b7c",
								"instance_initiated_shutdown_behavior": null,
								"instance_state":                       "running",
								"instance_type":                        "t2.micro",
								"ipv6_address_count":                   0,
								"ipv6_addresses":                       [],
								"key_name":                             "",
								"metadata_options": [
									{
										"http_endpoint":               "enabled",
										"http_put_response_hop_limit": 1,
										"http_tokens":                 "optional",
									},
								],
								"monitoring":                   false,
								"network_interface":            [],
								"outpost_arn":                  "",
								"password_data":                "",
								"placement_group":              "",
								"primary_network_interface_id": "eni-0acf125024e8f3a16",
								"private_dns":                  "ip-10-0-101-172.us-west-1.compute.internal",
								"private_ip":                   "10.0.101.172",
								"public_dns":                   "",
								"public_ip":                    "",
								"root_block_device": [
									{
										"delete_on_termination": true,
										"device_name":           "/dev/xvda",
										"encrypted":             false,
										"iops":                  100,
										"kms_key_id":            "",
										"throughput":            0,
										"volume_id":             "vol-0d5570e1035e77acf",
										"volume_size":           8,
										"volume_type":           "gp2",
									},
								],
								"secondary_private_ips": [],
								"security_groups":       [],
								"source_dest_check":     true,
								"subnet_id":             "subnet-0b2bdf40cec3c055c",
								"tags": {
									"environment": "development",
									"project":     "project-alpha",
								},
								"tenancy":          "default",
								"timeouts":         null,
								"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
								"user_data_base64": null,
								"volume_tags":      {},
								"vpc_security_group_ids": [
									"sg-06326fc6a0a3eb4b8",
								],
							},
						},
						{
							"address":        "module.ec2_instances.aws_instance.app[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "app",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"credit_specification": [
									{},
								],
								"ebs_block_device": [],
								"enclave_options": [
									{},
								],
								"ephemeral_block_device": [],
								"ipv6_addresses":         [],
								"metadata_options": [
									{},
								],
								"network_interface": [],
								"root_block_device": [
									{},
								],
								"secondary_private_ips": [],
								"security_groups":       [],
								"tags":                  {},
								"volume_tags":           {},
								"vpc_security_group_ids": [
									false,
								],
							},
							"type": "aws_instance",
							"values": {
								"ami": "ami-0fb832921029d9dfc",
								"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-016765c89b917b799",
								"associate_public_ip_address": false,
								"availability_zone":           "us-west-1c",
								"cpu_core_count":              1,
								"cpu_threads_per_core":        1,
								"credit_specification": [
									{
										"cpu_credits": "standard",
									},
								],
								"disable_api_termination": false,
								"ebs_block_device":        [],
								"ebs_optimized":           false,
								"enclave_options": [
									{
										"enabled": false,
									},
								],
								"ephemeral_block_device": [],
								"get_password_data":      false,
								"hibernation":            false,
								"host_id":                null,
								"iam_instance_profile":   "",
								"id": "i-016765c89b917b799",
								"instance_initiated_shutdown_behavior": null,
								"instance_state":                       "running",
								"instance_type":                        "t2.micro",
								"ipv6_address_count":                   0,
								"ipv6_addresses":                       [],
								"key_name":                             "",
								"metadata_options": [
									{
										"http_endpoint":               "enabled",
										"http_put_response_hop_limit": 1,
										"http_tokens":                 "optional",
									},
								],
								"monitoring":                   false,
								"network_interface":            [],
								"outpost_arn":                  "",
								"password_data":                "",
								"placement_group":              "",
								"primary_network_interface_id": "eni-0109abce718700404",
								"private_dns":                  "ip-10-0-102-117.us-west-1.compute.internal",
								"private_ip":                   "10.0.102.117",
								"public_dns":                   "",
								"public_ip":                    "",
								"root_block_device": [
									{
										"delete_on_termination": true,
										"device_name":           "/dev/xvda",
										"encrypted":             false,
										"iops":                  100,
										"kms_key_id":            "",
										"throughput":            0,
										"volume_id":             "vol-0e35b38712a49cde8",
										"volume_size":           8,
										"volume_type":           "gp2",
									},
								],
								"secondary_private_ips": [],
								"security_groups":       [],
								"source_dest_check":     true,
								"subnet_id":             "subnet-0ea934f57d112a269",
								"tags": {
									"environment": "development",
									"project":     "project-alpha",
								},
								"tenancy":          "default",
								"timeouts":         null,
								"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
								"user_data_base64": null,
								"volume_tags":      {},
								"vpc_security_group_ids": [
									"sg-06326fc6a0a3eb4b8",
								],
							},
						},
					],
				},
				{
					"address": "module.elb_http",
					"child_modules": [
						{
							"address": "module.elb_http.module.elb",
							"resources": [
								{
									"address":        "module.elb_http.module.elb.aws_elb.this[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "this",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 0,
									"sensitive_values": {
										"access_logs": [],
										"availability_zones": [
											false,
											false,
										],
										"health_check": [
											{},
										],
										"instances": [
											false,
											false,
										],
										"listener": [
											{},
										],
										"security_groups": [
											false,
										],
										"subnets": [
											false,
											false,
										],
										"tags": {},
									},
									"type": "aws_elb",
									"values": {
										"access_logs": [],
										"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
										"availability_zones": [
											"us-west-1b",
											"us-west-1c",
										],
										"connection_draining":         false,
										"connection_draining_timeout": 300,
										"cross_zone_load_balancing":   true,
										"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
										"health_check": [
											{
												"healthy_threshold":   3,
												"interval":            10,
												"target":              "HTTP:80/index.html",
												"timeout":             5,
												"unhealthy_threshold": 10,
											},
										],
										"id":           "lb-erU-project-alpha-dev",
										"idle_timeout": 60,
										"instances": [
											"i-016765c89b917b799",
											"i-03b9dd825ffb52b7c",
										],
										"internal": false,
										"listener": [
											{
												"instance_port":      80,
												"instance_protocol":  "http",
												"lb_port":            80,
												"lb_protocol":        "http",
												"ssl_certificate_id": "",
											},
										],
										"name":        "lb-erU-project-alpha-dev",
										"name_prefix": null,
										"security_groups": [
											"sg-040d291a0f6288c7d",
										],
										"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
										"source_security_group_id": "sg-040d291a0f6288c7d",
										"subnets": [
											"subnet-0668e14c98636a8ec",
											"subnet-0b017cf7e24e4b3ff",
										],
										"tags": {
											"Name":        "lb-erU-project-alpha-dev",
											"environment": "development",
											"project":     "project-alpha",
										},
										"zone_id": "Z368ELLRRE2KJ0",
									},
								},
							],
						},
						{
							"address": "module.elb_http.module.elb_attachment",
							"resources": [
								{
									"address":          "module.elb_http.module.elb_attachment.aws_elb_attachment.this[0]",
									"index":            0,
									"mode":             "managed",
									"name":             "this",
									"provider_name":    "registry.terraform.io/hashicorp/aws",
									"schema_version":   0,
									"sensitive_values": {},
									"type":             "aws_elb_attachment",
									"values": {
										"elb":      "lb-erU-project-alpha-dev",
										"id":       "lb-erU-project-alpha-dev-20251002134205104200000003",
										"instance": "i-03b9dd825ffb52b7c",
									},
								},
								{
									"address":          "module.elb_http.module.elb_attachment.aws_elb_attachment.this[1]",
									"index":            1,
									"mode":             "managed",
									"name":             "this",
									"provider_name":    "registry.terraform.io/hashicorp/aws",
									"schema_version":   0,
									"sensitive_values": {},
									"type":             "aws_elb_attachment",
									"values": {
										"elb":      "lb-erU-project-alpha-dev",
										"id":       "lb-erU-project-alpha-dev-20251002134205085000000002",
										"instance": "i-016765c89b917b799",
									},
								},
							],
						},
					],
				},
				{
					"address": "module.lb_security_group",
					"child_modules": [
						{
							"address": "module.lb_security_group.module.sg",
							"resources": [
								{
									"address":        "module.lb_security_group.module.sg.aws_security_group.this_name_prefix[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "this_name_prefix",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 1,
									"sensitive_values": {
										"egress": [
											{
												"cidr_blocks": [
													false,
												],
												"ipv6_cidr_blocks": [
													false,
												],
												"prefix_list_ids": [],
												"security_groups": [],
											},
										],
										"ingress": [
											{
												"cidr_blocks": [
													false,
												],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
											{
												"cidr_blocks": [
													false,
												],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
											{
												"cidr_blocks": [
													false,
												],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
											{
												"cidr_blocks": [
													false,
												],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
											{
												"cidr_blocks": [
													false,
												],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
											{
												"cidr_blocks":      [],
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"security_groups":  [],
											},
										],
										"tags": {},
									},
									"type": "aws_security_group",
									"values": {
										"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-040d291a0f6288c7d",
										"description": "Security group for load balancer with HTTP ports open within VPC",
										"egress": [
											{
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description": "All protocols",
												"from_port":   0,
												"ipv6_cidr_blocks": [
													"::/0",
												],
												"prefix_list_ids": [],
												"protocol":        "-1",
												"security_groups": [],
												"self":            false,
												"to_port":         0,
											},
										],
										"id": "sg-040d291a0f6288c7d",
										"ingress": [
											{
												"cidr_blocks": [
													"10.0.0.0/16",
												],
												"description":      "HTTP",
												"from_port":        8080,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "tcp",
												"security_groups":  [],
												"self":             false,
												"to_port":          8080,
											},
											{
												"cidr_blocks": [
													"10.0.0.0/16",
												],
												"description":      "HTTP",
												"from_port":        80,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "tcp",
												"security_groups":  [],
												"self":             false,
												"to_port":          80,
											},
											{
												"cidr_blocks": [
													"10.0.0.0/16",
												],
												"description":      "HTTPS",
												"from_port":        443,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "tcp",
												"security_groups":  [],
												"self":             false,
												"to_port":          443,
											},
											{
												"cidr_blocks": [
													"10.0.0.0/16",
												],
												"description":      "JMX",
												"from_port":        1099,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "tcp",
												"security_groups":  [],
												"self":             false,
												"to_port":          1099,
											},
											{
												"cidr_blocks": [
													"10.0.0.0/16",
												],
												"description":      "SSH restricted to internal network",
												"from_port":        22,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "tcp",
												"security_groups":  [],
												"self":             false,
												"to_port":          22,
											},
											{
												"cidr_blocks":      [],
												"description":      "Ingress Rule",
												"from_port":        0,
												"ipv6_cidr_blocks": [],
												"prefix_list_ids":  [],
												"protocol":         "-1",
												"security_groups":  [],
												"self":             true,
												"to_port":          0,
											},
										],
										"name":                   "lb-sg-project-alpha-dev-20251002133440267800000002",
										"name_prefix":            "lb-sg-project-alpha-dev-",
										"owner_id":               "737366052617",
										"revoke_rules_on_delete": false,
										"tags": {
											"Name":        "lb-sg-project-alpha-dev",
											"environment": "development",
											"project":     "project-alpha",
										},
										"timeouts": null,
										"vpc_id":   "vpc-0803d92b938b67530",
									},
								},
								{
									"address":        "module.lb_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "egress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
										"ipv6_cidr_blocks": [
											false,
										],
										"prefix_list_ids": [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description": "All protocols",
										"from_port":   0,
										"id":          "sgrule-34138926",
										"ipv6_cidr_blocks": [
											"::/0",
										],
										"prefix_list_ids":   [],
										"protocol":          "-1",
										"security_group_id": "sg-040d291a0f6288c7d",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  0,
										"type":                     "egress",
									},
								},
								{
									"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "ingress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"10.0.0.0/16",
										],
										"description":       "HTTP",
										"from_port":         80,
										"id":                "sgrule-4083687304",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "tcp",
										"security_group_id": "sg-040d291a0f6288c7d",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  80,
										"type":                     "ingress",
									},
								},
								{
									"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
									"index":          1,
									"mode":           "managed",
									"name":           "ingress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"10.0.0.0/16",
										],
										"description":       "HTTP",
										"from_port":         8080,
										"id":                "sgrule-26869172",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "tcp",
										"security_group_id": "sg-040d291a0f6288c7d",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  8080,
										"type":                     "ingress",
									},
								},
								{
									"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
									"index":          2,
									"mode":           "managed",
									"name":           "ingress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"10.0.0.0/16",
										],
										"description":       "HTTPS",
										"from_port":         443,
										"id":                "sgrule-1771646953",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "tcp",
										"security_group_id": "sg-040d291a0f6288c7d",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  443,
										"type":                     "ingress",
									},
								},
								{
									"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
									"index":          3,
									"mode":           "managed",
									"name":           "ingress_rules",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"10.0.0.0/16",
										],
										"description":       "JMX",
										"from_port":         1099,
										"id":                "sgrule-1125713004",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "tcp",
										"security_group_id": "sg-040d291a0f6288c7d",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  1099,
										"type":                     "ingress",
									},
								},
								{
									"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "ingress_with_cidr_blocks",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"10.0.0.0/16",
										],
										"description":       "SSH restricted to internal network",
										"from_port":         22,
										"id":                "sgrule-2130763446",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "tcp",
										"security_group_id": "sg-040d291a0f6288c7d",
										"self":              false,
										"source_security_group_id": null,
										"to_port":                  22,
										"type":                     "ingress",
									},
								},
								{
									"address":        "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "ingress_with_self",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks":      [],
										"ipv6_cidr_blocks": [],
										"prefix_list_ids":  [],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks":       [],
										"description":       "Ingress Rule",
										"from_port":         0,
										"id":                "sgrule-3912070980",
										"ipv6_cidr_blocks":  [],
										"prefix_list_ids":   [],
										"protocol":          "-1",
										"security_group_id": "sg-040d291a0f6288c7d",
										"self":              true,
										"source_security_group_id": "sg-040d291a0f6288c7d",
										"to_port":                  0,
										"type":                     "ingress",
									},
								},
							],
						},
					],
				},
				{
					"address": "module.vpc",
					"resources": [
						{
							"address":        "module.vpc.aws_eip.nat[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "nat",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_eip",
							"values": {
								"allocation_id":             null,
								"associate_with_private_ip": null,
								"association_id":            "eipassoc-0da9417e63565d7c2",
								"carrier_ip":                "",
								"customer_owned_ip":         "",
								"customer_owned_ipv4_pool":  "",
								"domain":                    "vpc",
								"id":                        "eipalloc-0eb190a7f42b983b2",
								"instance":                  "",
								"network_border_group":      "us-west-1",
								"network_interface":         "eni-057bc87bc25465691",
								"private_dns":               "ip-10-0-1-91.us-west-1.compute.internal",
								"private_ip":                "10.0.1.91",
								"public_dns":                "ec2-54-177-111-86.us-west-1.compute.amazonaws.com",
								"public_ip":                 "54.177.111.86",
								"public_ipv4_pool":          "amazon",
								"tags": {
									"Name":        "-us-west-1b",
									"environment": "development",
									"project":     "project-alpha",
								},
								"timeouts": null,
								"vpc":      true,
							},
						},
						{
							"address":        "module.vpc.aws_eip.nat[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "nat",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_eip",
							"values": {
								"allocation_id":             null,
								"associate_with_private_ip": null,
								"association_id":            "eipassoc-0698d8f20c5722dff",
								"carrier_ip":                "",
								"customer_owned_ip":         "",
								"customer_owned_ipv4_pool":  "",
								"domain":                    "vpc",
								"id":                        "eipalloc-0f772743cb6efe71f",
								"instance":                  "",
								"network_border_group":      "us-west-1",
								"network_interface":         "eni-06a8c1c0f5f0a0d5c",
								"private_dns":               "ip-10-0-2-46.us-west-1.compute.internal",
								"private_ip":                "10.0.2.46",
								"public_dns":                "ec2-50-18-226-163.us-west-1.compute.amazonaws.com",
								"public_ip":                 "50.18.226.163",
								"public_ipv4_pool":          "amazon",
								"tags": {
									"Name":        "-us-west-1c",
									"environment": "development",
									"project":     "project-alpha",
								},
								"timeouts": null,
								"vpc":      true,
							},
						},
						{
							"address":        "module.vpc.aws_internet_gateway.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_internet_gateway",
							"values": {
								"arn":      "arn:aws:ec2:us-west-1:737366052617:internet-gateway/igw-0a87232c769e282d2",
								"id":       "igw-0a87232c769e282d2",
								"owner_id": "737366052617",
								"tags": {
									"Name":        "",
									"environment": "development",
									"project":     "project-alpha",
								},
								"vpc_id": "vpc-0803d92b938b67530",
							},
						},
						{
							"address":        "module.vpc.aws_nat_gateway.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_nat_gateway",
							"values": {
								"allocation_id": "eipalloc-0eb190a7f42b983b2",
								"id":            "nat-0baadee1e3e44558c",
								"network_interface_id": "eni-057bc87bc25465691",
								"private_ip":           "10.0.1.91",
								"public_ip":            "54.177.111.86",
								"subnet_id":            "subnet-0b017cf7e24e4b3ff",
								"tags": {
									"Name":        "-us-west-1b",
									"environment": "development",
									"project":     "project-alpha",
								},
							},
						},
						{
							"address":        "module.vpc.aws_nat_gateway.this[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_nat_gateway",
							"values": {
								"allocation_id": "eipalloc-0f772743cb6efe71f",
								"id":            "nat-043b0a2533e8c970d",
								"network_interface_id": "eni-06a8c1c0f5f0a0d5c",
								"private_ip":           "10.0.2.46",
								"public_ip":            "50.18.226.163",
								"subnet_id":            "subnet-0668e14c98636a8ec",
								"tags": {
									"Name":        "-us-west-1c",
									"environment": "development",
									"project":     "project-alpha",
								},
							},
						},
						{
							"address":        "module.vpc.aws_route.private_nat_gateway[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "private_nat_gateway",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"timeouts": {},
							},
							"type": "aws_route",
							"values": {
								"destination_cidr_block":      "0.0.0.0/0",
								"destination_ipv6_cidr_block": "",
								"destination_prefix_list_id":  "",
								"egress_only_gateway_id":      "",
								"gateway_id":                  "",
								"id":                          "r-rtb-08929b85b4ee0c9d21080289494",
								"instance_id":                 "",
								"instance_owner_id":           "",
								"local_gateway_id":            "",
								"nat_gateway_id":              "nat-0baadee1e3e44558c",
								"network_interface_id":        "",
								"origin":                      "CreateRoute",
								"route_table_id":              "rtb-08929b85b4ee0c9d2",
								"state":                       "active",
								"timeouts": {
									"create": "5m",
									"delete": null,
								},
								"transit_gateway_id":        "",
								"vpc_endpoint_id":           null,
								"vpc_peering_connection_id": "",
							},
						},
						{
							"address":        "module.vpc.aws_route.private_nat_gateway[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "private_nat_gateway",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"timeouts": {},
							},
							"type": "aws_route",
							"values": {
								"destination_cidr_block":      "0.0.0.0/0",
								"destination_ipv6_cidr_block": "",
								"destination_prefix_list_id":  "",
								"egress_only_gateway_id":      "",
								"gateway_id":                  "",
								"id":                          "r-rtb-053e1dd125b4a5e801080289494",
								"instance_id":                 "",
								"instance_owner_id":           "",
								"local_gateway_id":            "",
								"nat_gateway_id":              "nat-043b0a2533e8c970d",
								"network_interface_id":        "",
								"origin":                      "CreateRoute",
								"route_table_id":              "rtb-053e1dd125b4a5e80",
								"state":                       "active",
								"timeouts": {
									"create": "5m",
									"delete": null,
								},
								"transit_gateway_id":        "",
								"vpc_endpoint_id":           null,
								"vpc_peering_connection_id": "",
							},
						},
						{
							"address":        "module.vpc.aws_route.public_internet_gateway[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public_internet_gateway",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"timeouts": {},
							},
							"type": "aws_route",
							"values": {
								"destination_cidr_block":      "0.0.0.0/0",
								"destination_ipv6_cidr_block": "",
								"destination_prefix_list_id":  "",
								"egress_only_gateway_id":      "",
								"gateway_id":                  "igw-0a87232c769e282d2",
								"id":                          "r-rtb-034f35c1eccf9a1941080289494",
								"instance_id":                 "",
								"instance_owner_id":           "",
								"local_gateway_id":            "",
								"nat_gateway_id":              "",
								"network_interface_id":        "",
								"origin":                      "CreateRoute",
								"route_table_id":              "rtb-034f35c1eccf9a194",
								"state":                       "active",
								"timeouts": {
									"create": "5m",
									"delete": null,
								},
								"transit_gateway_id":        "",
								"vpc_endpoint_id":           null,
								"vpc_peering_connection_id": "",
							},
						},
						{
							"address":        "module.vpc.aws_route_table.private[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route": [
									{},
								],
								"tags": {},
							},
							"type": "aws_route_table",
							"values": {
								"id":               "rtb-08929b85b4ee0c9d2",
								"owner_id":         "737366052617",
								"propagating_vgws": [],
								"route": [
									{
										"cidr_block":                "0.0.0.0/0",
										"egress_only_gateway_id":    "",
										"gateway_id":                "",
										"instance_id":               "",
										"ipv6_cidr_block":           "",
										"local_gateway_id":          "",
										"nat_gateway_id":            "nat-0baadee1e3e44558c",
										"network_interface_id":      "",
										"transit_gateway_id":        "",
										"vpc_endpoint_id":           "",
										"vpc_peering_connection_id": "",
									},
								],
								"tags": {
									"Name":        "-private-us-west-1b",
									"environment": "development",
									"project":     "project-alpha",
								},
								"vpc_id": "vpc-0803d92b938b67530",
							},
						},
						{
							"address":        "module.vpc.aws_route_table.private[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route": [
									{},
								],
								"tags": {},
							},
							"type": "aws_route_table",
							"values": {
								"id":               "rtb-053e1dd125b4a5e80",
								"owner_id":         "737366052617",
								"propagating_vgws": [],
								"route": [
									{
										"cidr_block":                "0.0.0.0/0",
										"egress_only_gateway_id":    "",
										"gateway_id":                "",
										"instance_id":               "",
										"ipv6_cidr_block":           "",
										"local_gateway_id":          "",
										"nat_gateway_id":            "nat-043b0a2533e8c970d",
										"network_interface_id":      "",
										"transit_gateway_id":        "",
										"vpc_endpoint_id":           "",
										"vpc_peering_connection_id": "",
									},
								],
								"tags": {
									"Name":        "-private-us-west-1c",
									"environment": "development",
									"project":     "project-alpha",
								},
								"vpc_id": "vpc-0803d92b938b67530",
							},
						},
						{
							"address":        "module.vpc.aws_route_table.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route": [
									{},
								],
								"tags": {},
							},
							"type": "aws_route_table",
							"values": {
								"id":               "rtb-034f35c1eccf9a194",
								"owner_id":         "737366052617",
								"propagating_vgws": [],
								"route": [
									{
										"cidr_block":                "0.0.0.0/0",
										"egress_only_gateway_id":    "",
										"gateway_id":                "igw-0a87232c769e282d2",
										"instance_id":               "",
										"ipv6_cidr_block":           "",
										"local_gateway_id":          "",
										"nat_gateway_id":            "",
										"network_interface_id":      "",
										"transit_gateway_id":        "",
										"vpc_endpoint_id":           "",
										"vpc_peering_connection_id": "",
									},
								],
								"tags": {
									"Name":        "-public",
									"environment": "development",
									"project":     "project-alpha",
								},
								"vpc_id": "vpc-0803d92b938b67530",
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.private[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "private",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id":     null,
								"id":             "rtbassoc-0142f84975d0a2c22",
								"route_table_id": "rtb-08929b85b4ee0c9d2",
								"subnet_id":      "subnet-0b2bdf40cec3c055c",
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.private[1]",
							"index":            1,
							"mode":             "managed",
							"name":             "private",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id":     null,
								"id":             "rtbassoc-012ea9d78aaef9617",
								"route_table_id": "rtb-053e1dd125b4a5e80",
								"subnet_id":      "subnet-0ea934f57d112a269",
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id":     null,
								"id":             "rtbassoc-0f3fadf9fd2eca79a",
								"route_table_id": "rtb-034f35c1eccf9a194",
								"subnet_id":      "subnet-0b017cf7e24e4b3ff",
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[1]",
							"index":            1,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id":     null,
								"id":             "rtbassoc-05f3c585af67fa670",
								"route_table_id": "rtb-034f35c1eccf9a194",
								"subnet_id":      "subnet-0668e14c98636a8ec",
							},
						},
						{
							"address":        "module.vpc.aws_subnet.private[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_subnet",
							"values": {
								"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b2bdf40cec3c055c",
								"assign_ipv6_address_on_creation": false,
								"availability_zone":               "us-west-1b",
								"availability_zone_id":            "usw1-az3",
								"cidr_block":                      "10.0.101.0/24",
								"id":                              "subnet-0b2bdf40cec3c055c",
								"ipv6_cidr_block":                 "",
								"ipv6_cidr_block_association_id":  "",
								"map_public_ip_on_launch":         false,
								"outpost_arn":                     "",
								"owner_id":                        "737366052617",
								"tags": {
									"Name":        "-private-us-west-1b",
									"environment": "development",
									"project":     "project-alpha",
								},
								"timeouts": null,
								"vpc_id":   "vpc-0803d92b938b67530",
							},
						},
						{
							"address":        "module.vpc.aws_subnet.private[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_subnet",
							"values": {
								"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0ea934f57d112a269",
								"assign_ipv6_address_on_creation": false,
								"availability_zone":               "us-west-1c",
								"availability_zone_id":            "usw1-az1",
								"cidr_block":                      "10.0.102.0/24",
								"id":                              "subnet-0ea934f57d112a269",
								"ipv6_cidr_block":                 "",
								"ipv6_cidr_block_association_id":  "",
								"map_public_ip_on_launch":         false,
								"outpost_arn":                     "",
								"owner_id":                        "737366052617",
								"tags": {
									"Name":        "-private-us-west-1c",
									"environment": "development",
									"project":     "project-alpha",
								},
								"timeouts": null,
								"vpc_id":   "vpc-0803d92b938b67530",
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_subnet",
							"values": {
								"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b017cf7e24e4b3ff",
								"assign_ipv6_address_on_creation": false,
								"availability_zone":               "us-west-1b",
								"availability_zone_id":            "usw1-az3",
								"cidr_block":                      "10.0.1.0/24",
								"id":                              "subnet-0b017cf7e24e4b3ff",
								"ipv6_cidr_block":                 "",
								"ipv6_cidr_block_association_id":  "",
								"map_public_ip_on_launch":         true,
								"outpost_arn":                     "",
								"owner_id":                        "737366052617",
								"tags": {
									"Name":        "-public-us-west-1b",
									"environment": "development",
									"project":     "project-alpha",
								},
								"timeouts": null,
								"vpc_id":   "vpc-0803d92b938b67530",
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_subnet",
							"values": {
								"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0668e14c98636a8ec",
								"assign_ipv6_address_on_creation": false,
								"availability_zone":               "us-west-1c",
								"availability_zone_id":            "usw1-az1",
								"cidr_block":                      "10.0.2.0/24",
								"id":                              "subnet-0668e14c98636a8ec",
								"ipv6_cidr_block":                 "",
								"ipv6_cidr_block_association_id":  "",
								"map_public_ip_on_launch":         true,
								"outpost_arn":                     "",
								"owner_id":                        "737366052617",
								"tags": {
									"Name":        "-public-us-west-1c",
									"environment": "development",
									"project":     "project-alpha",
								},
								"timeouts": null,
								"vpc_id":   "vpc-0803d92b938b67530",
							},
						},
						{
							"address":        "module.vpc.aws_vpc.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_vpc",
							"values": {
								"arn": "arn:aws:ec2:us-west-1:737366052617:vpc/vpc-0803d92b938b67530",
								"assign_generated_ipv6_cidr_block": false,
								"cidr_block":                       "10.0.0.0/16",
								"default_network_acl_id":           "acl-0e534a87fbb224833",
								"default_route_table_id":           "rtb-05b1175e8ba5f76d3",
								"default_security_group_id":        "sg-0d0145d916e0d471a",
								"dhcp_options_id":                  "dopt-934476f4",
								"enable_classiclink":               false,
								"enable_classiclink_dns_support":   false,
								"enable_dns_hostnames":             false,
								"enable_dns_support":               true,
								"id":                               "vpc-0803d92b938b67530",
								"instance_tenancy":                 "default",
								"ipv6_association_id":              "",
								"ipv6_cidr_block":                  "",
								"main_route_table_id":              "rtb-05b1175e8ba5f76d3",
								"owner_id":                         "737366052617",
								"tags": {
									"Name":        "",
									"environment": "development",
									"project":     "project-alpha",
								},
							},
						},
					],
				},
			],
			"resources": [
				{
					"address":        "aws_ebs_volume.unencrypted",
					"mode":           "managed",
					"name":           "unencrypted",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 0,
					"sensitive_values": {
						"tags": {},
					},
					"type": "aws_ebs_volume",
					"values": {
						"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
						"availability_zone":    "us-west-1b",
						"encrypted":            true,
						"id":                   "vol-0662fddf4e25ce498",
						"iops":                 100,
						"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
						"multi_attach_enabled": false,
						"outpost_arn":          "",
						"size":                 8,
						"snapshot_id":          "",
						"tags":                 {},
						"type":                 "gp2",
					},
				},
				{
					"address":          "random_string.lb_id",
					"mode":             "managed",
					"name":             "lb_id",
					"provider_name":    "registry.terraform.io/hashicorp/random",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "random_string",
					"values": {
						"id":               "erU",
						"keepers":          null,
						"length":           3,
						"lower":            true,
						"min_lower":        0,
						"min_numeric":      0,
						"min_special":      0,
						"min_upper":        0,
						"number":           true,
						"override_special": null,
						"result":           "erU",
						"special":          false,
						"upper":            true,
					},
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "1.0",
		"terraform_version": "1.13.3",
		"values": {
			"outputs": {
				"public_dns_name": {
					"sensitive": false,
					"value":     "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
				},
			},
			"root_module": {
				"child_modules": [
					{
						"address": "module.app_security_group",
						"child_modules": [
							{
								"address": "module.app_security_group.module.sg",
								"resources": [
									{
										"address": "module.app_security_group.module.sg.aws_security_group.this_name_prefix[0]",
										"depends_on": [
											"module.vpc.aws_vpc.this",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "this_name_prefix",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 1,
										"sensitive_values": {
											"egress": [
												{
													"cidr_blocks": [
														false,
													],
													"ipv6_cidr_blocks": [
														false,
													],
													"prefix_list_ids": [],
													"security_groups": [],
												},
											],
											"ingress": [
												{
													"cidr_blocks": [
														false,
														false,
													],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
												{
													"cidr_blocks": [
														false,
														false,
													],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
												{
													"cidr_blocks": [
														false,
														false,
													],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
												{
													"cidr_blocks": [
														false,
														false,
													],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
												{
													"cidr_blocks":      [],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
											],
											"tags": {},
										},
										"type": "aws_security_group",
										"values": {
											"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-06326fc6a0a3eb4b8",
											"description": "Security group for web-servers with HTTP ports open within VPC",
											"egress": [
												{
													"cidr_blocks": [
														"0.0.0.0/0",
													],
													"description": "All protocols",
													"from_port":   0,
													"ipv6_cidr_blocks": [
														"::/0",
													],
													"prefix_list_ids": [],
													"protocol":        "-1",
													"security_groups": [],
													"self":            false,
													"to_port":         0,
												},
											],
											"id": "sg-06326fc6a0a3eb4b8",
											"ingress": [
												{
													"cidr_blocks": [
														"10.0.1.0/24",
														"10.0.2.0/24",
													],
													"description":      "HTTP",
													"from_port":        8080,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "tcp",
													"security_groups":  [],
													"self":             false,
													"to_port":          8080,
												},
												{
													"cidr_blocks": [
														"10.0.1.0/24",
														"10.0.2.0/24",
													],
													"description":      "HTTP",
													"from_port":        80,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "tcp",
													"security_groups":  [],
													"self":             false,
													"to_port":          80,
												},
												{
													"cidr_blocks": [
														"10.0.1.0/24",
														"10.0.2.0/24",
													],
													"description":      "HTTPS",
													"from_port":        443,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "tcp",
													"security_groups":  [],
													"self":             false,
													"to_port":          443,
												},
												{
													"cidr_blocks": [
														"10.0.1.0/24",
														"10.0.2.0/24",
													],
													"description":      "JMX",
													"from_port":        1099,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "tcp",
													"security_groups":  [],
													"self":             false,
													"to_port":          1099,
												},
												{
													"cidr_blocks":      [],
													"description":      "Ingress Rule",
													"from_port":        0,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "-1",
													"security_groups":  [],
													"self":             true,
													"to_port":          0,
												},
											],
											"name":                   "web-sg-project-alpha-dev-20251002133440267500000001",
											"name_prefix":            "web-sg-project-alpha-dev-",
											"owner_id":               "737366052617",
											"revoke_rules_on_delete": false,
											"tags": {
												"Name":        "web-sg-project-alpha-dev",
												"environment": "dev",
												"project":     "project-alpha",
											},
											"timeouts": null,
											"vpc_id":   "vpc-0803d92b938b67530",
										},
									},
									{
										"address": "module.app_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
										"depends_on": [
											"module.app_security_group.module.sg.aws_security_group.this",
											"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_vpc.this",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "egress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
											],
											"ipv6_cidr_blocks": [
												false,
											],
											"prefix_list_ids": [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"0.0.0.0/0",
											],
											"description": "All protocols",
											"from_port":   0,
											"id":          "sgrule-1165095938",
											"ipv6_cidr_blocks": [
												"::/0",
											],
											"prefix_list_ids":   [],
											"protocol":          "-1",
											"security_group_id": "sg-06326fc6a0a3eb4b8",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  0,
											"type":                     "egress",
										},
									},
									{
										"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
										"depends_on": [
											"data.aws_availability_zones.available",
											"module.app_security_group.module.sg.aws_security_group.this",
											"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_subnet.public",
											"module.vpc.aws_vpc.this",
											"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "ingress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
												false,
											],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"10.0.1.0/24",
												"10.0.2.0/24",
											],
											"description":       "HTTP",
											"from_port":         80,
											"id":                "sgrule-1527321307",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "tcp",
											"security_group_id": "sg-06326fc6a0a3eb4b8",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  80,
											"type":                     "ingress",
										},
									},
									{
										"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
										"depends_on": [
											"data.aws_availability_zones.available",
											"module.app_security_group.module.sg.aws_security_group.this",
											"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_subnet.public",
											"module.vpc.aws_vpc.this",
											"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
										],
										"index":          1,
										"mode":           "managed",
										"name":           "ingress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
												false,
											],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"10.0.1.0/24",
												"10.0.2.0/24",
											],
											"description":       "HTTP",
											"from_port":         8080,
											"id":                "sgrule-879057280",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "tcp",
											"security_group_id": "sg-06326fc6a0a3eb4b8",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  8080,
											"type":                     "ingress",
										},
									},
									{
										"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
										"depends_on": [
											"data.aws_availability_zones.available",
											"module.app_security_group.module.sg.aws_security_group.this",
											"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_subnet.public",
											"module.vpc.aws_vpc.this",
											"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
										],
										"index":          2,
										"mode":           "managed",
										"name":           "ingress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
												false,
											],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"10.0.1.0/24",
												"10.0.2.0/24",
											],
											"description":       "HTTPS",
											"from_port":         443,
											"id":                "sgrule-798564216",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "tcp",
											"security_group_id": "sg-06326fc6a0a3eb4b8",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  443,
											"type":                     "ingress",
										},
									},
									{
										"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
										"depends_on": [
											"data.aws_availability_zones.available",
											"module.app_security_group.module.sg.aws_security_group.this",
											"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_subnet.public",
											"module.vpc.aws_vpc.this",
											"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
										],
										"index":          3,
										"mode":           "managed",
										"name":           "ingress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
												false,
											],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"10.0.1.0/24",
												"10.0.2.0/24",
											],
											"description":       "JMX",
											"from_port":         1099,
											"id":                "sgrule-2319081979",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "tcp",
											"security_group_id": "sg-06326fc6a0a3eb4b8",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  1099,
											"type":                     "ingress",
										},
									},
									{
										"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
										"depends_on": [
											"module.app_security_group.module.sg.aws_security_group.this",
											"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_vpc.this",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "ingress_with_self",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks":      [],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks":       [],
											"description":       "Ingress Rule",
											"from_port":         0,
											"id":                "sgrule-742313647",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "-1",
											"security_group_id": "sg-06326fc6a0a3eb4b8",
											"self":              true,
											"source_security_group_id": "sg-06326fc6a0a3eb4b8",
											"to_port":                  0,
											"type":                     "ingress",
										},
									},
								],
							},
						],
					},
					{
						"address": "module.ec2_instances",
						"resources": [
							{
								"address":        "module.ec2_instances.data.aws_ami.amazon_linux",
								"mode":           "data",
								"name":           "amazon_linux",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"block_device_mappings": [
										{
											"ebs": {},
										},
									],
									"filter": [
										{
											"values": [
												false,
											],
										},
									],
									"owners": [
										false,
									],
									"product_codes": [],
									"state_reason":  {},
									"tags":          {},
								},
								"type": "aws_ami",
								"values": {
									"architecture": "x86_64",
									"arn":          "arn:aws:ec2:us-west-1::image/ami-0fb832921029d9dfc",
									"block_device_mappings": [
										{
											"device_name": "/dev/xvda",
											"ebs": {
												"delete_on_termination": "true",
												"encrypted":             "false",
												"iops":                  "0",
												"snapshot_id":           "snap-0b9efffabec68d3f3",
												"volume_size":           "8",
												"volume_type":           "gp2",
											},
											"no_device":    "",
											"virtual_name": "",
										},
									],
									"creation_date":    "2025-09-10T19:04:01.000Z",
									"description":      "Amazon Linux 2 AMI 2.0.20250915.0 x86_64 HVM gp2",
									"executable_users": null,
									"filter": [
										{
											"name": "name",
											"values": [
												"amzn2-ami-hvm-*-x86_64-gp2",
											],
										},
									],
									"hypervisor":        "xen",
									"id":                "ami-0fb832921029d9dfc",
									"image_id":          "ami-0fb832921029d9dfc",
									"image_location":    "amazon/amzn2-ami-hvm-2.0.20250915.0-x86_64-gp2",
									"image_owner_alias": "amazon",
									"image_type":        "machine",
									"kernel_id":         null,
									"most_recent":       true,
									"name":              "amzn2-ami-hvm-2.0.20250915.0-x86_64-gp2",
									"name_regex":        null,
									"owner_id":          "137112412989",
									"owners": [
										"amazon",
									],
									"platform":          null,
									"product_codes":     [],
									"public":            true,
									"ramdisk_id":        null,
									"root_device_name":  "/dev/xvda",
									"root_device_type":  "ebs",
									"root_snapshot_id":  "snap-0b9efffabec68d3f3",
									"sriov_net_support": "simple",
									"state":             "available",
									"state_reason": {
										"code":    "UNSET",
										"message": "UNSET",
									},
									"tags":                {},
									"virtualization_type": "hvm",
								},
							},
							{
								"address": "module.ec2_instances.aws_instance.app[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.app_security_group.module.sg.aws_security_group.this",
									"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
									"module.ec2_instances.data.aws_ami.amazon_linux",
									"module.vpc.aws_subnet.private",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "app",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"credit_specification": [
										{},
									],
									"ebs_block_device": [],
									"enclave_options": [
										{},
									],
									"ephemeral_block_device": [],
									"ipv6_addresses":         [],
									"metadata_options": [
										{},
									],
									"network_interface": [],
									"root_block_device": [
										{},
									],
									"secondary_private_ips": [],
									"security_groups":       [],
									"tags":                  {},
									"volume_tags":           {},
									"vpc_security_group_ids": [
										false,
									],
								},
								"type": "aws_instance",
								"values": {
									"ami": "ami-0fb832921029d9dfc",
									"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-03b9dd825ffb52b7c",
									"associate_public_ip_address": false,
									"availability_zone":           "us-west-1b",
									"cpu_core_count":              1,
									"cpu_threads_per_core":        1,
									"credit_specification": [
										{
											"cpu_credits": "standard",
										},
									],
									"disable_api_termination": false,
									"ebs_block_device":        [],
									"ebs_optimized":           false,
									"enclave_options": [
										{
											"enabled": false,
										},
									],
									"ephemeral_block_device": [],
									"get_password_data":      false,
									"hibernation":            false,
									"host_id":                null,
									"iam_instance_profile":   "",
									"id": "i-03b9dd825ffb52b7c",
									"instance_initiated_shutdown_behavior": null,
									"instance_state":                       "running",
									"instance_type":                        "t2.micro",
									"ipv6_address_count":                   0,
									"ipv6_addresses":                       [],
									"key_name":                             "",
									"metadata_options": [
										{
											"http_endpoint":               "enabled",
											"http_put_response_hop_limit": 1,
											"http_tokens":                 "optional",
										},
									],
									"monitoring":                   false,
									"network_interface":            [],
									"outpost_arn":                  "",
									"password_data":                "",
									"placement_group":              "",
									"primary_network_interface_id": "eni-0acf125024e8f3a16",
									"private_dns":                  "ip-10-0-101-172.us-west-1.compute.internal",
									"private_ip":                   "10.0.101.172",
									"public_dns":                   "",
									"public_ip":                    "",
									"root_block_device": [
										{
											"delete_on_termination": true,
											"device_name":           "/dev/xvda",
											"encrypted":             false,
											"iops":                  100,
											"kms_key_id":            "",
											"throughput":            0,
											"volume_id":             "vol-0d5570e1035e77acf",
											"volume_size":           8,
											"volume_type":           "gp2",
										},
									],
									"secondary_private_ips": [],
									"security_groups":       [],
									"source_dest_check":     true,
									"subnet_id":             "subnet-0b2bdf40cec3c055c",
									"tags": {
										"environment": "dev",
										"project":     "project-alpha",
									},
									"tenancy":          "default",
									"timeouts":         null,
									"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
									"user_data_base64": null,
									"volume_tags":      {},
									"vpc_security_group_ids": [
										"sg-06326fc6a0a3eb4b8",
									],
								},
							},
							{
								"address": "module.ec2_instances.aws_instance.app[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.app_security_group.module.sg.aws_security_group.this",
									"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
									"module.ec2_instances.data.aws_ami.amazon_linux",
									"module.vpc.aws_subnet.private",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          1,
								"mode":           "managed",
								"name":           "app",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"credit_specification": [
										{},
									],
									"ebs_block_device": [],
									"enclave_options": [
										{},
									],
									"ephemeral_block_device": [],
									"ipv6_addresses":         [],
									"metadata_options": [
										{},
									],
									"network_interface": [],
									"root_block_device": [
										{},
									],
									"secondary_private_ips": [],
									"security_groups":       [],
									"tags":                  {},
									"volume_tags":           {},
									"vpc_security_group_ids": [
										false,
									],
								},
								"type": "aws_instance",
								"values": {
									"ami": "ami-0fb832921029d9dfc",
									"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-016765c89b917b799",
									"associate_public_ip_address": false,
									"availability_zone":           "us-west-1c",
									"cpu_core_count":              1,
									"cpu_threads_per_core":        1,
									"credit_specification": [
										{
											"cpu_credits": "standard",
										},
									],
									"disable_api_termination": false,
									"ebs_block_device":        [],
									"ebs_optimized":           false,
									"enclave_options": [
										{
											"enabled": false,
										},
									],
									"ephemeral_block_device": [],
									"get_password_data":      false,
									"hibernation":            false,
									"host_id":                null,
									"iam_instance_profile":   "",
									"id": "i-016765c89b917b799",
									"instance_initiated_shutdown_behavior": null,
									"instance_state":                       "running",
									"instance_type":                        "t2.micro",
									"ipv6_address_count":                   0,
									"ipv6_addresses":                       [],
									"key_name":                             "",
									"metadata_options": [
										{
											"http_endpoint":               "enabled",
											"http_put_response_hop_limit": 1,
											"http_tokens":                 "optional",
										},
									],
									"monitoring":                   false,
									"network_interface":            [],
									"outpost_arn":                  "",
									"password_data":                "",
									"placement_group":              "",
									"primary_network_interface_id": "eni-0109abce718700404",
									"private_dns":                  "ip-10-0-102-117.us-west-1.compute.internal",
									"private_ip":                   "10.0.102.117",
									"public_dns":                   "",
									"public_ip":                    "",
									"root_block_device": [
										{
											"delete_on_termination": true,
											"device_name":           "/dev/xvda",
											"encrypted":             false,
											"iops":                  100,
											"kms_key_id":            "",
											"throughput":            0,
											"volume_id":             "vol-0e35b38712a49cde8",
											"volume_size":           8,
											"volume_type":           "gp2",
										},
									],
									"secondary_private_ips": [],
									"security_groups":       [],
									"source_dest_check":     true,
									"subnet_id":             "subnet-0ea934f57d112a269",
									"tags": {
										"environment": "dev",
										"project":     "project-alpha",
									},
									"tenancy":          "default",
									"timeouts":         null,
									"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
									"user_data_base64": null,
									"volume_tags":      {},
									"vpc_security_group_ids": [
										"sg-06326fc6a0a3eb4b8",
									],
								},
							},
						],
					},
					{
						"address": "module.elb_http",
						"child_modules": [
							{
								"address": "module.elb_http.module.elb",
								"resources": [
									{
										"address": "module.elb_http.module.elb.aws_elb.this[0]",
										"depends_on": [
											"data.aws_availability_zones.available",
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_subnet.public",
											"module.vpc.aws_vpc.this",
											"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
											"random_string.lb_id",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "this",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 0,
										"sensitive_values": {
											"access_logs": [],
											"availability_zones": [
												false,
												false,
											],
											"health_check": [
												{},
											],
											"instances": [
												false,
												false,
											],
											"listener": [
												{},
											],
											"security_groups": [
												false,
											],
											"subnets": [
												false,
												false,
											],
											"tags": {},
										},
										"type": "aws_elb",
										"values": {
											"access_logs": [],
											"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
											"availability_zones": [
												"us-west-1b",
												"us-west-1c",
											],
											"connection_draining":         false,
											"connection_draining_timeout": 300,
											"cross_zone_load_balancing":   true,
											"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
											"health_check": [
												{
													"healthy_threshold":   3,
													"interval":            10,
													"target":              "HTTP:80/index.html",
													"timeout":             5,
													"unhealthy_threshold": 10,
												},
											],
											"id":           "lb-erU-project-alpha-dev",
											"idle_timeout": 60,
											"instances": [
												"i-016765c89b917b799",
												"i-03b9dd825ffb52b7c",
											],
											"internal": false,
											"listener": [
												{
													"instance_port":      80,
													"instance_protocol":  "http",
													"lb_port":            80,
													"lb_protocol":        "http",
													"ssl_certificate_id": "",
												},
											],
											"name":        "lb-erU-project-alpha-dev",
											"name_prefix": null,
											"security_groups": [
												"sg-040d291a0f6288c7d",
											],
											"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
											"source_security_group_id": "sg-040d291a0f6288c7d",
											"subnets": [
												"subnet-0668e14c98636a8ec",
												"subnet-0b017cf7e24e4b3ff",
											],
											"tags": {
												"Name":        "lb-erU-project-alpha-dev",
												"environment": "development",
												"project":     "project-alpha",
											},
											"zone_id": "Z368ELLRRE2KJ0",
										},
									},
								],
							},
							{
								"address": "module.elb_http.module.elb_attachment",
								"resources": [
									{
										"address": "module.elb_http.module.elb_attachment.aws_elb_attachment.this[0]",
										"depends_on": [
											"data.aws_availability_zones.available",
											"module.app_security_group.module.sg.aws_security_group.this",
											"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.ec2_instances.aws_instance.app",
											"module.ec2_instances.data.aws_ami.amazon_linux",
											"module.elb_http.module.elb.aws_elb.this",
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_subnet.private",
											"module.vpc.aws_subnet.public",
											"module.vpc.aws_vpc.this",
											"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
											"random_string.lb_id",
										],
										"index":            0,
										"mode":             "managed",
										"name":             "this",
										"provider_name":    "registry.terraform.io/hashicorp/aws",
										"schema_version":   0,
										"sensitive_values": {},
										"type":             "aws_elb_attachment",
										"values": {
											"elb":      "lb-erU-project-alpha-dev",
											"id":       "lb-erU-project-alpha-dev-20251002134205104200000003",
											"instance": "i-03b9dd825ffb52b7c",
										},
									},
									{
										"address": "module.elb_http.module.elb_attachment.aws_elb_attachment.this[1]",
										"depends_on": [
											"data.aws_availability_zones.available",
											"module.app_security_group.module.sg.aws_security_group.this",
											"module.app_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.ec2_instances.aws_instance.app",
											"module.ec2_instances.data.aws_ami.amazon_linux",
											"module.elb_http.module.elb.aws_elb.this",
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_subnet.private",
											"module.vpc.aws_subnet.public",
											"module.vpc.aws_vpc.this",
											"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
											"random_string.lb_id",
										],
										"index":            1,
										"mode":             "managed",
										"name":             "this",
										"provider_name":    "registry.terraform.io/hashicorp/aws",
										"schema_version":   0,
										"sensitive_values": {},
										"type":             "aws_elb_attachment",
										"values": {
											"elb":      "lb-erU-project-alpha-dev",
											"id":       "lb-erU-project-alpha-dev-20251002134205085000000002",
											"instance": "i-016765c89b917b799",
										},
									},
								],
							},
						],
					},
					{
						"address": "module.lb_security_group",
						"child_modules": [
							{
								"address": "module.lb_security_group.module.sg",
								"resources": [
									{
										"address": "module.lb_security_group.module.sg.aws_security_group.this_name_prefix[0]",
										"depends_on": [
											"module.vpc.aws_vpc.this",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "this_name_prefix",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 1,
										"sensitive_values": {
											"egress": [
												{
													"cidr_blocks": [
														false,
													],
													"ipv6_cidr_blocks": [
														false,
													],
													"prefix_list_ids": [],
													"security_groups": [],
												},
											],
											"ingress": [
												{
													"cidr_blocks": [
														false,
													],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
												{
													"cidr_blocks": [
														false,
													],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
												{
													"cidr_blocks": [
														false,
													],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
												{
													"cidr_blocks": [
														false,
													],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
												{
													"cidr_blocks": [
														false,
													],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
												{
													"cidr_blocks":      [],
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"security_groups":  [],
												},
											],
											"tags": {},
										},
										"type": "aws_security_group",
										"values": {
											"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-040d291a0f6288c7d",
											"description": "Security group for load balancer with HTTP ports open within VPC",
											"egress": [
												{
													"cidr_blocks": [
														"0.0.0.0/0",
													],
													"description": "All protocols",
													"from_port":   0,
													"ipv6_cidr_blocks": [
														"::/0",
													],
													"prefix_list_ids": [],
													"protocol":        "-1",
													"security_groups": [],
													"self":            false,
													"to_port":         0,
												},
											],
											"id": "sg-040d291a0f6288c7d",
											"ingress": [
												{
													"cidr_blocks": [
														"10.0.0.0/16",
													],
													"description":      "HTTP",
													"from_port":        8080,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "tcp",
													"security_groups":  [],
													"self":             false,
													"to_port":          8080,
												},
												{
													"cidr_blocks": [
														"10.0.0.0/16",
													],
													"description":      "HTTP",
													"from_port":        80,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "tcp",
													"security_groups":  [],
													"self":             false,
													"to_port":          80,
												},
												{
													"cidr_blocks": [
														"10.0.0.0/16",
													],
													"description":      "HTTPS",
													"from_port":        443,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "tcp",
													"security_groups":  [],
													"self":             false,
													"to_port":          443,
												},
												{
													"cidr_blocks": [
														"10.0.0.0/16",
													],
													"description":      "JMX",
													"from_port":        1099,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "tcp",
													"security_groups":  [],
													"self":             false,
													"to_port":          1099,
												},
												{
													"cidr_blocks": [
														"10.0.0.0/16",
													],
													"description":      "SSH restricted to internal network",
													"from_port":        22,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "tcp",
													"security_groups":  [],
													"self":             false,
													"to_port":          22,
												},
												{
													"cidr_blocks":      [],
													"description":      "Ingress Rule",
													"from_port":        0,
													"ipv6_cidr_blocks": [],
													"prefix_list_ids":  [],
													"protocol":         "-1",
													"security_groups":  [],
													"self":             true,
													"to_port":          0,
												},
											],
											"name":                   "lb-sg-project-alpha-dev-20251002133440267800000002",
											"name_prefix":            "lb-sg-project-alpha-dev-",
											"owner_id":               "737366052617",
											"revoke_rules_on_delete": false,
											"tags": {
												"Name":        "lb-sg-project-alpha-dev",
												"environment": "development",
												"project":     "project-alpha",
											},
											"timeouts": null,
											"vpc_id":   "vpc-0803d92b938b67530",
										},
									},
									{
										"address": "module.lb_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
										"depends_on": [
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_vpc.this",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "egress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
											],
											"ipv6_cidr_blocks": [
												false,
											],
											"prefix_list_ids": [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"0.0.0.0/0",
											],
											"description": "All protocols",
											"from_port":   0,
											"id":          "sgrule-34138926",
											"ipv6_cidr_blocks": [
												"::/0",
											],
											"prefix_list_ids":   [],
											"protocol":          "-1",
											"security_group_id": "sg-040d291a0f6288c7d",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  0,
											"type":                     "egress",
										},
									},
									{
										"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
										"depends_on": [
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_vpc.this",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "ingress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
											],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"10.0.0.0/16",
											],
											"description":       "HTTP",
											"from_port":         80,
											"id":                "sgrule-4083687304",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "tcp",
											"security_group_id": "sg-040d291a0f6288c7d",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  80,
											"type":                     "ingress",
										},
									},
									{
										"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
										"depends_on": [
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_vpc.this",
										],
										"index":          1,
										"mode":           "managed",
										"name":           "ingress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
											],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"10.0.0.0/16",
											],
											"description":       "HTTP",
											"from_port":         8080,
											"id":                "sgrule-26869172",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "tcp",
											"security_group_id": "sg-040d291a0f6288c7d",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  8080,
											"type":                     "ingress",
										},
									},
									{
										"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
										"depends_on": [
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_vpc.this",
										],
										"index":          2,
										"mode":           "managed",
										"name":           "ingress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
											],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"10.0.0.0/16",
											],
											"description":       "HTTPS",
											"from_port":         443,
											"id":                "sgrule-1771646953",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "tcp",
											"security_group_id": "sg-040d291a0f6288c7d",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  443,
											"type":                     "ingress",
										},
									},
									{
										"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
										"depends_on": [
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_vpc.this",
										],
										"index":          3,
										"mode":           "managed",
										"name":           "ingress_rules",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
											],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"10.0.0.0/16",
											],
											"description":       "JMX",
											"from_port":         1099,
											"id":                "sgrule-1125713004",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "tcp",
											"security_group_id": "sg-040d291a0f6288c7d",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  1099,
											"type":                     "ingress",
										},
									},
									{
										"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks[0]",
										"depends_on": [
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_vpc.this",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "ingress_with_cidr_blocks",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks": [
												false,
											],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks": [
												"10.0.0.0/16",
											],
											"description":       "SSH restricted to internal network",
											"from_port":         22,
											"id":                "sgrule-2130763446",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "tcp",
											"security_group_id": "sg-040d291a0f6288c7d",
											"self":              false,
											"source_security_group_id": null,
											"to_port":                  22,
											"type":                     "ingress",
										},
									},
									{
										"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
										"depends_on": [
											"module.lb_security_group.module.sg.aws_security_group.this",
											"module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
											"module.vpc.aws_vpc.this",
										],
										"index":          0,
										"mode":           "managed",
										"name":           "ingress_with_self",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 2,
										"sensitive_values": {
											"cidr_blocks":      [],
											"ipv6_cidr_blocks": [],
											"prefix_list_ids":  [],
										},
										"type": "aws_security_group_rule",
										"values": {
											"cidr_blocks":       [],
											"description":       "Ingress Rule",
											"from_port":         0,
											"id":                "sgrule-3912070980",
											"ipv6_cidr_blocks":  [],
											"prefix_list_ids":   [],
											"protocol":          "-1",
											"security_group_id": "sg-040d291a0f6288c7d",
											"self":              true,
											"source_security_group_id": "sg-040d291a0f6288c7d",
											"to_port":                  0,
											"type":                     "ingress",
										},
									},
								],
							},
						],
					},
					{
						"address": "module.vpc",
						"resources": [
							{
								"address": "module.vpc.aws_eip.nat[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "nat",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_eip",
								"values": {
									"allocation_id":             null,
									"associate_with_private_ip": null,
									"association_id":            "eipassoc-0da9417e63565d7c2",
									"carrier_ip":                "",
									"customer_owned_ip":         "",
									"customer_owned_ipv4_pool":  "",
									"domain":                    "vpc",
									"id":                        "eipalloc-0eb190a7f42b983b2",
									"instance":                  "",
									"network_border_group":      "us-west-1",
									"network_interface":         "eni-057bc87bc25465691",
									"private_dns":               "ip-10-0-1-91.us-west-1.compute.internal",
									"private_ip":                "10.0.1.91",
									"public_dns":                "ec2-54-177-111-86.us-west-1.compute.amazonaws.com",
									"public_ip":                 "54.177.111.86",
									"public_ipv4_pool":          "amazon",
									"tags": {
										"Name":        "-us-west-1b",
										"environment": "development",
										"project":     "project-alpha",
									},
									"timeouts": null,
									"vpc":      true,
								},
							},
							{
								"address": "module.vpc.aws_eip.nat[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
								],
								"index":          1,
								"mode":           "managed",
								"name":           "nat",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_eip",
								"values": {
									"allocation_id":             null,
									"associate_with_private_ip": null,
									"association_id":            "eipassoc-0698d8f20c5722dff",
									"carrier_ip":                "",
									"customer_owned_ip":         "",
									"customer_owned_ipv4_pool":  "",
									"domain":                    "vpc",
									"id":                        "eipalloc-0f772743cb6efe71f",
									"instance":                  "",
									"network_border_group":      "us-west-1",
									"network_interface":         "eni-06a8c1c0f5f0a0d5c",
									"private_dns":               "ip-10-0-2-46.us-west-1.compute.internal",
									"private_ip":                "10.0.2.46",
									"public_dns":                "ec2-50-18-226-163.us-west-1.compute.amazonaws.com",
									"public_ip":                 "50.18.226.163",
									"public_ipv4_pool":          "amazon",
									"tags": {
										"Name":        "-us-west-1c",
										"environment": "development",
										"project":     "project-alpha",
									},
									"timeouts": null,
									"vpc":      true,
								},
							},
							{
								"address": "module.vpc.aws_internet_gateway.this[0]",
								"depends_on": [
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "this",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_internet_gateway",
								"values": {
									"arn":      "arn:aws:ec2:us-west-1:737366052617:internet-gateway/igw-0a87232c769e282d2",
									"id":       "igw-0a87232c769e282d2",
									"owner_id": "737366052617",
									"tags": {
										"Name":        "",
										"environment": "development",
										"project":     "project-alpha",
									},
									"vpc_id": "vpc-0803d92b938b67530",
								},
							},
							{
								"address": "module.vpc.aws_nat_gateway.this[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_eip.nat",
									"module.vpc.aws_internet_gateway.this",
									"module.vpc.aws_subnet.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "this",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_nat_gateway",
								"values": {
									"allocation_id": "eipalloc-0eb190a7f42b983b2",
									"id":            "nat-0baadee1e3e44558c",
									"network_interface_id": "eni-057bc87bc25465691",
									"private_ip":           "10.0.1.91",
									"public_ip":            "54.177.111.86",
									"subnet_id":            "subnet-0b017cf7e24e4b3ff",
									"tags": {
										"Name":        "-us-west-1b",
										"environment": "development",
										"project":     "project-alpha",
									},
								},
							},
							{
								"address": "module.vpc.aws_nat_gateway.this[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_eip.nat",
									"module.vpc.aws_internet_gateway.this",
									"module.vpc.aws_subnet.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          1,
								"mode":           "managed",
								"name":           "this",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_nat_gateway",
								"values": {
									"allocation_id": "eipalloc-0f772743cb6efe71f",
									"id":            "nat-043b0a2533e8c970d",
									"network_interface_id": "eni-06a8c1c0f5f0a0d5c",
									"private_ip":           "10.0.2.46",
									"public_ip":            "50.18.226.163",
									"subnet_id":            "subnet-0668e14c98636a8ec",
									"tags": {
										"Name":        "-us-west-1c",
										"environment": "development",
										"project":     "project-alpha",
									},
								},
							},
							{
								"address": "module.vpc.aws_route.private_nat_gateway[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_eip.nat",
									"module.vpc.aws_internet_gateway.this",
									"module.vpc.aws_nat_gateway.this",
									"module.vpc.aws_route_table.private",
									"module.vpc.aws_subnet.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "private_nat_gateway",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"timeouts": {},
								},
								"type": "aws_route",
								"values": {
									"destination_cidr_block":      "0.0.0.0/0",
									"destination_ipv6_cidr_block": "",
									"destination_prefix_list_id":  "",
									"egress_only_gateway_id":      "",
									"gateway_id":                  "",
									"id":                          "r-rtb-08929b85b4ee0c9d21080289494",
									"instance_id":                 "",
									"instance_owner_id":           "",
									"local_gateway_id":            "",
									"nat_gateway_id":              "nat-0baadee1e3e44558c",
									"network_interface_id":        "",
									"origin":                      "CreateRoute",
									"route_table_id":              "rtb-08929b85b4ee0c9d2",
									"state":                       "active",
									"timeouts": {
										"create": "5m",
										"delete": null,
									},
									"transit_gateway_id":        "",
									"vpc_endpoint_id":           null,
									"vpc_peering_connection_id": "",
								},
							},
							{
								"address": "module.vpc.aws_route.private_nat_gateway[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_eip.nat",
									"module.vpc.aws_internet_gateway.this",
									"module.vpc.aws_nat_gateway.this",
									"module.vpc.aws_route_table.private",
									"module.vpc.aws_subnet.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          1,
								"mode":           "managed",
								"name":           "private_nat_gateway",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"timeouts": {},
								},
								"type": "aws_route",
								"values": {
									"destination_cidr_block":      "0.0.0.0/0",
									"destination_ipv6_cidr_block": "",
									"destination_prefix_list_id":  "",
									"egress_only_gateway_id":      "",
									"gateway_id":                  "",
									"id":                          "r-rtb-053e1dd125b4a5e801080289494",
									"instance_id":                 "",
									"instance_owner_id":           "",
									"local_gateway_id":            "",
									"nat_gateway_id":              "nat-043b0a2533e8c970d",
									"network_interface_id":        "",
									"origin":                      "CreateRoute",
									"route_table_id":              "rtb-053e1dd125b4a5e80",
									"state":                       "active",
									"timeouts": {
										"create": "5m",
										"delete": null,
									},
									"transit_gateway_id":        "",
									"vpc_endpoint_id":           null,
									"vpc_peering_connection_id": "",
								},
							},
							{
								"address": "module.vpc.aws_route.public_internet_gateway[0]",
								"depends_on": [
									"module.vpc.aws_internet_gateway.this",
									"module.vpc.aws_route_table.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "public_internet_gateway",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"timeouts": {},
								},
								"type": "aws_route",
								"values": {
									"destination_cidr_block":      "0.0.0.0/0",
									"destination_ipv6_cidr_block": "",
									"destination_prefix_list_id":  "",
									"egress_only_gateway_id":      "",
									"gateway_id":                  "igw-0a87232c769e282d2",
									"id":                          "r-rtb-034f35c1eccf9a1941080289494",
									"instance_id":                 "",
									"instance_owner_id":           "",
									"local_gateway_id":            "",
									"nat_gateway_id":              "",
									"network_interface_id":        "",
									"origin":                      "CreateRoute",
									"route_table_id":              "rtb-034f35c1eccf9a194",
									"state":                       "active",
									"timeouts": {
										"create": "5m",
										"delete": null,
									},
									"transit_gateway_id":        "",
									"vpc_endpoint_id":           null,
									"vpc_peering_connection_id": "",
								},
							},
							{
								"address": "module.vpc.aws_route_table.private[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "private",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"propagating_vgws": [],
									"route": [
										{},
									],
									"tags": {},
								},
								"type": "aws_route_table",
								"values": {
									"id":               "rtb-08929b85b4ee0c9d2",
									"owner_id":         "737366052617",
									"propagating_vgws": [],
									"route": [
										{
											"cidr_block":                "0.0.0.0/0",
											"egress_only_gateway_id":    "",
											"gateway_id":                "",
											"instance_id":               "",
											"ipv6_cidr_block":           "",
											"local_gateway_id":          "",
											"nat_gateway_id":            "nat-0baadee1e3e44558c",
											"network_interface_id":      "",
											"transit_gateway_id":        "",
											"vpc_endpoint_id":           "",
											"vpc_peering_connection_id": "",
										},
									],
									"tags": {
										"Name":        "-private-us-west-1b",
										"environment": "development",
										"project":     "project-alpha",
									},
									"vpc_id": "vpc-0803d92b938b67530",
								},
							},
							{
								"address": "module.vpc.aws_route_table.private[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          1,
								"mode":           "managed",
								"name":           "private",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"propagating_vgws": [],
									"route": [
										{},
									],
									"tags": {},
								},
								"type": "aws_route_table",
								"values": {
									"id":               "rtb-053e1dd125b4a5e80",
									"owner_id":         "737366052617",
									"propagating_vgws": [],
									"route": [
										{
											"cidr_block":                "0.0.0.0/0",
											"egress_only_gateway_id":    "",
											"gateway_id":                "",
											"instance_id":               "",
											"ipv6_cidr_block":           "",
											"local_gateway_id":          "",
											"nat_gateway_id":            "nat-043b0a2533e8c970d",
											"network_interface_id":      "",
											"transit_gateway_id":        "",
											"vpc_endpoint_id":           "",
											"vpc_peering_connection_id": "",
										},
									],
									"tags": {
										"Name":        "-private-us-west-1c",
										"environment": "development",
										"project":     "project-alpha",
									},
									"vpc_id": "vpc-0803d92b938b67530",
								},
							},
							{
								"address": "module.vpc.aws_route_table.public[0]",
								"depends_on": [
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "public",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"propagating_vgws": [],
									"route": [
										{},
									],
									"tags": {},
								},
								"type": "aws_route_table",
								"values": {
									"id":               "rtb-034f35c1eccf9a194",
									"owner_id":         "737366052617",
									"propagating_vgws": [],
									"route": [
										{
											"cidr_block":                "0.0.0.0/0",
											"egress_only_gateway_id":    "",
											"gateway_id":                "igw-0a87232c769e282d2",
											"instance_id":               "",
											"ipv6_cidr_block":           "",
											"local_gateway_id":          "",
											"nat_gateway_id":            "",
											"network_interface_id":      "",
											"transit_gateway_id":        "",
											"vpc_endpoint_id":           "",
											"vpc_peering_connection_id": "",
										},
									],
									"tags": {
										"Name":        "-public",
										"environment": "development",
										"project":     "project-alpha",
									},
									"vpc_id": "vpc-0803d92b938b67530",
								},
							},
							{
								"address": "module.vpc.aws_route_table_association.private[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_route_table.private",
									"module.vpc.aws_subnet.private",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":            0,
								"mode":             "managed",
								"name":             "private",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_route_table_association",
								"values": {
									"gateway_id":     null,
									"id":             "rtbassoc-0142f84975d0a2c22",
									"route_table_id": "rtb-08929b85b4ee0c9d2",
									"subnet_id":      "subnet-0b2bdf40cec3c055c",
								},
							},
							{
								"address": "module.vpc.aws_route_table_association.private[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_route_table.private",
									"module.vpc.aws_subnet.private",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":            1,
								"mode":             "managed",
								"name":             "private",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_route_table_association",
								"values": {
									"gateway_id":     null,
									"id":             "rtbassoc-012ea9d78aaef9617",
									"route_table_id": "rtb-053e1dd125b4a5e80",
									"subnet_id":      "subnet-0ea934f57d112a269",
								},
							},
							{
								"address": "module.vpc.aws_route_table_association.public[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_route_table.public",
									"module.vpc.aws_subnet.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":            0,
								"mode":             "managed",
								"name":             "public",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_route_table_association",
								"values": {
									"gateway_id":     null,
									"id":             "rtbassoc-0f3fadf9fd2eca79a",
									"route_table_id": "rtb-034f35c1eccf9a194",
									"subnet_id":      "subnet-0b017cf7e24e4b3ff",
								},
							},
							{
								"address": "module.vpc.aws_route_table_association.public[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_route_table.public",
									"module.vpc.aws_subnet.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":            1,
								"mode":             "managed",
								"name":             "public",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_route_table_association",
								"values": {
									"gateway_id":     null,
									"id":             "rtbassoc-05f3c585af67fa670",
									"route_table_id": "rtb-034f35c1eccf9a194",
									"subnet_id":      "subnet-0668e14c98636a8ec",
								},
							},
							{
								"address": "module.vpc.aws_subnet.private[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "private",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_subnet",
								"values": {
									"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b2bdf40cec3c055c",
									"assign_ipv6_address_on_creation": false,
									"availability_zone":               "us-west-1b",
									"availability_zone_id":            "usw1-az3",
									"cidr_block":                      "10.0.101.0/24",
									"id":                              "subnet-0b2bdf40cec3c055c",
									"ipv6_cidr_block":                 "",
									"ipv6_cidr_block_association_id":  "",
									"map_public_ip_on_launch":         false,
									"outpost_arn":                     "",
									"owner_id":                        "737366052617",
									"tags": {
										"Name":        "-private-us-west-1b",
										"environment": "development",
										"project":     "project-alpha",
									},
									"timeouts": null,
									"vpc_id":   "vpc-0803d92b938b67530",
								},
							},
							{
								"address": "module.vpc.aws_subnet.private[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          1,
								"mode":           "managed",
								"name":           "private",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_subnet",
								"values": {
									"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0ea934f57d112a269",
									"assign_ipv6_address_on_creation": false,
									"availability_zone":               "us-west-1c",
									"availability_zone_id":            "usw1-az1",
									"cidr_block":                      "10.0.102.0/24",
									"id":                              "subnet-0ea934f57d112a269",
									"ipv6_cidr_block":                 "",
									"ipv6_cidr_block_association_id":  "",
									"map_public_ip_on_launch":         false,
									"outpost_arn":                     "",
									"owner_id":                        "737366052617",
									"tags": {
										"Name":        "-private-us-west-1c",
										"environment": "development",
										"project":     "project-alpha",
									},
									"timeouts": null,
									"vpc_id":   "vpc-0803d92b938b67530",
								},
							},
							{
								"address": "module.vpc.aws_subnet.public[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "public",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_subnet",
								"values": {
									"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b017cf7e24e4b3ff",
									"assign_ipv6_address_on_creation": false,
									"availability_zone":               "us-west-1b",
									"availability_zone_id":            "usw1-az3",
									"cidr_block":                      "10.0.1.0/24",
									"id":                              "subnet-0b017cf7e24e4b3ff",
									"ipv6_cidr_block":                 "",
									"ipv6_cidr_block_association_id":  "",
									"map_public_ip_on_launch":         true,
									"outpost_arn":                     "",
									"owner_id":                        "737366052617",
									"tags": {
										"Name":        "-public-us-west-1b",
										"environment": "development",
										"project":     "project-alpha",
									},
									"timeouts": null,
									"vpc_id":   "vpc-0803d92b938b67530",
								},
							},
							{
								"address": "module.vpc.aws_subnet.public[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          1,
								"mode":           "managed",
								"name":           "public",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_subnet",
								"values": {
									"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0668e14c98636a8ec",
									"assign_ipv6_address_on_creation": false,
									"availability_zone":               "us-west-1c",
									"availability_zone_id":            "usw1-az1",
									"cidr_block":                      "10.0.2.0/24",
									"id":                              "subnet-0668e14c98636a8ec",
									"ipv6_cidr_block":                 "",
									"ipv6_cidr_block_association_id":  "",
									"map_public_ip_on_launch":         true,
									"outpost_arn":                     "",
									"owner_id":                        "737366052617",
									"tags": {
										"Name":        "-public-us-west-1c",
										"environment": "development",
										"project":     "project-alpha",
									},
									"timeouts": null,
									"vpc_id":   "vpc-0803d92b938b67530",
								},
							},
							{
								"address":        "module.vpc.aws_vpc.this[0]",
								"index":          0,
								"mode":           "managed",
								"name":           "this",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"tags": {},
								},
								"type": "aws_vpc",
								"values": {
									"arn": "arn:aws:ec2:us-west-1:737366052617:vpc/vpc-0803d92b938b67530",
									"assign_generated_ipv6_cidr_block": false,
									"cidr_block":                       "10.0.0.0/16",
									"default_network_acl_id":           "acl-0e534a87fbb224833",
									"default_route_table_id":           "rtb-05b1175e8ba5f76d3",
									"default_security_group_id":        "sg-0d0145d916e0d471a",
									"dhcp_options_id":                  "dopt-934476f4",
									"enable_classiclink":               false,
									"enable_classiclink_dns_support":   false,
									"enable_dns_hostnames":             false,
									"enable_dns_support":               true,
									"id":                               "vpc-0803d92b938b67530",
									"instance_tenancy":                 "default",
									"ipv6_association_id":              "",
									"ipv6_cidr_block":                  "",
									"main_route_table_id":              "rtb-05b1175e8ba5f76d3",
									"owner_id":                         "737366052617",
									"tags": {
										"Name":        "",
										"environment": "development",
										"project":     "project-alpha",
									},
								},
							},
						],
					},
				],
				"resources": [
					{
						"address":        "data.aws_availability_zones.available",
						"mode":           "data",
						"name":           "available",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 0,
						"sensitive_values": {
							"group_names": [
								false,
							],
							"names": [
								false,
								false,
							],
							"zone_ids": [
								false,
								false,
							],
						},
						"type": "aws_availability_zones",
						"values": {
							"all_availability_zones": null,
							"exclude_names":          null,
							"exclude_zone_ids":       null,
							"filter":                 null,
							"group_names": [
								"us-west-1-zg-1",
							],
							"id": "us-west-1",
							"names": [
								"us-west-1b",
								"us-west-1c",
							],
							"state": "available",
							"zone_ids": [
								"usw1-az3",
								"usw1-az1",
							],
						},
					},
					{
						"address":        "aws_ebs_volume.unencrypted",
						"mode":           "managed",
						"name":           "unencrypted",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 0,
						"sensitive_values": {
							"tags": {},
						},
						"type": "aws_ebs_volume",
						"values": {
							"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
							"availability_zone":    "us-west-1b",
							"encrypted":            true,
							"id":                   "vol-0662fddf4e25ce498",
							"iops":                 100,
							"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
							"multi_attach_enabled": false,
							"outpost_arn":          "",
							"size":                 8,
							"snapshot_id":          "",
							"tags":                 {},
							"type":                 "gp2",
						},
					},
					{
						"address":          "random_string.lb_id",
						"mode":             "managed",
						"name":             "lb_id",
						"provider_name":    "registry.terraform.io/hashicorp/random",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "random_string",
						"values": {
							"id":               "erU",
							"keepers":          null,
							"length":           3,
							"lower":            true,
							"min_lower":        0,
							"min_numeric":      0,
							"min_special":      0,
							"min_upper":        0,
							"number":           true,
							"override_special": null,
							"result":           "erU",
							"special":          false,
							"upper":            true,
						},
					},
				],
			},
		},
	},
	"relevant_attributes": [
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.athena[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_redshift_subnet_group.redshift",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.database_ipv6_egress",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.private_ipv6_egress",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ec2messages[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ecs[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.private_nat_gateway",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ecs_agent[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.elasticbeanstalk",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.dynamodb[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.git_codecommit[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.ec2_instances.data.aws_ami.amazon_linux",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.kms",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_customer_gateway.this",
		},
		{
			"attribute": [],
			"resource":  "module.lb_security_group.module.sg.aws_security_group.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_egress_only_internet_gateway.this",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.acm_pca[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.acm_pca",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.cloudformation",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.lambda[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.logs",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.database_internet_gateway",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.codeartifact_api[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.athena",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.appstream_api[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.storagegateway[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.servicecatalog[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.database",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.redshift",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ec2messages",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ecr_dkr[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.elasticbeanstalk_health[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ssmmessages[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_elasticache_subnet_group.elasticache",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.qldb_session[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.kinesis_streams[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.events[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.public_internet_gateway",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.dynamodb",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.access_analyzer",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ec2",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.transfer",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_flow_log.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.efs",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.emr",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.datasync[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ses[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.textract[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.private",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.states",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_network_acl.private",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.codebuild",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.redshift",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.sqs[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ecr_api[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_internet_gateway.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.ec2_instances.aws_instance.app",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.monitoring",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.config[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.database_nat_gateway",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.elasticloadbalancing",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.rekognition",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_db_subnet_group.database",
		},
		{
			"attribute": [],
			"resource":  "module.app_security_group.module.sg.aws_security_group.this_name_prefix",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.s3[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.elasticbeanstalk[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.glue[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.intra",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ecs",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.cloud_directory[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ecr_dkr",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.secretsmanager",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_default_vpc.this",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.transfer[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ecs_telemetry",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.appmesh_envoy_management[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.codecommit[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.rekognition[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.sqs",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.s3",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.public",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.apigw",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.textract",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.codeartifact_api",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.elastic_inference_runtime[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.storagegateway",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpn_gateway.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.kinesis_streams",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.sagemaker_api",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ec2[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.private",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.database",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.cloudtrail[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.states[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_network_acl.public",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_network_acl.elasticache",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.elasticache",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.sns[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.codeartifact_repositories",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.datasync",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.glue",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.public",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.cloudformation[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.sts[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_internet_gateway.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_network_acl.database",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ecr_api",
		},
		{
			"attribute": [],
			"resource":  "module.elb_http.module.elb.aws_elb.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ses",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.intra",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ssm[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.efs[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.appmesh_envoy_management",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.servicecatalog",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.sns",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.kinesis_firehose[0]",
		},
		{
			"attribute": [
				"result",
			],
			"resource": "random_string.lb_id",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_route_table.database[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.redshift_public",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_nat_gateway.this",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.secretsmanager[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.sagemaker_runtime",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.elasticache",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpn_gateway_attachment.this",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.codebuild[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.appstream_api",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.appstream_streaming",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.transferserver",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.codeartifact_repositories[0]",
		},
		{
			"attribute": [
				"ipv6_cidr_block",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_egress_only_internet_gateway.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.intra",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.cloud_directory",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.events",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ecs_agent",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_network_acl.intra",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.appstream_streaming[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.git_codecommit",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.sts",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.elasticache",
		},
		{
			"attribute": [],
			"resource":  "module.app_security_group.module.sg.aws_security_group.this",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.sms[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.auto_scaling_plans",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ebs[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ssm",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.public_internet_gateway_ipv6",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.codecommit",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.auto_scaling_plans[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.sms",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.monitoring[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.apigw[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.ec2_autoscaling[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.workspaces[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.config",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.transferserver[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.codepipeline",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_network_acl.redshift",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.private",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.logs[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.cloudtrail",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ec2_autoscaling",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.redshift",
		},
		{
			"attribute": [
				"names",
			],
			"resource": "data.aws_availability_zones.available",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.access_analyzer[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ebs",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.elasticbeanstalk_health",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.ssmmessages",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.codepipeline[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.lambda",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_eip.nat",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.workspaces",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.kinesis_firehose",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.sagemaker_runtime[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.database",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.kms[0]",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.sagemaker_api[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.public",
		},
		{
			"attribute": [
				"service_name",
			],
			"resource": "module.vpc.data.aws_vpc_endpoint_service.emr[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_route_table.public[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.elastic_inference_runtime",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_endpoint.qldb_session",
		},
	],
	"resource_changes": [
		{
			"address": "aws_ebs_volume.unencrypted",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
					"availability_zone":    "us-west-1b",
					"encrypted":            true,
					"id":                   "vol-0662fddf4e25ce498",
					"iops":                 100,
					"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
					"multi_attach_enabled": false,
					"outpost_arn":          "",
					"size":                 8,
					"snapshot_id":          "",
					"tags":                 {},
					"type":                 "gp2",
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
					"availability_zone":    "us-west-1b",
					"encrypted":            true,
					"id":                   "vol-0662fddf4e25ce498",
					"iops":                 100,
					"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
					"multi_attach_enabled": false,
					"outpost_arn":          "",
					"size":                 8,
					"snapshot_id":          "",
					"tags":                 {},
					"type":                 "gp2",
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"mode":          "managed",
			"name":          "unencrypted",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_ebs_volume",
		},
		{
			"address": "random_string.lb_id",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"id":               "erU",
					"keepers":          null,
					"length":           3,
					"lower":            true,
					"min_lower":        0,
					"min_numeric":      0,
					"min_special":      0,
					"min_upper":        0,
					"number":           true,
					"override_special": null,
					"result":           "erU",
					"special":          false,
					"upper":            true,
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"id":               "erU",
					"keepers":          null,
					"length":           3,
					"lower":            true,
					"min_lower":        0,
					"min_numeric":      0,
					"min_special":      0,
					"min_upper":        0,
					"number":           true,
					"override_special": null,
					"result":           "erU",
					"special":          false,
					"upper":            true,
				},
				"before_sensitive": {},
			},
			"mode":          "managed",
			"name":          "lb_id",
			"provider_name": "registry.terraform.io/hashicorp/random",
			"type":          "random_string",
		},
		{
			"address": "module.ec2_instances.aws_instance.app[0]",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"ami": "ami-0fb832921029d9dfc",
					"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-03b9dd825ffb52b7c",
					"associate_public_ip_address": false,
					"availability_zone":           "us-west-1b",
					"cpu_core_count":              1,
					"cpu_threads_per_core":        1,
					"credit_specification": [
						{
							"cpu_credits": "standard",
						},
					],
					"disable_api_termination": false,
					"ebs_block_device":        [],
					"ebs_optimized":           false,
					"enclave_options": [
						{
							"enabled": false,
						},
					],
					"ephemeral_block_device": [],
					"get_password_data":      false,
					"hibernation":            false,
					"host_id":                null,
					"iam_instance_profile":   "",
					"id": "i-03b9dd825ffb52b7c",
					"instance_initiated_shutdown_behavior": null,
					"instance_state":                       "running",
					"instance_type":                        "t2.micro",
					"ipv6_address_count":                   0,
					"ipv6_addresses":                       [],
					"key_name":                             "",
					"metadata_options": [
						{
							"http_endpoint":               "enabled",
							"http_put_response_hop_limit": 1,
							"http_tokens":                 "optional",
						},
					],
					"monitoring":                   false,
					"network_interface":            [],
					"outpost_arn":                  "",
					"password_data":                "",
					"placement_group":              "",
					"primary_network_interface_id": "eni-0acf125024e8f3a16",
					"private_dns":                  "ip-10-0-101-172.us-west-1.compute.internal",
					"private_ip":                   "10.0.101.172",
					"public_dns":                   "",
					"public_ip":                    "",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"device_name":           "/dev/xvda",
							"encrypted":             false,
							"iops":                  100,
							"kms_key_id":            "",
							"throughput":            0,
							"volume_id":             "vol-0d5570e1035e77acf",
							"volume_size":           8,
							"volume_type":           "gp2",
						},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"source_dest_check":     true,
					"subnet_id":             "subnet-0b2bdf40cec3c055c",
					"tags": {
						"environment": "development",
						"project":     "project-alpha",
					},
					"tenancy":          "default",
					"timeouts":         null,
					"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
					"user_data_base64": null,
					"volume_tags":      {},
					"vpc_security_group_ids": [
						"sg-06326fc6a0a3eb4b8",
					],
				},
				"after_sensitive": {
					"credit_specification": [
						{},
					],
					"ebs_block_device": [],
					"enclave_options": [
						{},
					],
					"ephemeral_block_device": [],
					"ipv6_addresses":         [],
					"metadata_options": [
						{},
					],
					"network_interface": [],
					"root_block_device": [
						{},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"tags":                  {},
					"volume_tags":           {},
					"vpc_security_group_ids": [
						false,
					],
				},
				"after_unknown": {},
				"before": {
					"ami": "ami-0fb832921029d9dfc",
					"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-03b9dd825ffb52b7c",
					"associate_public_ip_address": false,
					"availability_zone":           "us-west-1b",
					"cpu_core_count":              1,
					"cpu_threads_per_core":        1,
					"credit_specification": [
						{
							"cpu_credits": "standard",
						},
					],
					"disable_api_termination": false,
					"ebs_block_device":        [],
					"ebs_optimized":           false,
					"enclave_options": [
						{
							"enabled": false,
						},
					],
					"ephemeral_block_device": [],
					"get_password_data":      false,
					"hibernation":            false,
					"host_id":                null,
					"iam_instance_profile":   "",
					"id": "i-03b9dd825ffb52b7c",
					"instance_initiated_shutdown_behavior": null,
					"instance_state":                       "running",
					"instance_type":                        "t2.micro",
					"ipv6_address_count":                   0,
					"ipv6_addresses":                       [],
					"key_name":                             "",
					"metadata_options": [
						{
							"http_endpoint":               "enabled",
							"http_put_response_hop_limit": 1,
							"http_tokens":                 "optional",
						},
					],
					"monitoring":                   false,
					"network_interface":            [],
					"outpost_arn":                  "",
					"password_data":                "",
					"placement_group":              "",
					"primary_network_interface_id": "eni-0acf125024e8f3a16",
					"private_dns":                  "ip-10-0-101-172.us-west-1.compute.internal",
					"private_ip":                   "10.0.101.172",
					"public_dns":                   "",
					"public_ip":                    "",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"device_name":           "/dev/xvda",
							"encrypted":             false,
							"iops":                  100,
							"kms_key_id":            "",
							"throughput":            0,
							"volume_id":             "vol-0d5570e1035e77acf",
							"volume_size":           8,
							"volume_type":           "gp2",
						},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"source_dest_check":     true,
					"subnet_id":             "subnet-0b2bdf40cec3c055c",
					"tags": {
						"environment": "dev",
						"project":     "project-alpha",
					},
					"tenancy":          "default",
					"timeouts":         null,
					"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
					"user_data_base64": null,
					"volume_tags":      {},
					"vpc_security_group_ids": [
						"sg-06326fc6a0a3eb4b8",
					],
				},
				"before_sensitive": {
					"credit_specification": [
						{},
					],
					"ebs_block_device": [],
					"enclave_options": [
						{},
					],
					"ephemeral_block_device": [],
					"ipv6_addresses":         [],
					"metadata_options": [
						{},
					],
					"network_interface": [],
					"root_block_device": [
						{},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"tags":                  {},
					"volume_tags":           {},
					"vpc_security_group_ids": [
						false,
					],
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.ec2_instances",
			"name":           "app",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_instance",
		},
		{
			"address": "module.ec2_instances.aws_instance.app[1]",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"ami": "ami-0fb832921029d9dfc",
					"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-016765c89b917b799",
					"associate_public_ip_address": false,
					"availability_zone":           "us-west-1c",
					"cpu_core_count":              1,
					"cpu_threads_per_core":        1,
					"credit_specification": [
						{
							"cpu_credits": "standard",
						},
					],
					"disable_api_termination": false,
					"ebs_block_device":        [],
					"ebs_optimized":           false,
					"enclave_options": [
						{
							"enabled": false,
						},
					],
					"ephemeral_block_device": [],
					"get_password_data":      false,
					"hibernation":            false,
					"host_id":                null,
					"iam_instance_profile":   "",
					"id": "i-016765c89b917b799",
					"instance_initiated_shutdown_behavior": null,
					"instance_state":                       "running",
					"instance_type":                        "t2.micro",
					"ipv6_address_count":                   0,
					"ipv6_addresses":                       [],
					"key_name":                             "",
					"metadata_options": [
						{
							"http_endpoint":               "enabled",
							"http_put_response_hop_limit": 1,
							"http_tokens":                 "optional",
						},
					],
					"monitoring":                   false,
					"network_interface":            [],
					"outpost_arn":                  "",
					"password_data":                "",
					"placement_group":              "",
					"primary_network_interface_id": "eni-0109abce718700404",
					"private_dns":                  "ip-10-0-102-117.us-west-1.compute.internal",
					"private_ip":                   "10.0.102.117",
					"public_dns":                   "",
					"public_ip":                    "",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"device_name":           "/dev/xvda",
							"encrypted":             false,
							"iops":                  100,
							"kms_key_id":            "",
							"throughput":            0,
							"volume_id":             "vol-0e35b38712a49cde8",
							"volume_size":           8,
							"volume_type":           "gp2",
						},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"source_dest_check":     true,
					"subnet_id":             "subnet-0ea934f57d112a269",
					"tags": {
						"environment": "development",
						"project":     "project-alpha",
					},
					"tenancy":          "default",
					"timeouts":         null,
					"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
					"user_data_base64": null,
					"volume_tags":      {},
					"vpc_security_group_ids": [
						"sg-06326fc6a0a3eb4b8",
					],
				},
				"after_sensitive": {
					"credit_specification": [
						{},
					],
					"ebs_block_device": [],
					"enclave_options": [
						{},
					],
					"ephemeral_block_device": [],
					"ipv6_addresses":         [],
					"metadata_options": [
						{},
					],
					"network_interface": [],
					"root_block_device": [
						{},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"tags":                  {},
					"volume_tags":           {},
					"vpc_security_group_ids": [
						false,
					],
				},
				"after_unknown": {},
				"before": {
					"ami": "ami-0fb832921029d9dfc",
					"arn": "arn:aws:ec2:us-west-1:737366052617:instance/i-016765c89b917b799",
					"associate_public_ip_address": false,
					"availability_zone":           "us-west-1c",
					"cpu_core_count":              1,
					"cpu_threads_per_core":        1,
					"credit_specification": [
						{
							"cpu_credits": "standard",
						},
					],
					"disable_api_termination": false,
					"ebs_block_device":        [],
					"ebs_optimized":           false,
					"enclave_options": [
						{
							"enabled": false,
						},
					],
					"ephemeral_block_device": [],
					"get_password_data":      false,
					"hibernation":            false,
					"host_id":                null,
					"iam_instance_profile":   "",
					"id": "i-016765c89b917b799",
					"instance_initiated_shutdown_behavior": null,
					"instance_state":                       "running",
					"instance_type":                        "t2.micro",
					"ipv6_address_count":                   0,
					"ipv6_addresses":                       [],
					"key_name":                             "",
					"metadata_options": [
						{
							"http_endpoint":               "enabled",
							"http_put_response_hop_limit": 1,
							"http_tokens":                 "optional",
						},
					],
					"monitoring":                   false,
					"network_interface":            [],
					"outpost_arn":                  "",
					"password_data":                "",
					"placement_group":              "",
					"primary_network_interface_id": "eni-0109abce718700404",
					"private_dns":                  "ip-10-0-102-117.us-west-1.compute.internal",
					"private_ip":                   "10.0.102.117",
					"public_dns":                   "",
					"public_ip":                    "",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"device_name":           "/dev/xvda",
							"encrypted":             false,
							"iops":                  100,
							"kms_key_id":            "",
							"throughput":            0,
							"volume_id":             "vol-0e35b38712a49cde8",
							"volume_size":           8,
							"volume_type":           "gp2",
						},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"source_dest_check":     true,
					"subnet_id":             "subnet-0ea934f57d112a269",
					"tags": {
						"environment": "dev",
						"project":     "project-alpha",
					},
					"tenancy":          "default",
					"timeouts":         null,
					"user_data":        "3b21b980468438c9034158841596d57f1283de5c",
					"user_data_base64": null,
					"volume_tags":      {},
					"vpc_security_group_ids": [
						"sg-06326fc6a0a3eb4b8",
					],
				},
				"before_sensitive": {
					"credit_specification": [
						{},
					],
					"ebs_block_device": [],
					"enclave_options": [
						{},
					],
					"ephemeral_block_device": [],
					"ipv6_addresses":         [],
					"metadata_options": [
						{},
					],
					"network_interface": [],
					"root_block_device": [
						{},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"tags":                  {},
					"volume_tags":           {},
					"vpc_security_group_ids": [
						false,
					],
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.ec2_instances",
			"name":           "app",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_instance",
		},
		{
			"address": "module.vpc.aws_eip.nat[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"allocation_id":             null,
					"associate_with_private_ip": null,
					"association_id":            "eipassoc-0da9417e63565d7c2",
					"carrier_ip":                "",
					"customer_owned_ip":         "",
					"customer_owned_ipv4_pool":  "",
					"domain":                    "vpc",
					"id":                        "eipalloc-0eb190a7f42b983b2",
					"instance":                  "",
					"network_border_group":      "us-west-1",
					"network_interface":         "eni-057bc87bc25465691",
					"private_dns":               "ip-10-0-1-91.us-west-1.compute.internal",
					"private_ip":                "10.0.1.91",
					"public_dns":                "ec2-54-177-111-86.us-west-1.compute.amazonaws.com",
					"public_ip":                 "54.177.111.86",
					"public_ipv4_pool":          "amazon",
					"tags": {
						"Name":        "-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc":      true,
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"allocation_id":             null,
					"associate_with_private_ip": null,
					"association_id":            "eipassoc-0da9417e63565d7c2",
					"carrier_ip":                "",
					"customer_owned_ip":         "",
					"customer_owned_ipv4_pool":  "",
					"domain":                    "vpc",
					"id":                        "eipalloc-0eb190a7f42b983b2",
					"instance":                  "",
					"network_border_group":      "us-west-1",
					"network_interface":         "eni-057bc87bc25465691",
					"private_dns":               "ip-10-0-1-91.us-west-1.compute.internal",
					"private_ip":                "10.0.1.91",
					"public_dns":                "ec2-54-177-111-86.us-west-1.compute.amazonaws.com",
					"public_ip":                 "54.177.111.86",
					"public_ipv4_pool":          "amazon",
					"tags": {
						"Name":        "-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc":      true,
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "nat",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_eip",
		},
		{
			"address": "module.vpc.aws_eip.nat[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"allocation_id":             null,
					"associate_with_private_ip": null,
					"association_id":            "eipassoc-0698d8f20c5722dff",
					"carrier_ip":                "",
					"customer_owned_ip":         "",
					"customer_owned_ipv4_pool":  "",
					"domain":                    "vpc",
					"id":                        "eipalloc-0f772743cb6efe71f",
					"instance":                  "",
					"network_border_group":      "us-west-1",
					"network_interface":         "eni-06a8c1c0f5f0a0d5c",
					"private_dns":               "ip-10-0-2-46.us-west-1.compute.internal",
					"private_ip":                "10.0.2.46",
					"public_dns":                "ec2-50-18-226-163.us-west-1.compute.amazonaws.com",
					"public_ip":                 "50.18.226.163",
					"public_ipv4_pool":          "amazon",
					"tags": {
						"Name":        "-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc":      true,
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"allocation_id":             null,
					"associate_with_private_ip": null,
					"association_id":            "eipassoc-0698d8f20c5722dff",
					"carrier_ip":                "",
					"customer_owned_ip":         "",
					"customer_owned_ipv4_pool":  "",
					"domain":                    "vpc",
					"id":                        "eipalloc-0f772743cb6efe71f",
					"instance":                  "",
					"network_border_group":      "us-west-1",
					"network_interface":         "eni-06a8c1c0f5f0a0d5c",
					"private_dns":               "ip-10-0-2-46.us-west-1.compute.internal",
					"private_ip":                "10.0.2.46",
					"public_dns":                "ec2-50-18-226-163.us-west-1.compute.amazonaws.com",
					"public_ip":                 "50.18.226.163",
					"public_ipv4_pool":          "amazon",
					"tags": {
						"Name":        "-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc":      true,
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "nat",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_eip",
		},
		{
			"address": "module.vpc.aws_internet_gateway.this[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn":      "arn:aws:ec2:us-west-1:737366052617:internet-gateway/igw-0a87232c769e282d2",
					"id":       "igw-0a87232c769e282d2",
					"owner_id": "737366052617",
					"tags": {
						"Name":        "",
						"environment": "development",
						"project":     "project-alpha",
					},
					"vpc_id": "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn":      "arn:aws:ec2:us-west-1:737366052617:internet-gateway/igw-0a87232c769e282d2",
					"id":       "igw-0a87232c769e282d2",
					"owner_id": "737366052617",
					"tags": {
						"Name":        "",
						"environment": "development",
						"project":     "project-alpha",
					},
					"vpc_id": "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_internet_gateway",
		},
		{
			"address": "module.vpc.aws_nat_gateway.this[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"allocation_id": "eipalloc-0eb190a7f42b983b2",
					"id":            "nat-0baadee1e3e44558c",
					"network_interface_id": "eni-057bc87bc25465691",
					"private_ip":           "10.0.1.91",
					"public_ip":            "54.177.111.86",
					"subnet_id":            "subnet-0b017cf7e24e4b3ff",
					"tags": {
						"Name":        "-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"allocation_id": "eipalloc-0eb190a7f42b983b2",
					"id":            "nat-0baadee1e3e44558c",
					"network_interface_id": "eni-057bc87bc25465691",
					"private_ip":           "10.0.1.91",
					"public_ip":            "54.177.111.86",
					"subnet_id":            "subnet-0b017cf7e24e4b3ff",
					"tags": {
						"Name":        "-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_nat_gateway",
		},
		{
			"address": "module.vpc.aws_nat_gateway.this[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"allocation_id": "eipalloc-0f772743cb6efe71f",
					"id":            "nat-043b0a2533e8c970d",
					"network_interface_id": "eni-06a8c1c0f5f0a0d5c",
					"private_ip":           "10.0.2.46",
					"public_ip":            "50.18.226.163",
					"subnet_id":            "subnet-0668e14c98636a8ec",
					"tags": {
						"Name":        "-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"allocation_id": "eipalloc-0f772743cb6efe71f",
					"id":            "nat-043b0a2533e8c970d",
					"network_interface_id": "eni-06a8c1c0f5f0a0d5c",
					"private_ip":           "10.0.2.46",
					"public_ip":            "50.18.226.163",
					"subnet_id":            "subnet-0668e14c98636a8ec",
					"tags": {
						"Name":        "-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_nat_gateway",
		},
		{
			"address": "module.vpc.aws_route.private_nat_gateway[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": "",
					"destination_prefix_list_id":  "",
					"egress_only_gateway_id":      "",
					"gateway_id":                  "",
					"id":                          "r-rtb-08929b85b4ee0c9d21080289494",
					"instance_id":                 "",
					"instance_owner_id":           "",
					"local_gateway_id":            "",
					"nat_gateway_id":              "nat-0baadee1e3e44558c",
					"network_interface_id":        "",
					"origin":                      "CreateRoute",
					"route_table_id":              "rtb-08929b85b4ee0c9d2",
					"state":                       "active",
					"timeouts": {
						"create": "5m",
						"delete": null,
					},
					"transit_gateway_id":        "",
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": "",
				},
				"after_sensitive": {
					"timeouts": {},
				},
				"after_unknown": {},
				"before": {
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": "",
					"destination_prefix_list_id":  "",
					"egress_only_gateway_id":      "",
					"gateway_id":                  "",
					"id":                          "r-rtb-08929b85b4ee0c9d21080289494",
					"instance_id":                 "",
					"instance_owner_id":           "",
					"local_gateway_id":            "",
					"nat_gateway_id":              "nat-0baadee1e3e44558c",
					"network_interface_id":        "",
					"origin":                      "CreateRoute",
					"route_table_id":              "rtb-08929b85b4ee0c9d2",
					"state":                       "active",
					"timeouts": {
						"create": "5m",
						"delete": null,
					},
					"transit_gateway_id":        "",
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": "",
				},
				"before_sensitive": {
					"timeouts": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private_nat_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route",
		},
		{
			"address": "module.vpc.aws_route.private_nat_gateway[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": "",
					"destination_prefix_list_id":  "",
					"egress_only_gateway_id":      "",
					"gateway_id":                  "",
					"id":                          "r-rtb-053e1dd125b4a5e801080289494",
					"instance_id":                 "",
					"instance_owner_id":           "",
					"local_gateway_id":            "",
					"nat_gateway_id":              "nat-043b0a2533e8c970d",
					"network_interface_id":        "",
					"origin":                      "CreateRoute",
					"route_table_id":              "rtb-053e1dd125b4a5e80",
					"state":                       "active",
					"timeouts": {
						"create": "5m",
						"delete": null,
					},
					"transit_gateway_id":        "",
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": "",
				},
				"after_sensitive": {
					"timeouts": {},
				},
				"after_unknown": {},
				"before": {
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": "",
					"destination_prefix_list_id":  "",
					"egress_only_gateway_id":      "",
					"gateway_id":                  "",
					"id":                          "r-rtb-053e1dd125b4a5e801080289494",
					"instance_id":                 "",
					"instance_owner_id":           "",
					"local_gateway_id":            "",
					"nat_gateway_id":              "nat-043b0a2533e8c970d",
					"network_interface_id":        "",
					"origin":                      "CreateRoute",
					"route_table_id":              "rtb-053e1dd125b4a5e80",
					"state":                       "active",
					"timeouts": {
						"create": "5m",
						"delete": null,
					},
					"transit_gateway_id":        "",
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": "",
				},
				"before_sensitive": {
					"timeouts": {},
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private_nat_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route",
		},
		{
			"address": "module.vpc.aws_route.public_internet_gateway[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": "",
					"destination_prefix_list_id":  "",
					"egress_only_gateway_id":      "",
					"gateway_id":                  "igw-0a87232c769e282d2",
					"id":                          "r-rtb-034f35c1eccf9a1941080289494",
					"instance_id":                 "",
					"instance_owner_id":           "",
					"local_gateway_id":            "",
					"nat_gateway_id":              "",
					"network_interface_id":        "",
					"origin":                      "CreateRoute",
					"route_table_id":              "rtb-034f35c1eccf9a194",
					"state":                       "active",
					"timeouts": {
						"create": "5m",
						"delete": null,
					},
					"transit_gateway_id":        "",
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": "",
				},
				"after_sensitive": {
					"timeouts": {},
				},
				"after_unknown": {},
				"before": {
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": "",
					"destination_prefix_list_id":  "",
					"egress_only_gateway_id":      "",
					"gateway_id":                  "igw-0a87232c769e282d2",
					"id":                          "r-rtb-034f35c1eccf9a1941080289494",
					"instance_id":                 "",
					"instance_owner_id":           "",
					"local_gateway_id":            "",
					"nat_gateway_id":              "",
					"network_interface_id":        "",
					"origin":                      "CreateRoute",
					"route_table_id":              "rtb-034f35c1eccf9a194",
					"state":                       "active",
					"timeouts": {
						"create": "5m",
						"delete": null,
					},
					"transit_gateway_id":        "",
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": "",
				},
				"before_sensitive": {
					"timeouts": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route",
		},
		{
			"address": "module.vpc.aws_route_table.private[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"id":               "rtb-08929b85b4ee0c9d2",
					"owner_id":         "737366052617",
					"propagating_vgws": [],
					"route": [
						{
							"cidr_block":                "0.0.0.0/0",
							"egress_only_gateway_id":    "",
							"gateway_id":                "",
							"instance_id":               "",
							"ipv6_cidr_block":           "",
							"local_gateway_id":          "",
							"nat_gateway_id":            "nat-0baadee1e3e44558c",
							"network_interface_id":      "",
							"transit_gateway_id":        "",
							"vpc_endpoint_id":           "",
							"vpc_peering_connection_id": "",
						},
					],
					"tags": {
						"Name":        "-private-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
					"vpc_id": "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route": [
						{},
					],
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"id":               "rtb-08929b85b4ee0c9d2",
					"owner_id":         "737366052617",
					"propagating_vgws": [],
					"route": [
						{
							"cidr_block":                "0.0.0.0/0",
							"egress_only_gateway_id":    "",
							"gateway_id":                "",
							"instance_id":               "",
							"ipv6_cidr_block":           "",
							"local_gateway_id":          "",
							"nat_gateway_id":            "nat-0baadee1e3e44558c",
							"network_interface_id":      "",
							"transit_gateway_id":        "",
							"vpc_endpoint_id":           "",
							"vpc_peering_connection_id": "",
						},
					],
					"tags": {
						"Name":        "-private-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
					"vpc_id": "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"propagating_vgws": [],
					"route": [
						{},
					],
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table.private[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"id":               "rtb-053e1dd125b4a5e80",
					"owner_id":         "737366052617",
					"propagating_vgws": [],
					"route": [
						{
							"cidr_block":                "0.0.0.0/0",
							"egress_only_gateway_id":    "",
							"gateway_id":                "",
							"instance_id":               "",
							"ipv6_cidr_block":           "",
							"local_gateway_id":          "",
							"nat_gateway_id":            "nat-043b0a2533e8c970d",
							"network_interface_id":      "",
							"transit_gateway_id":        "",
							"vpc_endpoint_id":           "",
							"vpc_peering_connection_id": "",
						},
					],
					"tags": {
						"Name":        "-private-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
					"vpc_id": "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route": [
						{},
					],
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"id":               "rtb-053e1dd125b4a5e80",
					"owner_id":         "737366052617",
					"propagating_vgws": [],
					"route": [
						{
							"cidr_block":                "0.0.0.0/0",
							"egress_only_gateway_id":    "",
							"gateway_id":                "",
							"instance_id":               "",
							"ipv6_cidr_block":           "",
							"local_gateway_id":          "",
							"nat_gateway_id":            "nat-043b0a2533e8c970d",
							"network_interface_id":      "",
							"transit_gateway_id":        "",
							"vpc_endpoint_id":           "",
							"vpc_peering_connection_id": "",
						},
					],
					"tags": {
						"Name":        "-private-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
					"vpc_id": "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"propagating_vgws": [],
					"route": [
						{},
					],
					"tags": {},
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table.public[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"id":               "rtb-034f35c1eccf9a194",
					"owner_id":         "737366052617",
					"propagating_vgws": [],
					"route": [
						{
							"cidr_block":                "0.0.0.0/0",
							"egress_only_gateway_id":    "",
							"gateway_id":                "igw-0a87232c769e282d2",
							"instance_id":               "",
							"ipv6_cidr_block":           "",
							"local_gateway_id":          "",
							"nat_gateway_id":            "",
							"network_interface_id":      "",
							"transit_gateway_id":        "",
							"vpc_endpoint_id":           "",
							"vpc_peering_connection_id": "",
						},
					],
					"tags": {
						"Name":        "-public",
						"environment": "development",
						"project":     "project-alpha",
					},
					"vpc_id": "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route": [
						{},
					],
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"id":               "rtb-034f35c1eccf9a194",
					"owner_id":         "737366052617",
					"propagating_vgws": [],
					"route": [
						{
							"cidr_block":                "0.0.0.0/0",
							"egress_only_gateway_id":    "",
							"gateway_id":                "igw-0a87232c769e282d2",
							"instance_id":               "",
							"ipv6_cidr_block":           "",
							"local_gateway_id":          "",
							"nat_gateway_id":            "",
							"network_interface_id":      "",
							"transit_gateway_id":        "",
							"vpc_endpoint_id":           "",
							"vpc_peering_connection_id": "",
						},
					],
					"tags": {
						"Name":        "-public",
						"environment": "development",
						"project":     "project-alpha",
					},
					"vpc_id": "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"propagating_vgws": [],
					"route": [
						{},
					],
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table_association.private[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"gateway_id":     null,
					"id":             "rtbassoc-0142f84975d0a2c22",
					"route_table_id": "rtb-08929b85b4ee0c9d2",
					"subnet_id":      "subnet-0b2bdf40cec3c055c",
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"gateway_id":     null,
					"id":             "rtbassoc-0142f84975d0a2c22",
					"route_table_id": "rtb-08929b85b4ee0c9d2",
					"subnet_id":      "subnet-0b2bdf40cec3c055c",
				},
				"before_sensitive": {},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.private[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"gateway_id":     null,
					"id":             "rtbassoc-012ea9d78aaef9617",
					"route_table_id": "rtb-053e1dd125b4a5e80",
					"subnet_id":      "subnet-0ea934f57d112a269",
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"gateway_id":     null,
					"id":             "rtbassoc-012ea9d78aaef9617",
					"route_table_id": "rtb-053e1dd125b4a5e80",
					"subnet_id":      "subnet-0ea934f57d112a269",
				},
				"before_sensitive": {},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"gateway_id":     null,
					"id":             "rtbassoc-0f3fadf9fd2eca79a",
					"route_table_id": "rtb-034f35c1eccf9a194",
					"subnet_id":      "subnet-0b017cf7e24e4b3ff",
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"gateway_id":     null,
					"id":             "rtbassoc-0f3fadf9fd2eca79a",
					"route_table_id": "rtb-034f35c1eccf9a194",
					"subnet_id":      "subnet-0b017cf7e24e4b3ff",
				},
				"before_sensitive": {},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"gateway_id":     null,
					"id":             "rtbassoc-05f3c585af67fa670",
					"route_table_id": "rtb-034f35c1eccf9a194",
					"subnet_id":      "subnet-0668e14c98636a8ec",
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"gateway_id":     null,
					"id":             "rtbassoc-05f3c585af67fa670",
					"route_table_id": "rtb-034f35c1eccf9a194",
					"subnet_id":      "subnet-0668e14c98636a8ec",
				},
				"before_sensitive": {},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_subnet.private[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b2bdf40cec3c055c",
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-west-1b",
					"availability_zone_id":            "usw1-az3",
					"cidr_block":                      "10.0.101.0/24",
					"id":                              "subnet-0b2bdf40cec3c055c",
					"ipv6_cidr_block":                 "",
					"ipv6_cidr_block_association_id":  "",
					"map_public_ip_on_launch":         false,
					"outpost_arn":                     "",
					"owner_id":                        "737366052617",
					"tags": {
						"Name":        "-private-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b2bdf40cec3c055c",
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-west-1b",
					"availability_zone_id":            "usw1-az3",
					"cidr_block":                      "10.0.101.0/24",
					"id":                              "subnet-0b2bdf40cec3c055c",
					"ipv6_cidr_block":                 "",
					"ipv6_cidr_block_association_id":  "",
					"map_public_ip_on_launch":         false,
					"outpost_arn":                     "",
					"owner_id":                        "737366052617",
					"tags": {
						"Name":        "-private-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.private[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0ea934f57d112a269",
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-west-1c",
					"availability_zone_id":            "usw1-az1",
					"cidr_block":                      "10.0.102.0/24",
					"id":                              "subnet-0ea934f57d112a269",
					"ipv6_cidr_block":                 "",
					"ipv6_cidr_block_association_id":  "",
					"map_public_ip_on_launch":         false,
					"outpost_arn":                     "",
					"owner_id":                        "737366052617",
					"tags": {
						"Name":        "-private-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0ea934f57d112a269",
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-west-1c",
					"availability_zone_id":            "usw1-az1",
					"cidr_block":                      "10.0.102.0/24",
					"id":                              "subnet-0ea934f57d112a269",
					"ipv6_cidr_block":                 "",
					"ipv6_cidr_block_association_id":  "",
					"map_public_ip_on_launch":         false,
					"outpost_arn":                     "",
					"owner_id":                        "737366052617",
					"tags": {
						"Name":        "-private-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b017cf7e24e4b3ff",
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-west-1b",
					"availability_zone_id":            "usw1-az3",
					"cidr_block":                      "10.0.1.0/24",
					"id":                              "subnet-0b017cf7e24e4b3ff",
					"ipv6_cidr_block":                 "",
					"ipv6_cidr_block_association_id":  "",
					"map_public_ip_on_launch":         true,
					"outpost_arn":                     "",
					"owner_id":                        "737366052617",
					"tags": {
						"Name":        "-public-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0b017cf7e24e4b3ff",
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-west-1b",
					"availability_zone_id":            "usw1-az3",
					"cidr_block":                      "10.0.1.0/24",
					"id":                              "subnet-0b017cf7e24e4b3ff",
					"ipv6_cidr_block":                 "",
					"ipv6_cidr_block_association_id":  "",
					"map_public_ip_on_launch":         true,
					"outpost_arn":                     "",
					"owner_id":                        "737366052617",
					"tags": {
						"Name":        "-public-us-west-1b",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0668e14c98636a8ec",
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-west-1c",
					"availability_zone_id":            "usw1-az1",
					"cidr_block":                      "10.0.2.0/24",
					"id":                              "subnet-0668e14c98636a8ec",
					"ipv6_cidr_block":                 "",
					"ipv6_cidr_block_association_id":  "",
					"map_public_ip_on_launch":         true,
					"outpost_arn":                     "",
					"owner_id":                        "737366052617",
					"tags": {
						"Name":        "-public-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:subnet/subnet-0668e14c98636a8ec",
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-west-1c",
					"availability_zone_id":            "usw1-az1",
					"cidr_block":                      "10.0.2.0/24",
					"id":                              "subnet-0668e14c98636a8ec",
					"ipv6_cidr_block":                 "",
					"ipv6_cidr_block_association_id":  "",
					"map_public_ip_on_launch":         true,
					"outpost_arn":                     "",
					"owner_id":                        "737366052617",
					"tags": {
						"Name":        "-public-us-west-1c",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_vpc.this[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:vpc/vpc-0803d92b938b67530",
					"assign_generated_ipv6_cidr_block": false,
					"cidr_block":                       "10.0.0.0/16",
					"default_network_acl_id":           "acl-0e534a87fbb224833",
					"default_route_table_id":           "rtb-05b1175e8ba5f76d3",
					"default_security_group_id":        "sg-0d0145d916e0d471a",
					"dhcp_options_id":                  "dopt-934476f4",
					"enable_classiclink":               false,
					"enable_classiclink_dns_support":   false,
					"enable_dns_hostnames":             false,
					"enable_dns_support":               true,
					"id":                               "vpc-0803d92b938b67530",
					"instance_tenancy":                 "default",
					"ipv6_association_id":              "",
					"ipv6_cidr_block":                  "",
					"main_route_table_id":              "rtb-05b1175e8ba5f76d3",
					"owner_id":                         "737366052617",
					"tags": {
						"Name":        "",
						"environment": "development",
						"project":     "project-alpha",
					},
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:us-west-1:737366052617:vpc/vpc-0803d92b938b67530",
					"assign_generated_ipv6_cidr_block": false,
					"cidr_block":                       "10.0.0.0/16",
					"default_network_acl_id":           "acl-0e534a87fbb224833",
					"default_route_table_id":           "rtb-05b1175e8ba5f76d3",
					"default_security_group_id":        "sg-0d0145d916e0d471a",
					"dhcp_options_id":                  "dopt-934476f4",
					"enable_classiclink":               false,
					"enable_classiclink_dns_support":   false,
					"enable_dns_hostnames":             false,
					"enable_dns_support":               true,
					"id":                               "vpc-0803d92b938b67530",
					"instance_tenancy":                 "default",
					"ipv6_association_id":              "",
					"ipv6_cidr_block":                  "",
					"main_route_table_id":              "rtb-05b1175e8ba5f76d3",
					"owner_id":                         "737366052617",
					"tags": {
						"Name":        "",
						"environment": "development",
						"project":     "project-alpha",
					},
				},
				"before_sensitive": {
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_vpc",
		},
		{
			"address": "module.app_security_group.module.sg.aws_security_group.this_name_prefix[0]",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-06326fc6a0a3eb4b8",
					"description": "Security group for web-servers with HTTP ports open within VPC",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "All protocols",
							"from_port":   0,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "-1",
							"security_groups": [],
							"self":            false,
							"to_port":         0,
						},
					],
					"id": "sg-06326fc6a0a3eb4b8",
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.1.0/24",
								"10.0.2.0/24",
							],
							"description":      "HTTP",
							"from_port":        8080,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          8080,
						},
						{
							"cidr_blocks": [
								"10.0.1.0/24",
								"10.0.2.0/24",
							],
							"description":      "HTTP",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.0.1.0/24",
								"10.0.2.0/24",
							],
							"description":      "HTTPS",
							"from_port":        443,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          443,
						},
						{
							"cidr_blocks": [
								"10.0.1.0/24",
								"10.0.2.0/24",
							],
							"description":      "JMX",
							"from_port":        1099,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          1099,
						},
						{
							"cidr_blocks":      [],
							"description":      "Ingress Rule",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             true,
							"to_port":          0,
						},
					],
					"name":                   "web-sg-project-alpha-dev-20251002133440267500000001",
					"name_prefix":            "web-sg-project-alpha-dev-",
					"owner_id":               "737366052617",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name":        "web-sg-project-alpha-dev",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks":      [],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-06326fc6a0a3eb4b8",
					"description": "Security group for web-servers with HTTP ports open within VPC",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "All protocols",
							"from_port":   0,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "-1",
							"security_groups": [],
							"self":            false,
							"to_port":         0,
						},
					],
					"id": "sg-06326fc6a0a3eb4b8",
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.1.0/24",
								"10.0.2.0/24",
							],
							"description":      "HTTP",
							"from_port":        8080,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          8080,
						},
						{
							"cidr_blocks": [
								"10.0.1.0/24",
								"10.0.2.0/24",
							],
							"description":      "HTTP",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.0.1.0/24",
								"10.0.2.0/24",
							],
							"description":      "HTTPS",
							"from_port":        443,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          443,
						},
						{
							"cidr_blocks": [
								"10.0.1.0/24",
								"10.0.2.0/24",
							],
							"description":      "JMX",
							"from_port":        1099,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          1099,
						},
						{
							"cidr_blocks":      [],
							"description":      "Ingress Rule",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             true,
							"to_port":          0,
						},
					],
					"name":                   "web-sg-project-alpha-dev-20251002133440267500000001",
					"name_prefix":            "web-sg-project-alpha-dev-",
					"owner_id":               "737366052617",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name":        "web-sg-project-alpha-dev",
						"environment": "dev",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks":      [],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "this_name_prefix",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.app_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description": "All protocols",
					"from_port":   0,
					"id":          "sgrule-1165095938",
					"ipv6_cidr_blocks": [
						"::/0",
					],
					"prefix_list_ids":   [],
					"protocol":          "-1",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  0,
					"type":                     "egress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [
						false,
					],
					"prefix_list_ids": [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description": "All protocols",
					"from_port":   0,
					"id":          "sgrule-1165095938",
					"ipv6_cidr_blocks": [
						"::/0",
					],
					"prefix_list_ids":   [],
					"protocol":          "-1",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  0,
					"type":                     "egress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [
						false,
					],
					"prefix_list_ids": [],
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "egress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"10.0.1.0/24",
						"10.0.2.0/24",
					],
					"description":       "HTTP",
					"from_port":         80,
					"id":                "sgrule-1527321307",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  80,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"10.0.1.0/24",
						"10.0.2.0/24",
					],
					"description":       "HTTP",
					"from_port":         80,
					"id":                "sgrule-1527321307",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  80,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"10.0.1.0/24",
						"10.0.2.0/24",
					],
					"description":       "HTTP",
					"from_port":         8080,
					"id":                "sgrule-879057280",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  8080,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"10.0.1.0/24",
						"10.0.2.0/24",
					],
					"description":       "HTTP",
					"from_port":         8080,
					"id":                "sgrule-879057280",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  8080,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"10.0.1.0/24",
						"10.0.2.0/24",
					],
					"description":       "HTTPS",
					"from_port":         443,
					"id":                "sgrule-798564216",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  443,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"10.0.1.0/24",
						"10.0.2.0/24",
					],
					"description":       "HTTPS",
					"from_port":         443,
					"id":                "sgrule-798564216",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  443,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"10.0.1.0/24",
						"10.0.2.0/24",
					],
					"description":       "JMX",
					"from_port":         1099,
					"id":                "sgrule-2319081979",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  1099,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"10.0.1.0/24",
						"10.0.2.0/24",
					],
					"description":       "JMX",
					"from_port":         1099,
					"id":                "sgrule-2319081979",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  1099,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          3,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks":       [],
					"description":       "Ingress Rule",
					"from_port":         0,
					"id":                "sgrule-742313647",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "-1",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              true,
					"source_security_group_id": "sg-06326fc6a0a3eb4b8",
					"to_port":                  0,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks":      [],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks":       [],
					"description":       "Ingress Rule",
					"from_port":         0,
					"id":                "sgrule-742313647",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "-1",
					"security_group_id": "sg-06326fc6a0a3eb4b8",
					"self":              true,
					"source_security_group_id": "sg-06326fc6a0a3eb4b8",
					"to_port":                  0,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks":      [],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.app_security_group.module.sg",
			"name":           "ingress_with_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.elb_http.module.elb.aws_elb.this[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"access_logs": [],
					"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
					"availability_zones": [
						"us-west-1b",
						"us-west-1c",
					],
					"connection_draining":         false,
					"connection_draining_timeout": 300,
					"cross_zone_load_balancing":   true,
					"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
					"health_check": [
						{
							"healthy_threshold":   3,
							"interval":            10,
							"target":              "HTTP:80/index.html",
							"timeout":             5,
							"unhealthy_threshold": 10,
						},
					],
					"id":           "lb-erU-project-alpha-dev",
					"idle_timeout": 60,
					"instances": [
						"i-016765c89b917b799",
						"i-03b9dd825ffb52b7c",
					],
					"internal": false,
					"listener": [
						{
							"instance_port":      80,
							"instance_protocol":  "http",
							"lb_port":            80,
							"lb_protocol":        "http",
							"ssl_certificate_id": "",
						},
					],
					"name":        "lb-erU-project-alpha-dev",
					"name_prefix": null,
					"security_groups": [
						"sg-040d291a0f6288c7d",
					],
					"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
					"source_security_group_id": "sg-040d291a0f6288c7d",
					"subnets": [
						"subnet-0668e14c98636a8ec",
						"subnet-0b017cf7e24e4b3ff",
					],
					"tags": {
						"Name":        "lb-erU-project-alpha-dev",
						"environment": "development",
						"project":     "project-alpha",
					},
					"zone_id": "Z368ELLRRE2KJ0",
				},
				"after_sensitive": {
					"access_logs": [],
					"availability_zones": [
						false,
						false,
					],
					"health_check": [
						{},
					],
					"instances": [
						false,
						false,
					],
					"listener": [
						{},
					],
					"security_groups": [
						false,
					],
					"subnets": [
						false,
						false,
					],
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"access_logs": [],
					"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
					"availability_zones": [
						"us-west-1b",
						"us-west-1c",
					],
					"connection_draining":         false,
					"connection_draining_timeout": 300,
					"cross_zone_load_balancing":   true,
					"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
					"health_check": [
						{
							"healthy_threshold":   3,
							"interval":            10,
							"target":              "HTTP:80/index.html",
							"timeout":             5,
							"unhealthy_threshold": 10,
						},
					],
					"id":           "lb-erU-project-alpha-dev",
					"idle_timeout": 60,
					"instances": [
						"i-016765c89b917b799",
						"i-03b9dd825ffb52b7c",
					],
					"internal": false,
					"listener": [
						{
							"instance_port":      80,
							"instance_protocol":  "http",
							"lb_port":            80,
							"lb_protocol":        "http",
							"ssl_certificate_id": "",
						},
					],
					"name":        "lb-erU-project-alpha-dev",
					"name_prefix": null,
					"security_groups": [
						"sg-040d291a0f6288c7d",
					],
					"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
					"source_security_group_id": "sg-040d291a0f6288c7d",
					"subnets": [
						"subnet-0668e14c98636a8ec",
						"subnet-0b017cf7e24e4b3ff",
					],
					"tags": {
						"Name":        "lb-erU-project-alpha-dev",
						"environment": "development",
						"project":     "project-alpha",
					},
					"zone_id": "Z368ELLRRE2KJ0",
				},
				"before_sensitive": {
					"access_logs": [],
					"availability_zones": [
						false,
						false,
					],
					"health_check": [
						{},
					],
					"instances": [
						false,
						false,
					],
					"listener": [
						{},
					],
					"security_groups": [
						false,
					],
					"subnets": [
						false,
						false,
					],
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.elb_http.module.elb",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_elb",
		},
		{
			"address": "module.elb_http.module.elb_attachment.aws_elb_attachment.this[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"elb":      "lb-erU-project-alpha-dev",
					"id":       "lb-erU-project-alpha-dev-20251002134205104200000003",
					"instance": "i-03b9dd825ffb52b7c",
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"elb":      "lb-erU-project-alpha-dev",
					"id":       "lb-erU-project-alpha-dev-20251002134205104200000003",
					"instance": "i-03b9dd825ffb52b7c",
				},
				"before_sensitive": {},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.elb_http.module.elb_attachment",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_elb_attachment",
		},
		{
			"address": "module.elb_http.module.elb_attachment.aws_elb_attachment.this[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"elb":      "lb-erU-project-alpha-dev",
					"id":       "lb-erU-project-alpha-dev-20251002134205085000000002",
					"instance": "i-016765c89b917b799",
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"elb":      "lb-erU-project-alpha-dev",
					"id":       "lb-erU-project-alpha-dev-20251002134205085000000002",
					"instance": "i-016765c89b917b799",
				},
				"before_sensitive": {},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.elb_http.module.elb_attachment",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_elb_attachment",
		},
		{
			"address": "module.lb_security_group.module.sg.aws_security_group.this_name_prefix[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-040d291a0f6288c7d",
					"description": "Security group for load balancer with HTTP ports open within VPC",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "All protocols",
							"from_port":   0,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "-1",
							"security_groups": [],
							"self":            false,
							"to_port":         0,
						},
					],
					"id": "sg-040d291a0f6288c7d",
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "HTTP",
							"from_port":        8080,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          8080,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "HTTP",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "HTTPS",
							"from_port":        443,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          443,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "JMX",
							"from_port":        1099,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          1099,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "SSH restricted to internal network",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
						{
							"cidr_blocks":      [],
							"description":      "Ingress Rule",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             true,
							"to_port":          0,
						},
					],
					"name":                   "lb-sg-project-alpha-dev-20251002133440267800000002",
					"name_prefix":            "lb-sg-project-alpha-dev-",
					"owner_id":               "737366052617",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name":        "lb-sg-project-alpha-dev",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"after_sensitive": {
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks":      [],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn":         "arn:aws:ec2:us-west-1:737366052617:security-group/sg-040d291a0f6288c7d",
					"description": "Security group for load balancer with HTTP ports open within VPC",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "All protocols",
							"from_port":   0,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "-1",
							"security_groups": [],
							"self":            false,
							"to_port":         0,
						},
					],
					"id": "sg-040d291a0f6288c7d",
					"ingress": [
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "HTTP",
							"from_port":        8080,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          8080,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "HTTP",
							"from_port":        80,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          80,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "HTTPS",
							"from_port":        443,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          443,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "JMX",
							"from_port":        1099,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          1099,
						},
						{
							"cidr_blocks": [
								"10.0.0.0/16",
							],
							"description":      "SSH restricted to internal network",
							"from_port":        22,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          22,
						},
						{
							"cidr_blocks":      [],
							"description":      "Ingress Rule",
							"from_port":        0,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "-1",
							"security_groups":  [],
							"self":             true,
							"to_port":          0,
						},
					],
					"name":                   "lb-sg-project-alpha-dev-20251002133440267800000002",
					"name_prefix":            "lb-sg-project-alpha-dev-",
					"owner_id":               "737366052617",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name":        "lb-sg-project-alpha-dev",
						"environment": "development",
						"project":     "project-alpha",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0803d92b938b67530",
				},
				"before_sensitive": {
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
						{
							"cidr_blocks":      [],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "this_name_prefix",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.lb_security_group.module.sg.aws_security_group_rule.egress_rules[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description": "All protocols",
					"from_port":   0,
					"id":          "sgrule-34138926",
					"ipv6_cidr_blocks": [
						"::/0",
					],
					"prefix_list_ids":   [],
					"protocol":          "-1",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  0,
					"type":                     "egress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [
						false,
					],
					"prefix_list_ids": [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description": "All protocols",
					"from_port":   0,
					"id":          "sgrule-34138926",
					"ipv6_cidr_blocks": [
						"::/0",
					],
					"prefix_list_ids":   [],
					"protocol":          "-1",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  0,
					"type":                     "egress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [
						false,
					],
					"prefix_list_ids": [],
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "egress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "HTTP",
					"from_port":         80,
					"id":                "sgrule-4083687304",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  80,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "HTTP",
					"from_port":         80,
					"id":                "sgrule-4083687304",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  80,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "HTTP",
					"from_port":         8080,
					"id":                "sgrule-26869172",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  8080,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "HTTP",
					"from_port":         8080,
					"id":                "sgrule-26869172",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  8080,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[2]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "HTTPS",
					"from_port":         443,
					"id":                "sgrule-1771646953",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  443,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "HTTPS",
					"from_port":         443,
					"id":                "sgrule-1771646953",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  443,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules[3]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "JMX",
					"from_port":         1099,
					"id":                "sgrule-1125713004",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  1099,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "JMX",
					"from_port":         1099,
					"id":                "sgrule-1125713004",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  1099,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          3,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_rules",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "SSH restricted to internal network",
					"from_port":         22,
					"id":                "sgrule-2130763446",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  22,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks": [
						"10.0.0.0/16",
					],
					"description":       "SSH restricted to internal network",
					"from_port":         22,
					"id":                "sgrule-2130763446",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "tcp",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              false,
					"source_security_group_id": null,
					"to_port":                  22,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks": [
						false,
					],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_with_cidr_blocks",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_self[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"cidr_blocks":       [],
					"description":       "Ingress Rule",
					"from_port":         0,
					"id":                "sgrule-3912070980",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "-1",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              true,
					"source_security_group_id": "sg-040d291a0f6288c7d",
					"to_port":                  0,
					"type":                     "ingress",
				},
				"after_sensitive": {
					"cidr_blocks":      [],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
				"after_unknown": {},
				"before": {
					"cidr_blocks":       [],
					"description":       "Ingress Rule",
					"from_port":         0,
					"id":                "sgrule-3912070980",
					"ipv6_cidr_blocks":  [],
					"prefix_list_ids":   [],
					"protocol":          "-1",
					"security_group_id": "sg-040d291a0f6288c7d",
					"self":              true,
					"source_security_group_id": "sg-040d291a0f6288c7d",
					"to_port":                  0,
					"type":                     "ingress",
				},
				"before_sensitive": {
					"cidr_blocks":      [],
					"ipv6_cidr_blocks": [],
					"prefix_list_ids":  [],
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.lb_security_group.module.sg",
			"name":           "ingress_with_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
	],
	"resource_drift": [
		{
			"address": "aws_ebs_volume.unencrypted",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
					"availability_zone":    "us-west-1b",
					"encrypted":            true,
					"id":                   "vol-0662fddf4e25ce498",
					"iops":                 100,
					"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
					"multi_attach_enabled": false,
					"outpost_arn":          "",
					"size":                 8,
					"snapshot_id":          "",
					"tags":                 {},
					"type":                 "gp2",
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"arn":                  "arn:aws:ec2:us-west-1:737366052617:volume/vol-0662fddf4e25ce498",
					"availability_zone":    "us-west-1b",
					"encrypted":            true,
					"id":                   "vol-0662fddf4e25ce498",
					"iops":                 100,
					"kms_key_id":           "arn:aws:kms:us-west-1:737366052617:key/324143e6-5121-491b-b6ec-f7131e39b5f1",
					"multi_attach_enabled": false,
					"outpost_arn":          "",
					"size":                 8,
					"snapshot_id":          "",
					"tags":                 null,
					"type":                 "gp2",
				},
				"before_sensitive": {},
			},
			"mode":          "managed",
			"name":          "unencrypted",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_ebs_volume",
		},
		{
			"address": "module.elb_http.module.elb.aws_elb.this[0]",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"access_logs": [],
					"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
					"availability_zones": [
						"us-west-1b",
						"us-west-1c",
					],
					"connection_draining":         false,
					"connection_draining_timeout": 300,
					"cross_zone_load_balancing":   true,
					"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
					"health_check": [
						{
							"healthy_threshold":   3,
							"interval":            10,
							"target":              "HTTP:80/index.html",
							"timeout":             5,
							"unhealthy_threshold": 10,
						},
					],
					"id":           "lb-erU-project-alpha-dev",
					"idle_timeout": 60,
					"instances": [
						"i-016765c89b917b799",
						"i-03b9dd825ffb52b7c",
					],
					"internal": false,
					"listener": [
						{
							"instance_port":      80,
							"instance_protocol":  "http",
							"lb_port":            80,
							"lb_protocol":        "http",
							"ssl_certificate_id": "",
						},
					],
					"name":        "lb-erU-project-alpha-dev",
					"name_prefix": null,
					"security_groups": [
						"sg-040d291a0f6288c7d",
					],
					"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
					"source_security_group_id": "sg-040d291a0f6288c7d",
					"subnets": [
						"subnet-0668e14c98636a8ec",
						"subnet-0b017cf7e24e4b3ff",
					],
					"tags": {
						"Name":        "lb-erU-project-alpha-dev",
						"environment": "development",
						"project":     "project-alpha",
					},
					"zone_id": "Z368ELLRRE2KJ0",
				},
				"after_sensitive": {
					"access_logs": [],
					"availability_zones": [
						false,
						false,
					],
					"health_check": [
						{},
					],
					"instances": [
						false,
						false,
					],
					"listener": [
						{},
					],
					"security_groups": [
						false,
					],
					"subnets": [
						false,
						false,
					],
					"tags": {},
				},
				"after_unknown": {},
				"before": {
					"access_logs": [],
					"arn":         "arn:aws:elasticloadbalancing:us-west-1:737366052617:loadbalancer/lb-erU-project-alpha-dev",
					"availability_zones": [
						"us-west-1b",
						"us-west-1c",
					],
					"connection_draining":         false,
					"connection_draining_timeout": 300,
					"cross_zone_load_balancing":   true,
					"dns_name":                    "lb-erU-project-alpha-dev-481306123.us-west-1.elb.amazonaws.com",
					"health_check": [
						{
							"healthy_threshold":   3,
							"interval":            10,
							"target":              "HTTP:80/index.html",
							"timeout":             5,
							"unhealthy_threshold": 10,
						},
					],
					"id":           "lb-erU-project-alpha-dev",
					"idle_timeout": 60,
					"instances": [
						"i-016765c89b917b799",
						"i-03b9dd825ffb52b7c",
						"i-0c70da708d882d8f5",
					],
					"internal": false,
					"listener": [
						{
							"instance_port":      80,
							"instance_protocol":  "http",
							"lb_port":            80,
							"lb_protocol":        "http",
							"ssl_certificate_id": "",
						},
					],
					"name":        "lb-erU-project-alpha-dev",
					"name_prefix": null,
					"security_groups": [
						"sg-040d291a0f6288c7d",
					],
					"source_security_group":    "737366052617/lb-sg-project-alpha-dev-20251002133440267800000002",
					"source_security_group_id": "sg-040d291a0f6288c7d",
					"subnets": [
						"subnet-0668e14c98636a8ec",
						"subnet-0b017cf7e24e4b3ff",
					],
					"tags": {
						"Name":        "lb-erU-project-alpha-dev",
						"environment": "development",
						"project":     "project-alpha",
					},
					"zone_id": "Z368ELLRRE2KJ0",
				},
				"before_sensitive": {
					"access_logs": [],
					"availability_zones": [
						false,
						false,
					],
					"health_check": [
						{},
					],
					"instances": [
						false,
						false,
						false,
					],
					"listener": [
						{},
					],
					"security_groups": [
						false,
					],
					"subnets": [
						false,
						false,
					],
					"tags": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.elb_http.module.elb",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_elb",
		},
	],
	"terraform_version": "1.13.3",
	"timestamp":         "2025-10-02T18:25:15Z",
	"variables": {
		"instance_count": {
			"value": "2",
		},
		"instance_type": {
			"value": "t2.micro",
		},
	},
}
