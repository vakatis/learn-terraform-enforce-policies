import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"constant_value": "us-west-1",
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
	"module.elb_http.module.elb:aws": {
		"alias":               "",
		"config":              {},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "module.elb_http.module.elb",
		"name":                "aws",
		"provider_config_key": "module.elb_http.module.elb:aws",
		"version_constraint":  "",
	},
	"module.elb_http.module.elb_attachment:aws": {
		"alias":               "",
		"config":              {},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "module.elb_http.module.elb_attachment",
		"name":                "aws",
		"provider_config_key": "module.elb_http.module.elb_attachment:aws",
		"version_constraint":  "",
	},
	"random": {
		"alias":               "",
		"config":              {},
		"full_name":           "registry.terraform.io/hashicorp/random",
		"module_address":      "",
		"name":                "random",
		"provider_config_key": "random",
		"version_constraint":  "",
	},
}

resources = {
	"aws_ebs_volume.unencrypted": {
		"address": "aws_ebs_volume.unencrypted",
		"config": {
			"availability_zone": {
				"constant_value": "us-west-1b",
			},
			"encrypted": {
				"constant_value": true,
			},
			"size": {
				"constant_value": 8,
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "unencrypted",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_ebs_volume",
	},
	"data.aws_availability_zones.available": {
		"address": "data.aws_availability_zones.available",
		"config": {
			"state": {
				"constant_value": "available",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "",
		"name":                "available",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_availability_zones",
	},
	"module.app_security_group.module.sg.aws_security_group.this": {
		"address": "module.app_security_group.module.sg.aws_security_group.this",
		"config": {
			"description": {
				"references": [
					"var.description",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"revoke_rules_on_delete": {
				"references": [
					"var.revoke_rules_on_delete",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
				],
			},
			"vpc_id": {
				"references": [
					"var.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.use_name_prefix",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "this",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group",
	},
	"module.app_security_group.module.sg.aws_security_group.this_name_prefix": {
		"address": "module.app_security_group.module.sg.aws_security_group.this_name_prefix",
		"config": {
			"description": {
				"references": [
					"var.description",
				],
			},
			"name_prefix": {
				"references": [
					"var.name",
				],
			},
			"revoke_rules_on_delete": {
				"references": [
					"var.revoke_rules_on_delete",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
				],
			},
			"vpc_id": {
				"references": [
					"var.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.use_name_prefix",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "this_name_prefix",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_egress_rules": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_egress_rules",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.egress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.rules",
					"var.computed_egress_rules",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.rules",
					"var.computed_egress_rules",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.rules",
					"var.computed_egress_rules",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.rules",
					"var.computed_egress_rules",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_egress_rules",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
					"var.egress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_cidr_blocks",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_with_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_egress_with_cidr_blocks",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks",
		"config": {
			"description": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_with_ipv6_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_egress_with_ipv6_cidr_blocks",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_egress_with_self": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_egress_with_self",
		"config": {
			"description": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
					"var.rules",
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
					"var.rules",
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"self": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
					"var.rules",
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_with_self",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_egress_with_self",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id",
		"config": {
			"description": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"source_security_group_id": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_with_source_security_group_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_egress_with_source_security_group_id",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_rules": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_rules",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.ingress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.rules",
					"var.computed_ingress_rules",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.rules",
					"var.computed_ingress_rules",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.rules",
					"var.computed_ingress_rules",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.rules",
					"var.computed_ingress_rules",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_ingress_rules",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
					"var.ingress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_with_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_ingress_with_cidr_blocks",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks",
		"config": {
			"description": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_with_ipv6_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_ingress_with_ipv6_cidr_blocks",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self",
		"config": {
			"description": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"self": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_with_self",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_ingress_with_self",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id",
		"config": {
			"description": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"source_security_group_id": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_with_source_security_group_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "computed_ingress_with_source_security_group_id",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.egress_rules": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.egress_rules",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.egress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.rules",
					"var.egress_rules",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.rules",
					"var.egress_rules",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.rules",
					"var.egress_rules",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.rules",
					"var.egress_rules",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "egress_rules",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
					"var.egress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_cidr_blocks",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_with_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "egress_with_cidr_blocks",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks",
		"config": {
			"description": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_with_ipv6_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "egress_with_ipv6_cidr_blocks",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.egress_with_self": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.egress_with_self",
		"config": {
			"description": {
				"references": [
					"var.egress_with_self",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.egress_with_self",
					"count.index",
					"var.rules",
					"var.egress_with_self",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.egress_with_self",
					"count.index",
					"var.rules",
					"var.egress_with_self",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"self": {
				"references": [
					"var.egress_with_self",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.egress_with_self",
					"count.index",
					"var.rules",
					"var.egress_with_self",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_with_self",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "egress_with_self",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id",
		"config": {
			"description": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"source_security_group_id": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_with_source_security_group_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "egress_with_source_security_group_id",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_rules": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_rules",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.ingress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.rules",
					"var.ingress_rules",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.rules",
					"var.ingress_rules",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.rules",
					"var.ingress_rules",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.rules",
					"var.ingress_rules",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "ingress_rules",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
					"var.ingress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_with_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "ingress_with_cidr_blocks",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks",
		"config": {
			"description": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_with_ipv6_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "ingress_with_ipv6_cidr_blocks",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_with_self": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_with_self",
		"config": {
			"description": {
				"references": [
					"var.ingress_with_self",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.ingress_with_self",
					"count.index",
					"var.rules",
					"var.ingress_with_self",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.ingress_with_self",
					"count.index",
					"var.rules",
					"var.ingress_with_self",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"self": {
				"references": [
					"var.ingress_with_self",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.ingress_with_self",
					"count.index",
					"var.rules",
					"var.ingress_with_self",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_with_self",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "ingress_with_self",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.app_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id": {
		"address": "module.app_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id",
		"config": {
			"description": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"source_security_group_id": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_with_source_security_group_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.app_security_group.module.sg",
		"name":                "ingress_with_source_security_group_id",
		"provider_config_key": "module.app_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.ec2_instances.aws_instance.app": {
		"address": "module.ec2_instances.aws_instance.app",
		"config": {
			"ami": {
				"references": [
					"data.aws_ami.amazon_linux.id",
					"data.aws_ami.amazon_linux",
				],
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"subnet_id": {
				"references": [
					"var.subnet_ids",
					"count.index",
					"var.subnet_ids",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
			"user_data": {
				"constant_value": "#!/bin/bash\nsudo yum update -y\nsudo yum install httpd -y\nsudo systemctl enable httpd\nsudo systemctl start httpd\necho \"<html><body><div>Hello, world!</div></body></html>\" > /var/www/html/index.html\n",
			},
			"vpc_security_group_ids": {
				"references": [
					"var.security_group_ids",
				],
			},
		},
		"count": {
			"references": [
				"var.instance_count",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.ec2_instances",
		"name":                "app",
		"provider_config_key": "module.ec2_instances:aws",
		"provisioners":        [],
		"type":                "aws_instance",
	},
	"module.ec2_instances.data.aws_ami.amazon_linux": {
		"address": "module.ec2_instances.data.aws_ami.amazon_linux",
		"config": {
			"filter": [
				{
					"name": {
						"constant_value": "name",
					},
					"values": {
						"constant_value": [
							"amzn2-ami-hvm-*-x86_64-gp2",
						],
					},
				},
			],
			"most_recent": {
				"constant_value": true,
			},
			"owners": {
				"constant_value": [
					"amazon",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.ec2_instances",
		"name":                "amazon_linux",
		"provider_config_key": "module.ec2_instances:aws",
		"provisioners":        [],
		"type":                "aws_ami",
	},
	"module.elb_http.module.elb.aws_elb.this": {
		"address": "module.elb_http.module.elb.aws_elb.this",
		"config": {
			"connection_draining": {
				"references": [
					"var.connection_draining",
				],
			},
			"connection_draining_timeout": {
				"references": [
					"var.connection_draining_timeout",
				],
			},
			"cross_zone_load_balancing": {
				"references": [
					"var.cross_zone_load_balancing",
				],
			},
			"health_check": [
				{
					"healthy_threshold": {
						"references": [
							"var.health_check",
						],
					},
					"interval": {
						"references": [
							"var.health_check",
						],
					},
					"target": {
						"references": [
							"var.health_check",
						],
					},
					"timeout": {
						"references": [
							"var.health_check",
						],
					},
					"unhealthy_threshold": {
						"references": [
							"var.health_check",
						],
					},
				},
			],
			"idle_timeout": {
				"references": [
					"var.idle_timeout",
				],
			},
			"internal": {
				"references": [
					"var.internal",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"name_prefix": {
				"references": [
					"var.name_prefix",
				],
			},
			"security_groups": {
				"references": [
					"var.security_groups",
				],
			},
			"subnets": {
				"references": [
					"var.subnets",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.name",
				],
			},
		},
		"count": {
			"references": [
				"var.create_elb",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.elb_http.module.elb",
		"name":                "this",
		"provider_config_key": "module.elb_http.module.elb:aws",
		"provisioners":        [],
		"type":                "aws_elb",
	},
	"module.elb_http.module.elb_attachment.aws_elb_attachment.this": {
		"address": "module.elb_http.module.elb_attachment.aws_elb_attachment.this",
		"config": {
			"elb": {
				"references": [
					"var.elb",
				],
			},
			"instance": {
				"references": [
					"var.instances",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_attachment",
				"var.number_of_instances",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.elb_http.module.elb_attachment",
		"name":                "this",
		"provider_config_key": "module.elb_http.module.elb_attachment:aws",
		"provisioners":        [],
		"type":                "aws_elb_attachment",
	},
	"module.lb_security_group.module.sg.aws_security_group.this": {
		"address": "module.lb_security_group.module.sg.aws_security_group.this",
		"config": {
			"description": {
				"references": [
					"var.description",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"revoke_rules_on_delete": {
				"references": [
					"var.revoke_rules_on_delete",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
				],
			},
			"vpc_id": {
				"references": [
					"var.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.use_name_prefix",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "this",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group",
	},
	"module.lb_security_group.module.sg.aws_security_group.this_name_prefix": {
		"address": "module.lb_security_group.module.sg.aws_security_group.this_name_prefix",
		"config": {
			"description": {
				"references": [
					"var.description",
				],
			},
			"name_prefix": {
				"references": [
					"var.name",
				],
			},
			"revoke_rules_on_delete": {
				"references": [
					"var.revoke_rules_on_delete",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
				],
			},
			"vpc_id": {
				"references": [
					"var.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.use_name_prefix",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "this_name_prefix",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_rules": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_rules",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.egress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.rules",
					"var.computed_egress_rules",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.rules",
					"var.computed_egress_rules",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.rules",
					"var.computed_egress_rules",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.rules",
					"var.computed_egress_rules",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_egress_rules",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
					"var.egress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_cidr_blocks",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_with_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_egress_with_cidr_blocks",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks",
		"config": {
			"description": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_with_ipv6_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_egress_with_ipv6_cidr_blocks",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_with_self": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_with_self",
		"config": {
			"description": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
					"var.rules",
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
					"var.rules",
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"self": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.computed_egress_with_self",
					"count.index",
					"var.rules",
					"var.computed_egress_with_self",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_with_self",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_egress_with_self",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id",
		"config": {
			"description": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"source_security_group_id": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_egress_with_source_security_group_id",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_egress_with_source_security_group_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_egress_with_source_security_group_id",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_rules": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_rules",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.ingress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.rules",
					"var.computed_ingress_rules",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.rules",
					"var.computed_ingress_rules",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.rules",
					"var.computed_ingress_rules",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.rules",
					"var.computed_ingress_rules",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_ingress_rules",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
					"var.ingress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_with_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_ingress_with_cidr_blocks",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks",
		"config": {
			"description": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_with_ipv6_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_ingress_with_ipv6_cidr_blocks",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self",
		"config": {
			"description": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"self": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.computed_ingress_with_self",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_self",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_with_self",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_ingress_with_self",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id",
		"config": {
			"description": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"source_security_group_id": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.computed_ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.number_of_computed_ingress_with_source_security_group_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "computed_ingress_with_source_security_group_id",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.egress_rules": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.egress_rules",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.egress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.rules",
					"var.egress_rules",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.rules",
					"var.egress_rules",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.rules",
					"var.egress_rules",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.rules",
					"var.egress_rules",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "egress_rules",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
					"var.egress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_cidr_blocks",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.egress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_with_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "egress_with_cidr_blocks",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks",
		"config": {
			"description": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.egress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_with_ipv6_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "egress_with_ipv6_cidr_blocks",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.egress_with_self": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.egress_with_self",
		"config": {
			"description": {
				"references": [
					"var.egress_with_self",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.egress_with_self",
					"count.index",
					"var.rules",
					"var.egress_with_self",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.egress_with_self",
					"count.index",
					"var.rules",
					"var.egress_with_self",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"self": {
				"references": [
					"var.egress_with_self",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.egress_with_self",
					"count.index",
					"var.rules",
					"var.egress_with_self",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_with_self",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "egress_with_self",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id",
		"config": {
			"description": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"source_security_group_id": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.egress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.egress_with_source_security_group_id",
					"count.index",
				],
			},
			"type": {
				"constant_value": "egress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.egress_with_source_security_group_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "egress_with_source_security_group_id",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_rules",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.ingress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.rules",
					"var.ingress_rules",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.rules",
					"var.ingress_rules",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.rules",
					"var.ingress_rules",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.rules",
					"var.ingress_rules",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "ingress_rules",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks",
		"config": {
			"cidr_blocks": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
					"var.ingress_cidr_blocks",
				],
			},
			"description": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.ingress_with_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_with_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "ingress_with_cidr_blocks",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks",
		"config": {
			"description": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"ipv6_cidr_blocks": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"to_port": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
					"var.rules",
					"var.ingress_with_ipv6_cidr_blocks",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_with_ipv6_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "ingress_with_ipv6_cidr_blocks",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_self": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_self",
		"config": {
			"description": {
				"references": [
					"var.ingress_with_self",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.ingress_with_self",
					"count.index",
					"var.rules",
					"var.ingress_with_self",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.ingress_with_self",
					"count.index",
					"var.rules",
					"var.ingress_with_self",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"self": {
				"references": [
					"var.ingress_with_self",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.ingress_with_self",
					"count.index",
					"var.rules",
					"var.ingress_with_self",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_with_self",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "ingress_with_self",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id": {
		"address": "module.lb_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id",
		"config": {
			"description": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"from_port": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"protocol": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"security_group_id": {
				"references": [
					"local.this_sg_id",
				],
			},
			"source_security_group_id": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.ingress_with_source_security_group_id",
					"count.index",
					"var.rules",
					"var.ingress_with_source_security_group_id",
					"count.index",
				],
			},
			"type": {
				"constant_value": "ingress",
			},
		},
		"count": {
			"references": [
				"var.create",
				"var.ingress_with_source_security_group_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.lb_security_group.module.sg",
		"name":                "ingress_with_source_security_group_id",
		"provider_config_key": "module.lb_security_group.module.sg:aws",
		"provisioners":        [],
		"type":                "aws_security_group_rule",
	},
	"module.vpc.aws_cloudwatch_log_group.flow_log": {
		"address": "module.vpc.aws_cloudwatch_log_group.flow_log",
		"config": {
			"kms_key_id": {
				"references": [
					"var.flow_log_cloudwatch_log_group_kms_key_id",
				],
			},
			"name": {
				"references": [
					"var.flow_log_cloudwatch_log_group_name_prefix",
					"local.vpc_id",
				],
			},
			"retention_in_days": {
				"references": [
					"var.flow_log_cloudwatch_log_group_retention_in_days",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.vpc_flow_log_tags",
				],
			},
		},
		"count": {
			"references": [
				"local.create_flow_log_cloudwatch_log_group",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "flow_log",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_cloudwatch_log_group",
	},
	"module.vpc.aws_customer_gateway.this": {
		"address": "module.vpc.aws_customer_gateway.this",
		"config": {
			"bgp_asn": {
				"references": [
					"each.value[\"bgp_asn\"]",
					"each.value",
				],
			},
			"ip_address": {
				"references": [
					"each.value[\"ip_address\"]",
					"each.value",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"each.key",
					"var.tags",
					"var.customer_gateway_tags",
				],
			},
			"type": {
				"constant_value": "ipsec.1",
			},
		},
		"count":      {},
		"depends_on": [],
		"for_each": {
			"references": [
				"var.customer_gateways",
			],
		},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_customer_gateway",
	},
	"module.vpc.aws_db_subnet_group.database": {
		"address": "module.vpc.aws_db_subnet_group.database",
		"config": {
			"description": {
				"references": [
					"var.name",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"subnet_ids": {
				"references": [
					"aws_subnet.database",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
					"var.database_subnet_group_tags",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.database_subnets",
				"var.create_database_subnet_group",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_db_subnet_group",
	},
	"module.vpc.aws_default_network_acl.this": {
		"address": "module.vpc.aws_default_network_acl.this",
		"config": {
			"default_network_acl_id": {
				"references": [
					"aws_vpc.this",
				],
			},
			"subnet_ids": {
				"references": [
					"aws_subnet.public",
					"aws_subnet.private",
					"aws_subnet.intra",
					"aws_subnet.database",
					"aws_subnet.redshift",
					"aws_subnet.elasticache",
					"aws_network_acl.public",
					"aws_network_acl.private",
					"aws_network_acl.intra",
					"aws_network_acl.database",
					"aws_network_acl.redshift",
					"aws_network_acl.elasticache",
				],
			},
			"tags": {
				"references": [
					"var.default_network_acl_name",
					"var.tags",
					"var.default_network_acl_tags",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.manage_default_network_acl",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_default_network_acl",
	},
	"module.vpc.aws_default_security_group.this": {
		"address": "module.vpc.aws_default_security_group.this",
		"config": {
			"tags": {
				"references": [
					"var.default_security_group_name",
					"var.tags",
					"var.default_security_group_tags",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.this[0].id",
					"aws_vpc.this[0]",
					"aws_vpc.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.manage_default_security_group",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_default_security_group",
	},
	"module.vpc.aws_default_vpc.this": {
		"address": "module.vpc.aws_default_vpc.this",
		"config": {
			"enable_classiclink": {
				"references": [
					"var.default_vpc_enable_classiclink",
				],
			},
			"enable_dns_hostnames": {
				"references": [
					"var.default_vpc_enable_dns_hostnames",
				],
			},
			"enable_dns_support": {
				"references": [
					"var.default_vpc_enable_dns_support",
				],
			},
			"tags": {
				"references": [
					"var.default_vpc_name",
					"var.tags",
					"var.default_vpc_tags",
				],
			},
		},
		"count": {
			"references": [
				"var.manage_default_vpc",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_default_vpc",
	},
	"module.vpc.aws_egress_only_internet_gateway.this": {
		"address": "module.vpc.aws_egress_only_internet_gateway.this",
		"config": {
			"tags": {
				"references": [
					"var.name",
					"var.tags",
					"var.igw_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_egress_only_igw",
				"var.enable_ipv6",
				"local.max_subnet_length",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_egress_only_internet_gateway",
	},
	"module.vpc.aws_eip.nat": {
		"address": "module.vpc.aws_eip.nat",
		"config": {
			"tags": {
				"references": [
					"var.name",
					"var.azs",
					"var.single_nat_gateway",
					"count.index",
					"var.tags",
					"var.nat_eip_tags",
				],
			},
			"vpc": {
				"constant_value": true,
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_nat_gateway",
				"var.reuse_nat_ips",
				"local.nat_gateway_count",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "nat",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_eip",
	},
	"module.vpc.aws_elasticache_subnet_group.elasticache": {
		"address": "module.vpc.aws_elasticache_subnet_group.elasticache",
		"config": {
			"description": {
				"references": [
					"var.name",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"subnet_ids": {
				"references": [
					"aws_subnet.elasticache",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.elasticache_subnets",
				"var.create_elasticache_subnet_group",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticache",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_elasticache_subnet_group",
	},
	"module.vpc.aws_flow_log.this": {
		"address": "module.vpc.aws_flow_log.this",
		"config": {
			"iam_role_arn": {
				"references": [
					"local.flow_log_iam_role_arn",
				],
			},
			"log_destination": {
				"references": [
					"local.flow_log_destination_arn",
				],
			},
			"log_destination_type": {
				"references": [
					"var.flow_log_destination_type",
				],
			},
			"log_format": {
				"references": [
					"var.flow_log_log_format",
				],
			},
			"max_aggregation_interval": {
				"references": [
					"var.flow_log_max_aggregation_interval",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.vpc_flow_log_tags",
				],
			},
			"traffic_type": {
				"references": [
					"var.flow_log_traffic_type",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"local.enable_flow_log",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_flow_log",
	},
	"module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch": {
		"address": "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch",
		"config": {
			"name_prefix": {
				"constant_value": "vpc-flow-log-to-cloudwatch-",
			},
			"policy": {
				"references": [
					"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
					"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
					"data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
				],
			},
		},
		"count": {
			"references": [
				"local.create_flow_log_cloudwatch_iam_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "vpc_flow_log_cloudwatch",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.vpc.aws_iam_role.vpc_flow_log_cloudwatch": {
		"address": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch",
		"config": {
			"assume_role_policy": {
				"references": [
					"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
					"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
					"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
				],
			},
			"name_prefix": {
				"constant_value": "vpc-flow-log-role-",
			},
			"tags": {
				"references": [
					"var.tags",
					"var.vpc_flow_log_tags",
				],
			},
		},
		"count": {
			"references": [
				"local.create_flow_log_cloudwatch_iam_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "vpc_flow_log_cloudwatch",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch": {
		"address": "module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
		"config": {
			"policy_arn": {
				"references": [
					"aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
					"aws_iam_policy.vpc_flow_log_cloudwatch[0]",
					"aws_iam_policy.vpc_flow_log_cloudwatch",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.vpc_flow_log_cloudwatch[0].name",
					"aws_iam_role.vpc_flow_log_cloudwatch[0]",
					"aws_iam_role.vpc_flow_log_cloudwatch",
				],
			},
		},
		"count": {
			"references": [
				"local.create_flow_log_cloudwatch_iam_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "vpc_flow_log_cloudwatch",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.vpc.aws_internet_gateway.this": {
		"address": "module.vpc.aws_internet_gateway.this",
		"config": {
			"tags": {
				"references": [
					"var.name",
					"var.tags",
					"var.igw_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_igw",
				"var.public_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_internet_gateway",
	},
	"module.vpc.aws_nat_gateway.this": {
		"address": "module.vpc.aws_nat_gateway.this",
		"config": {
			"allocation_id": {
				"references": [
					"local.nat_gateway_ips",
					"var.single_nat_gateway",
					"count.index",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.public",
					"var.single_nat_gateway",
					"count.index",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.azs",
					"var.single_nat_gateway",
					"count.index",
					"var.tags",
					"var.nat_gateway_tags",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_nat_gateway",
				"local.nat_gateway_count",
			],
		},
		"depends_on": [
			"aws_internet_gateway.this",
		],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_nat_gateway",
	},
	"module.vpc.aws_network_acl.database": {
		"address": "module.vpc.aws_network_acl.database",
		"config": {
			"subnet_ids": {
				"references": [
					"aws_subnet.database",
				],
			},
			"tags": {
				"references": [
					"var.database_subnet_suffix",
					"var.name",
					"var.tags",
					"var.database_acl_tags",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.database_dedicated_network_acl",
				"var.database_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl",
	},
	"module.vpc.aws_network_acl.elasticache": {
		"address": "module.vpc.aws_network_acl.elasticache",
		"config": {
			"subnet_ids": {
				"references": [
					"aws_subnet.elasticache",
				],
			},
			"tags": {
				"references": [
					"var.elasticache_subnet_suffix",
					"var.name",
					"var.tags",
					"var.elasticache_acl_tags",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.elasticache_dedicated_network_acl",
				"var.elasticache_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticache",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl",
	},
	"module.vpc.aws_network_acl.intra": {
		"address": "module.vpc.aws_network_acl.intra",
		"config": {
			"subnet_ids": {
				"references": [
					"aws_subnet.intra",
				],
			},
			"tags": {
				"references": [
					"var.intra_subnet_suffix",
					"var.name",
					"var.tags",
					"var.intra_acl_tags",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.intra_dedicated_network_acl",
				"var.intra_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "intra",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl",
	},
	"module.vpc.aws_network_acl.private": {
		"address": "module.vpc.aws_network_acl.private",
		"config": {
			"subnet_ids": {
				"references": [
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"var.private_subnet_suffix",
					"var.name",
					"var.tags",
					"var.private_acl_tags",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.private_dedicated_network_acl",
				"var.private_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl",
	},
	"module.vpc.aws_network_acl.public": {
		"address": "module.vpc.aws_network_acl.public",
		"config": {
			"subnet_ids": {
				"references": [
					"aws_subnet.public",
				],
			},
			"tags": {
				"references": [
					"var.public_subnet_suffix",
					"var.name",
					"var.tags",
					"var.public_acl_tags",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.public_dedicated_network_acl",
				"var.public_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl",
	},
	"module.vpc.aws_network_acl.redshift": {
		"address": "module.vpc.aws_network_acl.redshift",
		"config": {
			"subnet_ids": {
				"references": [
					"aws_subnet.redshift",
				],
			},
			"tags": {
				"references": [
					"var.redshift_subnet_suffix",
					"var.name",
					"var.tags",
					"var.redshift_acl_tags",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.redshift_dedicated_network_acl",
				"var.redshift_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "redshift",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl",
	},
	"module.vpc.aws_network_acl_rule.database_inbound": {
		"address": "module.vpc.aws_network_acl_rule.database_inbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.database_inbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": false,
			},
			"from_port": {
				"references": [
					"var.database_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.database_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.database_inbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.database_inbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.database[0].id",
					"aws_network_acl.database[0]",
					"aws_network_acl.database",
				],
			},
			"protocol": {
				"references": [
					"var.database_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.database_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.database_inbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.database_inbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.database_dedicated_network_acl",
				"var.database_subnets",
				"var.database_inbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database_inbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.database_outbound": {
		"address": "module.vpc.aws_network_acl_rule.database_outbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.database_outbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": true,
			},
			"from_port": {
				"references": [
					"var.database_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.database_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.database_outbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.database_outbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.database[0].id",
					"aws_network_acl.database[0]",
					"aws_network_acl.database",
				],
			},
			"protocol": {
				"references": [
					"var.database_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.database_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.database_outbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.database_outbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.database_dedicated_network_acl",
				"var.database_subnets",
				"var.database_outbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database_outbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.elasticache_inbound": {
		"address": "module.vpc.aws_network_acl_rule.elasticache_inbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.elasticache_inbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": false,
			},
			"from_port": {
				"references": [
					"var.elasticache_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.elasticache_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.elasticache_inbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.elasticache_inbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.elasticache[0].id",
					"aws_network_acl.elasticache[0]",
					"aws_network_acl.elasticache",
				],
			},
			"protocol": {
				"references": [
					"var.elasticache_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.elasticache_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.elasticache_inbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.elasticache_inbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.elasticache_dedicated_network_acl",
				"var.elasticache_subnets",
				"var.elasticache_inbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticache_inbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.elasticache_outbound": {
		"address": "module.vpc.aws_network_acl_rule.elasticache_outbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.elasticache_outbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": true,
			},
			"from_port": {
				"references": [
					"var.elasticache_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.elasticache_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.elasticache_outbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.elasticache_outbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.elasticache[0].id",
					"aws_network_acl.elasticache[0]",
					"aws_network_acl.elasticache",
				],
			},
			"protocol": {
				"references": [
					"var.elasticache_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.elasticache_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.elasticache_outbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.elasticache_outbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.elasticache_dedicated_network_acl",
				"var.elasticache_subnets",
				"var.elasticache_outbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticache_outbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.intra_inbound": {
		"address": "module.vpc.aws_network_acl_rule.intra_inbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.intra_inbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": false,
			},
			"from_port": {
				"references": [
					"var.intra_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.intra_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.intra_inbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.intra_inbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.intra[0].id",
					"aws_network_acl.intra[0]",
					"aws_network_acl.intra",
				],
			},
			"protocol": {
				"references": [
					"var.intra_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.intra_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.intra_inbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.intra_inbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.intra_dedicated_network_acl",
				"var.intra_subnets",
				"var.intra_inbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "intra_inbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.intra_outbound": {
		"address": "module.vpc.aws_network_acl_rule.intra_outbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.intra_outbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": true,
			},
			"from_port": {
				"references": [
					"var.intra_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.intra_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.intra_outbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.intra_outbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.intra[0].id",
					"aws_network_acl.intra[0]",
					"aws_network_acl.intra",
				],
			},
			"protocol": {
				"references": [
					"var.intra_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.intra_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.intra_outbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.intra_outbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.intra_dedicated_network_acl",
				"var.intra_subnets",
				"var.intra_outbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "intra_outbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.private_inbound": {
		"address": "module.vpc.aws_network_acl_rule.private_inbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.private_inbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": false,
			},
			"from_port": {
				"references": [
					"var.private_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.private_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.private_inbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.private_inbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.private[0].id",
					"aws_network_acl.private[0]",
					"aws_network_acl.private",
				],
			},
			"protocol": {
				"references": [
					"var.private_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.private_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.private_inbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.private_inbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.private_dedicated_network_acl",
				"var.private_subnets",
				"var.private_inbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private_inbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.private_outbound": {
		"address": "module.vpc.aws_network_acl_rule.private_outbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.private_outbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": true,
			},
			"from_port": {
				"references": [
					"var.private_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.private_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.private_outbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.private_outbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.private[0].id",
					"aws_network_acl.private[0]",
					"aws_network_acl.private",
				],
			},
			"protocol": {
				"references": [
					"var.private_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.private_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.private_outbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.private_outbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.private_dedicated_network_acl",
				"var.private_subnets",
				"var.private_outbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private_outbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.public_inbound": {
		"address": "module.vpc.aws_network_acl_rule.public_inbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.public_inbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": false,
			},
			"from_port": {
				"references": [
					"var.public_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.public_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.public_inbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.public_inbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.public[0].id",
					"aws_network_acl.public[0]",
					"aws_network_acl.public",
				],
			},
			"protocol": {
				"references": [
					"var.public_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.public_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.public_inbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.public_inbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.public_dedicated_network_acl",
				"var.public_subnets",
				"var.public_inbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public_inbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.public_outbound": {
		"address": "module.vpc.aws_network_acl_rule.public_outbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.public_outbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": true,
			},
			"from_port": {
				"references": [
					"var.public_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.public_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.public_outbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.public_outbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.public[0].id",
					"aws_network_acl.public[0]",
					"aws_network_acl.public",
				],
			},
			"protocol": {
				"references": [
					"var.public_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.public_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.public_outbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.public_outbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.public_dedicated_network_acl",
				"var.public_subnets",
				"var.public_outbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public_outbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.redshift_inbound": {
		"address": "module.vpc.aws_network_acl_rule.redshift_inbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.redshift_inbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": false,
			},
			"from_port": {
				"references": [
					"var.redshift_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.redshift_inbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.redshift_inbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.redshift_inbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.redshift[0].id",
					"aws_network_acl.redshift[0]",
					"aws_network_acl.redshift",
				],
			},
			"protocol": {
				"references": [
					"var.redshift_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.redshift_inbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.redshift_inbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.redshift_inbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.redshift_dedicated_network_acl",
				"var.redshift_subnets",
				"var.redshift_inbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "redshift_inbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_network_acl_rule.redshift_outbound": {
		"address": "module.vpc.aws_network_acl_rule.redshift_outbound",
		"config": {
			"cidr_block": {
				"references": [
					"var.redshift_outbound_acl_rules",
					"count.index",
				],
			},
			"egress": {
				"constant_value": true,
			},
			"from_port": {
				"references": [
					"var.redshift_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_code": {
				"references": [
					"var.redshift_outbound_acl_rules",
					"count.index",
				],
			},
			"icmp_type": {
				"references": [
					"var.redshift_outbound_acl_rules",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.redshift_outbound_acl_rules",
					"count.index",
				],
			},
			"network_acl_id": {
				"references": [
					"aws_network_acl.redshift[0].id",
					"aws_network_acl.redshift[0]",
					"aws_network_acl.redshift",
				],
			},
			"protocol": {
				"references": [
					"var.redshift_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_action": {
				"references": [
					"var.redshift_outbound_acl_rules",
					"count.index",
				],
			},
			"rule_number": {
				"references": [
					"var.redshift_outbound_acl_rules",
					"count.index",
				],
			},
			"to_port": {
				"references": [
					"var.redshift_outbound_acl_rules",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.redshift_dedicated_network_acl",
				"var.redshift_subnets",
				"var.redshift_outbound_acl_rules",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "redshift_outbound",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_network_acl_rule",
	},
	"module.vpc.aws_redshift_subnet_group.redshift": {
		"address": "module.vpc.aws_redshift_subnet_group.redshift",
		"config": {
			"description": {
				"references": [
					"var.name",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"subnet_ids": {
				"references": [
					"aws_subnet.redshift",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
					"var.redshift_subnet_group_tags",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.redshift_subnets",
				"var.create_redshift_subnet_group",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "redshift",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_redshift_subnet_group",
	},
	"module.vpc.aws_route.database_internet_gateway": {
		"address": "module.vpc.aws_route.database_internet_gateway",
		"config": {
			"destination_cidr_block": {
				"constant_value": "0.0.0.0/0",
			},
			"gateway_id": {
				"references": [
					"aws_internet_gateway.this[0].id",
					"aws_internet_gateway.this[0]",
					"aws_internet_gateway.this",
				],
			},
			"route_table_id": {
				"references": [
					"aws_route_table.database[0].id",
					"aws_route_table.database[0]",
					"aws_route_table.database",
				],
			},
			"timeouts": {
				"constant_value": null,
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_igw",
				"var.create_database_subnet_route_table",
				"var.database_subnets",
				"var.create_database_internet_gateway_route",
				"var.create_database_nat_gateway_route",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database_internet_gateway",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route",
	},
	"module.vpc.aws_route.database_ipv6_egress": {
		"address": "module.vpc.aws_route.database_ipv6_egress",
		"config": {
			"destination_ipv6_cidr_block": {
				"constant_value": "::/0",
			},
			"egress_only_gateway_id": {
				"references": [
					"aws_egress_only_internet_gateway.this[0].id",
					"aws_egress_only_internet_gateway.this[0]",
					"aws_egress_only_internet_gateway.this",
				],
			},
			"route_table_id": {
				"references": [
					"aws_route_table.database[0].id",
					"aws_route_table.database[0]",
					"aws_route_table.database",
				],
			},
			"timeouts": {
				"constant_value": null,
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_egress_only_igw",
				"var.enable_ipv6",
				"var.create_database_subnet_route_table",
				"var.database_subnets",
				"var.create_database_internet_gateway_route",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database_ipv6_egress",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route",
	},
	"module.vpc.aws_route.database_nat_gateway": {
		"address": "module.vpc.aws_route.database_nat_gateway",
		"config": {
			"destination_cidr_block": {
				"constant_value": "0.0.0.0/0",
			},
			"nat_gateway_id": {
				"references": [
					"aws_nat_gateway.this",
					"count.index",
				],
			},
			"route_table_id": {
				"references": [
					"aws_route_table.database",
					"count.index",
				],
			},
			"timeouts": {
				"constant_value": null,
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_database_subnet_route_table",
				"var.database_subnets",
				"var.create_database_internet_gateway_route",
				"var.create_database_nat_gateway_route",
				"var.enable_nat_gateway",
				"local.nat_gateway_count",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database_nat_gateway",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route",
	},
	"module.vpc.aws_route.private_ipv6_egress": {
		"address": "module.vpc.aws_route.private_ipv6_egress",
		"config": {
			"destination_ipv6_cidr_block": {
				"constant_value": "::/0",
			},
			"egress_only_gateway_id": {
				"references": [
					"aws_egress_only_internet_gateway.this",
				],
			},
			"route_table_id": {
				"references": [
					"aws_route_table.private",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_egress_only_igw",
				"var.enable_ipv6",
				"var.private_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private_ipv6_egress",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route",
	},
	"module.vpc.aws_route.private_nat_gateway": {
		"address": "module.vpc.aws_route.private_nat_gateway",
		"config": {
			"destination_cidr_block": {
				"constant_value": "0.0.0.0/0",
			},
			"nat_gateway_id": {
				"references": [
					"aws_nat_gateway.this",
					"count.index",
				],
			},
			"route_table_id": {
				"references": [
					"aws_route_table.private",
					"count.index",
				],
			},
			"timeouts": {
				"constant_value": null,
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_nat_gateway",
				"local.nat_gateway_count",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private_nat_gateway",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route",
	},
	"module.vpc.aws_route.public_internet_gateway": {
		"address": "module.vpc.aws_route.public_internet_gateway",
		"config": {
			"destination_cidr_block": {
				"constant_value": "0.0.0.0/0",
			},
			"gateway_id": {
				"references": [
					"aws_internet_gateway.this[0].id",
					"aws_internet_gateway.this[0]",
					"aws_internet_gateway.this",
				],
			},
			"route_table_id": {
				"references": [
					"aws_route_table.public[0].id",
					"aws_route_table.public[0]",
					"aws_route_table.public",
				],
			},
			"timeouts": {
				"constant_value": null,
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_igw",
				"var.public_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public_internet_gateway",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route",
	},
	"module.vpc.aws_route.public_internet_gateway_ipv6": {
		"address": "module.vpc.aws_route.public_internet_gateway_ipv6",
		"config": {
			"destination_ipv6_cidr_block": {
				"constant_value": "::/0",
			},
			"gateway_id": {
				"references": [
					"aws_internet_gateway.this[0].id",
					"aws_internet_gateway.this[0]",
					"aws_internet_gateway.this",
				],
			},
			"route_table_id": {
				"references": [
					"aws_route_table.public[0].id",
					"aws_route_table.public[0]",
					"aws_route_table.public",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_igw",
				"var.enable_ipv6",
				"var.public_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public_internet_gateway_ipv6",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route",
	},
	"module.vpc.aws_route_table.database": {
		"address": "module.vpc.aws_route_table.database",
		"config": {
			"tags": {
				"references": [
					"var.name",
					"var.database_subnet_suffix",
					"var.tags",
					"var.database_route_table_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_database_subnet_route_table",
				"var.database_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table",
	},
	"module.vpc.aws_route_table.elasticache": {
		"address": "module.vpc.aws_route_table.elasticache",
		"config": {
			"tags": {
				"references": [
					"var.name",
					"var.elasticache_subnet_suffix",
					"var.tags",
					"var.elasticache_route_table_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_elasticache_subnet_route_table",
				"var.elasticache_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticache",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table",
	},
	"module.vpc.aws_route_table.intra": {
		"address": "module.vpc.aws_route_table.intra",
		"config": {
			"tags": {
				"references": [
					"var.name",
					"var.intra_subnet_suffix",
					"var.tags",
					"var.intra_route_table_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.intra_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "intra",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table",
	},
	"module.vpc.aws_route_table.private": {
		"address": "module.vpc.aws_route_table.private",
		"config": {
			"tags": {
				"references": [
					"var.single_nat_gateway",
					"var.name",
					"var.private_subnet_suffix",
					"var.private_subnet_suffix",
					"var.name",
					"var.azs",
					"count.index",
					"var.tags",
					"var.private_route_table_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"local.max_subnet_length",
				"local.nat_gateway_count",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table",
	},
	"module.vpc.aws_route_table.public": {
		"address": "module.vpc.aws_route_table.public",
		"config": {
			"tags": {
				"references": [
					"var.public_subnet_suffix",
					"var.name",
					"var.tags",
					"var.public_route_table_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.public_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table",
	},
	"module.vpc.aws_route_table.redshift": {
		"address": "module.vpc.aws_route_table.redshift",
		"config": {
			"tags": {
				"references": [
					"var.name",
					"var.redshift_subnet_suffix",
					"var.tags",
					"var.redshift_route_table_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.create_redshift_subnet_route_table",
				"var.redshift_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "redshift",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table",
	},
	"module.vpc.aws_route_table_association.database": {
		"address": "module.vpc.aws_route_table_association.database",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.database",
					"aws_route_table.private",
					"var.single_nat_gateway",
					"var.create_database_subnet_route_table",
					"count.index",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.database",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.database_subnets",
				"var.database_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.elasticache": {
		"address": "module.vpc.aws_route_table_association.elasticache",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.elasticache",
					"aws_route_table.private",
					"var.single_nat_gateway",
					"var.create_elasticache_subnet_route_table",
					"count.index",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.elasticache",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.elasticache_subnets",
				"var.elasticache_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticache",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.intra": {
		"address": "module.vpc.aws_route_table_association.intra",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.intra",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.intra",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.intra_subnets",
				"var.intra_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "intra",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.private": {
		"address": "module.vpc.aws_route_table_association.private",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.private",
					"var.single_nat_gateway",
					"count.index",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.private",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.private_subnets",
				"var.private_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public": {
		"address": "module.vpc.aws_route_table_association.public",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.public[0].id",
					"aws_route_table.public[0]",
					"aws_route_table.public",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.public",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.public_subnets",
				"var.public_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.redshift": {
		"address": "module.vpc.aws_route_table_association.redshift",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.redshift",
					"aws_route_table.private",
					"var.single_nat_gateway",
					"var.create_redshift_subnet_route_table",
					"count.index",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.redshift",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.redshift_subnets",
				"var.enable_public_redshift",
				"var.redshift_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "redshift",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.redshift_public": {
		"address": "module.vpc.aws_route_table_association.redshift_public",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.redshift",
					"aws_route_table.public",
					"var.single_nat_gateway",
					"var.create_redshift_subnet_route_table",
					"count.index",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.redshift",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.redshift_subnets",
				"var.enable_public_redshift",
				"var.redshift_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "redshift_public",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_route_table_association",
	},
	"module.vpc.aws_subnet.database": {
		"address": "module.vpc.aws_subnet.database",
		"config": {
			"assign_ipv6_address_on_creation": {
				"references": [
					"var.database_subnet_assign_ipv6_address_on_creation",
					"var.assign_ipv6_address_on_creation",
					"var.database_subnet_assign_ipv6_address_on_creation",
				],
			},
			"availability_zone": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"availability_zone_id": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"cidr_block": {
				"references": [
					"var.database_subnets",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.enable_ipv6",
					"var.database_subnet_ipv6_prefixes",
					"aws_vpc.this[0].ipv6_cidr_block",
					"aws_vpc.this[0]",
					"aws_vpc.this",
					"var.database_subnet_ipv6_prefixes",
					"count.index",
				],
			},
			"tags": {
				"references": [
					"var.database_subnet_suffix",
					"var.name",
					"var.azs",
					"count.index",
					"var.tags",
					"var.database_subnet_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.database_subnets",
				"var.database_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "database",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"module.vpc.aws_subnet.elasticache": {
		"address": "module.vpc.aws_subnet.elasticache",
		"config": {
			"assign_ipv6_address_on_creation": {
				"references": [
					"var.elasticache_subnet_assign_ipv6_address_on_creation",
					"var.assign_ipv6_address_on_creation",
					"var.elasticache_subnet_assign_ipv6_address_on_creation",
				],
			},
			"availability_zone": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"availability_zone_id": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"cidr_block": {
				"references": [
					"var.elasticache_subnets",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.enable_ipv6",
					"var.elasticache_subnet_ipv6_prefixes",
					"aws_vpc.this[0].ipv6_cidr_block",
					"aws_vpc.this[0]",
					"aws_vpc.this",
					"var.elasticache_subnet_ipv6_prefixes",
					"count.index",
				],
			},
			"tags": {
				"references": [
					"var.elasticache_subnet_suffix",
					"var.name",
					"var.azs",
					"count.index",
					"var.tags",
					"var.elasticache_subnet_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.elasticache_subnets",
				"var.elasticache_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticache",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"module.vpc.aws_subnet.intra": {
		"address": "module.vpc.aws_subnet.intra",
		"config": {
			"assign_ipv6_address_on_creation": {
				"references": [
					"var.intra_subnet_assign_ipv6_address_on_creation",
					"var.assign_ipv6_address_on_creation",
					"var.intra_subnet_assign_ipv6_address_on_creation",
				],
			},
			"availability_zone": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"availability_zone_id": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"cidr_block": {
				"references": [
					"var.intra_subnets",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.enable_ipv6",
					"var.intra_subnet_ipv6_prefixes",
					"aws_vpc.this[0].ipv6_cidr_block",
					"aws_vpc.this[0]",
					"aws_vpc.this",
					"var.intra_subnet_ipv6_prefixes",
					"count.index",
				],
			},
			"tags": {
				"references": [
					"var.intra_subnet_suffix",
					"var.name",
					"var.azs",
					"count.index",
					"var.tags",
					"var.intra_subnet_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.intra_subnets",
				"var.intra_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "intra",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"module.vpc.aws_subnet.private": {
		"address": "module.vpc.aws_subnet.private",
		"config": {
			"assign_ipv6_address_on_creation": {
				"references": [
					"var.private_subnet_assign_ipv6_address_on_creation",
					"var.assign_ipv6_address_on_creation",
					"var.private_subnet_assign_ipv6_address_on_creation",
				],
			},
			"availability_zone": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"availability_zone_id": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"cidr_block": {
				"references": [
					"var.private_subnets",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.enable_ipv6",
					"var.private_subnet_ipv6_prefixes",
					"aws_vpc.this[0].ipv6_cidr_block",
					"aws_vpc.this[0]",
					"aws_vpc.this",
					"var.private_subnet_ipv6_prefixes",
					"count.index",
				],
			},
			"tags": {
				"references": [
					"var.private_subnet_suffix",
					"var.name",
					"var.azs",
					"count.index",
					"var.tags",
					"var.private_subnet_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.private_subnets",
				"var.private_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"module.vpc.aws_subnet.public": {
		"address": "module.vpc.aws_subnet.public",
		"config": {
			"assign_ipv6_address_on_creation": {
				"references": [
					"var.public_subnet_assign_ipv6_address_on_creation",
					"var.assign_ipv6_address_on_creation",
					"var.public_subnet_assign_ipv6_address_on_creation",
				],
			},
			"availability_zone": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"availability_zone_id": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"cidr_block": {
				"references": [
					"var.public_subnets",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.enable_ipv6",
					"var.public_subnet_ipv6_prefixes",
					"aws_vpc.this[0].ipv6_cidr_block",
					"aws_vpc.this[0]",
					"aws_vpc.this",
					"var.public_subnet_ipv6_prefixes",
					"count.index",
				],
			},
			"map_public_ip_on_launch": {
				"references": [
					"var.map_public_ip_on_launch",
				],
			},
			"tags": {
				"references": [
					"var.public_subnet_suffix",
					"var.name",
					"var.azs",
					"count.index",
					"var.tags",
					"var.public_subnet_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.public_subnets",
				"var.one_nat_gateway_per_az",
				"var.public_subnets",
				"var.azs",
				"var.public_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"module.vpc.aws_subnet.redshift": {
		"address": "module.vpc.aws_subnet.redshift",
		"config": {
			"assign_ipv6_address_on_creation": {
				"references": [
					"var.redshift_subnet_assign_ipv6_address_on_creation",
					"var.assign_ipv6_address_on_creation",
					"var.redshift_subnet_assign_ipv6_address_on_creation",
				],
			},
			"availability_zone": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"availability_zone_id": {
				"references": [
					"var.azs",
					"count.index",
					"var.azs",
					"count.index",
				],
			},
			"cidr_block": {
				"references": [
					"var.redshift_subnets",
					"count.index",
				],
			},
			"ipv6_cidr_block": {
				"references": [
					"var.enable_ipv6",
					"var.redshift_subnet_ipv6_prefixes",
					"aws_vpc.this[0].ipv6_cidr_block",
					"aws_vpc.this[0]",
					"aws_vpc.this",
					"var.redshift_subnet_ipv6_prefixes",
					"count.index",
				],
			},
			"tags": {
				"references": [
					"var.redshift_subnet_suffix",
					"var.name",
					"var.azs",
					"count.index",
					"var.tags",
					"var.redshift_subnet_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.redshift_subnets",
				"var.redshift_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "redshift",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"module.vpc.aws_vpc.this": {
		"address": "module.vpc.aws_vpc.this",
		"config": {
			"assign_generated_ipv6_cidr_block": {
				"references": [
					"var.enable_ipv6",
				],
			},
			"cidr_block": {
				"references": [
					"var.cidr",
				],
			},
			"enable_classiclink": {
				"references": [
					"var.enable_classiclink",
				],
			},
			"enable_classiclink_dns_support": {
				"references": [
					"var.enable_classiclink_dns_support",
				],
			},
			"enable_dns_hostnames": {
				"references": [
					"var.enable_dns_hostnames",
				],
			},
			"enable_dns_support": {
				"references": [
					"var.enable_dns_support",
				],
			},
			"instance_tenancy": {
				"references": [
					"var.instance_tenancy",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
					"var.vpc_tags",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc",
	},
	"module.vpc.aws_vpc_dhcp_options.this": {
		"address": "module.vpc.aws_vpc_dhcp_options.this",
		"config": {
			"domain_name": {
				"references": [
					"var.dhcp_options_domain_name",
				],
			},
			"domain_name_servers": {
				"references": [
					"var.dhcp_options_domain_name_servers",
				],
			},
			"netbios_name_servers": {
				"references": [
					"var.dhcp_options_netbios_name_servers",
				],
			},
			"netbios_node_type": {
				"references": [
					"var.dhcp_options_netbios_node_type",
				],
			},
			"ntp_servers": {
				"references": [
					"var.dhcp_options_ntp_servers",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
					"var.dhcp_options_tags",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_dhcp_options",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_dhcp_options",
	},
	"module.vpc.aws_vpc_dhcp_options_association.this": {
		"address": "module.vpc.aws_vpc_dhcp_options_association.this",
		"config": {
			"dhcp_options_id": {
				"references": [
					"aws_vpc_dhcp_options.this[0].id",
					"aws_vpc_dhcp_options.this[0]",
					"aws_vpc_dhcp_options.this",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_dhcp_options",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_dhcp_options_association",
	},
	"module.vpc.aws_vpc_endpoint.access_analyzer": {
		"address": "module.vpc.aws_vpc_endpoint.access_analyzer",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.access_analyzer_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.access_analyzer_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.access_analyzer[0].service_name",
					"data.aws_vpc_endpoint_service.access_analyzer[0]",
					"data.aws_vpc_endpoint_service.access_analyzer",
				],
			},
			"subnet_ids": {
				"references": [
					"var.access_analyzer_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_access_analyzer_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "access_analyzer",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.acm_pca": {
		"address": "module.vpc.aws_vpc_endpoint.acm_pca",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.acm_pca_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.acm_pca_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.acm_pca[0].service_name",
					"data.aws_vpc_endpoint_service.acm_pca[0]",
					"data.aws_vpc_endpoint_service.acm_pca",
				],
			},
			"subnet_ids": {
				"references": [
					"var.acm_pca_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_acm_pca_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "acm_pca",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.apigw": {
		"address": "module.vpc.aws_vpc_endpoint.apigw",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.apigw_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.apigw_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.apigw[0].service_name",
					"data.aws_vpc_endpoint_service.apigw[0]",
					"data.aws_vpc_endpoint_service.apigw",
				],
			},
			"subnet_ids": {
				"references": [
					"var.apigw_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_apigw_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "apigw",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.appmesh_envoy_management": {
		"address": "module.vpc.aws_vpc_endpoint.appmesh_envoy_management",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.appmesh_envoy_management_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.appmesh_envoy_management_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.appmesh_envoy_management[0].service_name",
					"data.aws_vpc_endpoint_service.appmesh_envoy_management[0]",
					"data.aws_vpc_endpoint_service.appmesh_envoy_management",
				],
			},
			"subnet_ids": {
				"references": [
					"var.appmesh_envoy_management_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_appmesh_envoy_management_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "appmesh_envoy_management",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.appstream_api": {
		"address": "module.vpc.aws_vpc_endpoint.appstream_api",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.appstream_api_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.appstream_api_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.appstream_api[0].service_name",
					"data.aws_vpc_endpoint_service.appstream_api[0]",
					"data.aws_vpc_endpoint_service.appstream_api",
				],
			},
			"subnet_ids": {
				"references": [
					"var.appstream_api_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_appstream_api_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "appstream_api",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.appstream_streaming": {
		"address": "module.vpc.aws_vpc_endpoint.appstream_streaming",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.appstream_streaming_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.appstream_streaming_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.appstream_streaming[0].service_name",
					"data.aws_vpc_endpoint_service.appstream_streaming[0]",
					"data.aws_vpc_endpoint_service.appstream_streaming",
				],
			},
			"subnet_ids": {
				"references": [
					"var.appstream_streaming_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_appstream_streaming_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "appstream_streaming",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.athena": {
		"address": "module.vpc.aws_vpc_endpoint.athena",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.athena_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.athena_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.athena[0].service_name",
					"data.aws_vpc_endpoint_service.athena[0]",
					"data.aws_vpc_endpoint_service.athena",
				],
			},
			"subnet_ids": {
				"references": [
					"var.athena_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_athena_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "athena",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.auto_scaling_plans": {
		"address": "module.vpc.aws_vpc_endpoint.auto_scaling_plans",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.auto_scaling_plans_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.auto_scaling_plans_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.auto_scaling_plans[0].service_name",
					"data.aws_vpc_endpoint_service.auto_scaling_plans[0]",
					"data.aws_vpc_endpoint_service.auto_scaling_plans",
				],
			},
			"subnet_ids": {
				"references": [
					"var.auto_scaling_plans_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_auto_scaling_plans_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "auto_scaling_plans",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.cloud_directory": {
		"address": "module.vpc.aws_vpc_endpoint.cloud_directory",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.cloud_directory_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.cloud_directory_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.cloud_directory[0].service_name",
					"data.aws_vpc_endpoint_service.cloud_directory[0]",
					"data.aws_vpc_endpoint_service.cloud_directory",
				],
			},
			"subnet_ids": {
				"references": [
					"var.cloud_directory_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_cloud_directory_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "cloud_directory",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.cloudformation": {
		"address": "module.vpc.aws_vpc_endpoint.cloudformation",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.cloudformation_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.cloudformation_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.cloudformation[0].service_name",
					"data.aws_vpc_endpoint_service.cloudformation[0]",
					"data.aws_vpc_endpoint_service.cloudformation",
				],
			},
			"subnet_ids": {
				"references": [
					"var.cloudformation_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_cloudformation_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "cloudformation",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.cloudtrail": {
		"address": "module.vpc.aws_vpc_endpoint.cloudtrail",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.cloudtrail_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.cloudtrail_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.cloudtrail[0].service_name",
					"data.aws_vpc_endpoint_service.cloudtrail[0]",
					"data.aws_vpc_endpoint_service.cloudtrail",
				],
			},
			"subnet_ids": {
				"references": [
					"var.cloudtrail_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_cloudtrail_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "cloudtrail",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.codeartifact_api": {
		"address": "module.vpc.aws_vpc_endpoint.codeartifact_api",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.codeartifact_api_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.codeartifact_api_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.codeartifact_api[0].service_name",
					"data.aws_vpc_endpoint_service.codeartifact_api[0]",
					"data.aws_vpc_endpoint_service.codeartifact_api",
				],
			},
			"subnet_ids": {
				"references": [
					"var.codeartifact_api_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codeartifact_api_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "codeartifact_api",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.codeartifact_repositories": {
		"address": "module.vpc.aws_vpc_endpoint.codeartifact_repositories",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.codeartifact_repositories_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.codeartifact_repositories_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.codeartifact_repositories[0].service_name",
					"data.aws_vpc_endpoint_service.codeartifact_repositories[0]",
					"data.aws_vpc_endpoint_service.codeartifact_repositories",
				],
			},
			"subnet_ids": {
				"references": [
					"var.codeartifact_repositories_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codeartifact_repositories_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "codeartifact_repositories",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.codebuild": {
		"address": "module.vpc.aws_vpc_endpoint.codebuild",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.codebuild_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.codebuild_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.codebuild[0].service_name",
					"data.aws_vpc_endpoint_service.codebuild[0]",
					"data.aws_vpc_endpoint_service.codebuild",
				],
			},
			"subnet_ids": {
				"references": [
					"var.codebuild_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codebuild_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "codebuild",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.codecommit": {
		"address": "module.vpc.aws_vpc_endpoint.codecommit",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.codecommit_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.codecommit_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.codecommit[0].service_name",
					"data.aws_vpc_endpoint_service.codecommit[0]",
					"data.aws_vpc_endpoint_service.codecommit",
				],
			},
			"subnet_ids": {
				"references": [
					"var.codecommit_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codecommit_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "codecommit",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.codedeploy": {
		"address": "module.vpc.aws_vpc_endpoint.codedeploy",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.codedeploy_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.codedeploy_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.codedeploy[0].service_name",
					"data.aws_vpc_endpoint_service.codedeploy[0]",
					"data.aws_vpc_endpoint_service.codedeploy",
				],
			},
			"subnet_ids": {
				"references": [
					"var.codedeploy_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codedeploy_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "codedeploy",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.codedeploy_commands_secure": {
		"address": "module.vpc.aws_vpc_endpoint.codedeploy_commands_secure",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.codedeploy_commands_secure_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.codedeploy_commands_secure_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.codedeploy_commands_secure[0].service_name",
					"data.aws_vpc_endpoint_service.codedeploy_commands_secure[0]",
					"data.aws_vpc_endpoint_service.codedeploy_commands_secure",
				],
			},
			"subnet_ids": {
				"references": [
					"var.codedeploy_commands_secure_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codedeploy_commands_secure_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "codedeploy_commands_secure",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.codepipeline": {
		"address": "module.vpc.aws_vpc_endpoint.codepipeline",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.codepipeline_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.codepipeline_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.codepipeline[0].service_name",
					"data.aws_vpc_endpoint_service.codepipeline[0]",
					"data.aws_vpc_endpoint_service.codepipeline",
				],
			},
			"subnet_ids": {
				"references": [
					"var.codepipeline_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codepipeline_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "codepipeline",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.config": {
		"address": "module.vpc.aws_vpc_endpoint.config",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.config_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.config_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.config[0].service_name",
					"data.aws_vpc_endpoint_service.config[0]",
					"data.aws_vpc_endpoint_service.config",
				],
			},
			"subnet_ids": {
				"references": [
					"var.config_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_config_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "config",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.datasync": {
		"address": "module.vpc.aws_vpc_endpoint.datasync",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.datasync_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.datasync_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.datasync[0].service_name",
					"data.aws_vpc_endpoint_service.datasync[0]",
					"data.aws_vpc_endpoint_service.datasync",
				],
			},
			"subnet_ids": {
				"references": [
					"var.datasync_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_datasync_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "datasync",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.dynamodb": {
		"address": "module.vpc.aws_vpc_endpoint.dynamodb",
		"config": {
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.dynamodb[0].service_name",
					"data.aws_vpc_endpoint_service.dynamodb[0]",
					"data.aws_vpc_endpoint_service.dynamodb",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_dynamodb_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "dynamodb",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ebs": {
		"address": "module.vpc.aws_vpc_endpoint.ebs",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ebs_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ebs_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ebs[0].service_name",
					"data.aws_vpc_endpoint_service.ebs[0]",
					"data.aws_vpc_endpoint_service.ebs",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ebs_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ebs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ebs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ec2": {
		"address": "module.vpc.aws_vpc_endpoint.ec2",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ec2_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ec2_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ec2[0].service_name",
					"data.aws_vpc_endpoint_service.ec2[0]",
					"data.aws_vpc_endpoint_service.ec2",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ec2_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ec2_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ec2",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ec2_autoscaling": {
		"address": "module.vpc.aws_vpc_endpoint.ec2_autoscaling",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ec2_autoscaling_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ec2_autoscaling_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ec2_autoscaling[0].service_name",
					"data.aws_vpc_endpoint_service.ec2_autoscaling[0]",
					"data.aws_vpc_endpoint_service.ec2_autoscaling",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ec2_autoscaling_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ec2_autoscaling_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ec2_autoscaling",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ec2messages": {
		"address": "module.vpc.aws_vpc_endpoint.ec2messages",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ec2messages_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ec2messages_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ec2messages[0].service_name",
					"data.aws_vpc_endpoint_service.ec2messages[0]",
					"data.aws_vpc_endpoint_service.ec2messages",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ec2messages_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ec2messages_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ec2messages",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ecr_api": {
		"address": "module.vpc.aws_vpc_endpoint.ecr_api",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ecr_api_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ecr_api_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ecr_api[0].service_name",
					"data.aws_vpc_endpoint_service.ecr_api[0]",
					"data.aws_vpc_endpoint_service.ecr_api",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ecr_api_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecr_api_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ecr_api",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ecr_dkr": {
		"address": "module.vpc.aws_vpc_endpoint.ecr_dkr",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ecr_dkr_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ecr_dkr_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ecr_dkr[0].service_name",
					"data.aws_vpc_endpoint_service.ecr_dkr[0]",
					"data.aws_vpc_endpoint_service.ecr_dkr",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ecr_dkr_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecr_dkr_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ecr_dkr",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ecs": {
		"address": "module.vpc.aws_vpc_endpoint.ecs",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ecs_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ecs_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ecs[0].service_name",
					"data.aws_vpc_endpoint_service.ecs[0]",
					"data.aws_vpc_endpoint_service.ecs",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ecs_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ecs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ecs_agent": {
		"address": "module.vpc.aws_vpc_endpoint.ecs_agent",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ecs_agent_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ecs_agent_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ecs_agent[0].service_name",
					"data.aws_vpc_endpoint_service.ecs_agent[0]",
					"data.aws_vpc_endpoint_service.ecs_agent",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ecs_agent_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecs_agent_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ecs_agent",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ecs_telemetry": {
		"address": "module.vpc.aws_vpc_endpoint.ecs_telemetry",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ecs_telemetry_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ecs_telemetry_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ecs_telemetry[0].service_name",
					"data.aws_vpc_endpoint_service.ecs_telemetry[0]",
					"data.aws_vpc_endpoint_service.ecs_telemetry",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ecs_telemetry_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecs_telemetry_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ecs_telemetry",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.efs": {
		"address": "module.vpc.aws_vpc_endpoint.efs",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.efs_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.efs_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.efs[0].service_name",
					"data.aws_vpc_endpoint_service.efs[0]",
					"data.aws_vpc_endpoint_service.efs",
				],
			},
			"subnet_ids": {
				"references": [
					"var.efs_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_efs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "efs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.elastic_inference_runtime": {
		"address": "module.vpc.aws_vpc_endpoint.elastic_inference_runtime",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.elastic_inference_runtime_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.elastic_inference_runtime_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.elastic_inference_runtime[0].service_name",
					"data.aws_vpc_endpoint_service.elastic_inference_runtime[0]",
					"data.aws_vpc_endpoint_service.elastic_inference_runtime",
				],
			},
			"subnet_ids": {
				"references": [
					"var.elastic_inference_runtime_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_elastic_inference_runtime_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elastic_inference_runtime",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.elasticbeanstalk": {
		"address": "module.vpc.aws_vpc_endpoint.elasticbeanstalk",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.elasticbeanstalk_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.elasticbeanstalk_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.elasticbeanstalk[0].service_name",
					"data.aws_vpc_endpoint_service.elasticbeanstalk[0]",
					"data.aws_vpc_endpoint_service.elasticbeanstalk",
				],
			},
			"subnet_ids": {
				"references": [
					"var.elasticbeanstalk_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_elasticbeanstalk_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticbeanstalk",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.elasticbeanstalk_health": {
		"address": "module.vpc.aws_vpc_endpoint.elasticbeanstalk_health",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.elasticbeanstalk_health_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.elasticbeanstalk_health_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.elasticbeanstalk_health[0].service_name",
					"data.aws_vpc_endpoint_service.elasticbeanstalk_health[0]",
					"data.aws_vpc_endpoint_service.elasticbeanstalk_health",
				],
			},
			"subnet_ids": {
				"references": [
					"var.elasticbeanstalk_health_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_elasticbeanstalk_health_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticbeanstalk_health",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.elasticloadbalancing": {
		"address": "module.vpc.aws_vpc_endpoint.elasticloadbalancing",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.elasticloadbalancing_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.elasticloadbalancing_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.elasticloadbalancing[0].service_name",
					"data.aws_vpc_endpoint_service.elasticloadbalancing[0]",
					"data.aws_vpc_endpoint_service.elasticloadbalancing",
				],
			},
			"subnet_ids": {
				"references": [
					"var.elasticloadbalancing_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_elasticloadbalancing_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "elasticloadbalancing",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.emr": {
		"address": "module.vpc.aws_vpc_endpoint.emr",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.emr_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.emr_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.emr[0].service_name",
					"data.aws_vpc_endpoint_service.emr[0]",
					"data.aws_vpc_endpoint_service.emr",
				],
			},
			"subnet_ids": {
				"references": [
					"var.emr_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_emr_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "emr",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.events": {
		"address": "module.vpc.aws_vpc_endpoint.events",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.events_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.events_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.events[0].service_name",
					"data.aws_vpc_endpoint_service.events[0]",
					"data.aws_vpc_endpoint_service.events",
				],
			},
			"subnet_ids": {
				"references": [
					"var.events_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_events_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "events",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.git_codecommit": {
		"address": "module.vpc.aws_vpc_endpoint.git_codecommit",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.git_codecommit_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.git_codecommit_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.git_codecommit[0].service_name",
					"data.aws_vpc_endpoint_service.git_codecommit[0]",
					"data.aws_vpc_endpoint_service.git_codecommit",
				],
			},
			"subnet_ids": {
				"references": [
					"var.git_codecommit_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_git_codecommit_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "git_codecommit",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.glue": {
		"address": "module.vpc.aws_vpc_endpoint.glue",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.glue_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.glue_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.glue[0].service_name",
					"data.aws_vpc_endpoint_service.glue[0]",
					"data.aws_vpc_endpoint_service.glue",
				],
			},
			"subnet_ids": {
				"references": [
					"var.glue_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_glue_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "glue",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.kinesis_firehose": {
		"address": "module.vpc.aws_vpc_endpoint.kinesis_firehose",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.kinesis_firehose_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.kinesis_firehose_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.kinesis_firehose[0].service_name",
					"data.aws_vpc_endpoint_service.kinesis_firehose[0]",
					"data.aws_vpc_endpoint_service.kinesis_firehose",
				],
			},
			"subnet_ids": {
				"references": [
					"var.kinesis_firehose_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_kinesis_firehose_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "kinesis_firehose",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.kinesis_streams": {
		"address": "module.vpc.aws_vpc_endpoint.kinesis_streams",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.kinesis_streams_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.kinesis_streams_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.kinesis_streams[0].service_name",
					"data.aws_vpc_endpoint_service.kinesis_streams[0]",
					"data.aws_vpc_endpoint_service.kinesis_streams",
				],
			},
			"subnet_ids": {
				"references": [
					"var.kinesis_streams_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_kinesis_streams_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "kinesis_streams",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.kms": {
		"address": "module.vpc.aws_vpc_endpoint.kms",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.kms_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.kms_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.kms[0].service_name",
					"data.aws_vpc_endpoint_service.kms[0]",
					"data.aws_vpc_endpoint_service.kms",
				],
			},
			"subnet_ids": {
				"references": [
					"var.kms_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_kms_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "kms",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.lambda": {
		"address": "module.vpc.aws_vpc_endpoint.lambda",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.lambda_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.lambda_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.lambda[0].service_name",
					"data.aws_vpc_endpoint_service.lambda[0]",
					"data.aws_vpc_endpoint_service.lambda",
				],
			},
			"subnet_ids": {
				"references": [
					"var.lambda_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_lambda_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "lambda",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.logs": {
		"address": "module.vpc.aws_vpc_endpoint.logs",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.logs_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.logs_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.logs[0].service_name",
					"data.aws_vpc_endpoint_service.logs[0]",
					"data.aws_vpc_endpoint_service.logs",
				],
			},
			"subnet_ids": {
				"references": [
					"var.logs_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_logs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "logs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.monitoring": {
		"address": "module.vpc.aws_vpc_endpoint.monitoring",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.monitoring_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.monitoring_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.monitoring[0].service_name",
					"data.aws_vpc_endpoint_service.monitoring[0]",
					"data.aws_vpc_endpoint_service.monitoring",
				],
			},
			"subnet_ids": {
				"references": [
					"var.monitoring_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_monitoring_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "monitoring",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.qldb_session": {
		"address": "module.vpc.aws_vpc_endpoint.qldb_session",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.qldb_session_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.qldb_session_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.qldb_session[0].service_name",
					"data.aws_vpc_endpoint_service.qldb_session[0]",
					"data.aws_vpc_endpoint_service.qldb_session",
				],
			},
			"subnet_ids": {
				"references": [
					"var.qldb_session_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_qldb_session_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "qldb_session",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.rds": {
		"address": "module.vpc.aws_vpc_endpoint.rds",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.rds_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.rds_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.rds[0].service_name",
					"data.aws_vpc_endpoint_service.rds[0]",
					"data.aws_vpc_endpoint_service.rds",
				],
			},
			"subnet_ids": {
				"references": [
					"var.rds_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_rds_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "rds",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.rekognition": {
		"address": "module.vpc.aws_vpc_endpoint.rekognition",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.rekognition_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.rekognition_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.rekognition[0].service_name",
					"data.aws_vpc_endpoint_service.rekognition[0]",
					"data.aws_vpc_endpoint_service.rekognition",
				],
			},
			"subnet_ids": {
				"references": [
					"var.rekognition_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_rekognition_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "rekognition",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.s3": {
		"address": "module.vpc.aws_vpc_endpoint.s3",
		"config": {
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.s3[0].service_name",
					"data.aws_vpc_endpoint_service.s3[0]",
					"data.aws_vpc_endpoint_service.s3",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_s3_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "s3",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.sagemaker_api": {
		"address": "module.vpc.aws_vpc_endpoint.sagemaker_api",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.sagemaker_api_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.sagemaker_api_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.sagemaker_api[0].service_name",
					"data.aws_vpc_endpoint_service.sagemaker_api[0]",
					"data.aws_vpc_endpoint_service.sagemaker_api",
				],
			},
			"subnet_ids": {
				"references": [
					"var.sagemaker_api_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sagemaker_api_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "sagemaker_api",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.sagemaker_notebook": {
		"address": "module.vpc.aws_vpc_endpoint.sagemaker_notebook",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.sagemaker_notebook_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.sagemaker_notebook_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.sagemaker_notebook[0].service_name",
					"data.aws_vpc_endpoint_service.sagemaker_notebook[0]",
					"data.aws_vpc_endpoint_service.sagemaker_notebook",
				],
			},
			"subnet_ids": {
				"references": [
					"var.sagemaker_notebook_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sagemaker_notebook_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "sagemaker_notebook",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.sagemaker_runtime": {
		"address": "module.vpc.aws_vpc_endpoint.sagemaker_runtime",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.sagemaker_runtime_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.sagemaker_runtime_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.sagemaker_runtime[0].service_name",
					"data.aws_vpc_endpoint_service.sagemaker_runtime[0]",
					"data.aws_vpc_endpoint_service.sagemaker_runtime",
				],
			},
			"subnet_ids": {
				"references": [
					"var.sagemaker_runtime_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sagemaker_runtime_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "sagemaker_runtime",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.secretsmanager": {
		"address": "module.vpc.aws_vpc_endpoint.secretsmanager",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.secretsmanager_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.secretsmanager_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.secretsmanager[0].service_name",
					"data.aws_vpc_endpoint_service.secretsmanager[0]",
					"data.aws_vpc_endpoint_service.secretsmanager",
				],
			},
			"subnet_ids": {
				"references": [
					"var.secretsmanager_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_secretsmanager_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "secretsmanager",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.servicecatalog": {
		"address": "module.vpc.aws_vpc_endpoint.servicecatalog",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.servicecatalog_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.servicecatalog_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.servicecatalog[0].service_name",
					"data.aws_vpc_endpoint_service.servicecatalog[0]",
					"data.aws_vpc_endpoint_service.servicecatalog",
				],
			},
			"subnet_ids": {
				"references": [
					"var.servicecatalog_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_servicecatalog_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "servicecatalog",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ses": {
		"address": "module.vpc.aws_vpc_endpoint.ses",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ses_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ses_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ses[0].service_name",
					"data.aws_vpc_endpoint_service.ses[0]",
					"data.aws_vpc_endpoint_service.ses",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ses_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ses_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ses",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.sms": {
		"address": "module.vpc.aws_vpc_endpoint.sms",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.sms_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.sms_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.sms[0].service_name",
					"data.aws_vpc_endpoint_service.sms[0]",
					"data.aws_vpc_endpoint_service.sms",
				],
			},
			"subnet_ids": {
				"references": [
					"var.sms_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sms_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "sms",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.sns": {
		"address": "module.vpc.aws_vpc_endpoint.sns",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.sns_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.sns_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.sns[0].service_name",
					"data.aws_vpc_endpoint_service.sns[0]",
					"data.aws_vpc_endpoint_service.sns",
				],
			},
			"subnet_ids": {
				"references": [
					"var.sns_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sns_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "sns",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.sqs": {
		"address": "module.vpc.aws_vpc_endpoint.sqs",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.sqs_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.sqs_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.sqs[0].service_name",
					"data.aws_vpc_endpoint_service.sqs[0]",
					"data.aws_vpc_endpoint_service.sqs",
				],
			},
			"subnet_ids": {
				"references": [
					"var.sqs_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sqs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "sqs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ssm": {
		"address": "module.vpc.aws_vpc_endpoint.ssm",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ssm_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ssm_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ssm[0].service_name",
					"data.aws_vpc_endpoint_service.ssm[0]",
					"data.aws_vpc_endpoint_service.ssm",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ssm_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ssm_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ssm",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.ssmmessages": {
		"address": "module.vpc.aws_vpc_endpoint.ssmmessages",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.ssmmessages_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.ssmmessages_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.ssmmessages[0].service_name",
					"data.aws_vpc_endpoint_service.ssmmessages[0]",
					"data.aws_vpc_endpoint_service.ssmmessages",
				],
			},
			"subnet_ids": {
				"references": [
					"var.ssmmessages_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ssmmessages_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "ssmmessages",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.states": {
		"address": "module.vpc.aws_vpc_endpoint.states",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.states_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.states_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.states[0].service_name",
					"data.aws_vpc_endpoint_service.states[0]",
					"data.aws_vpc_endpoint_service.states",
				],
			},
			"subnet_ids": {
				"references": [
					"var.states_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_states_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "states",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.storagegateway": {
		"address": "module.vpc.aws_vpc_endpoint.storagegateway",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.storagegateway_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.storagegateway_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.storagegateway[0].service_name",
					"data.aws_vpc_endpoint_service.storagegateway[0]",
					"data.aws_vpc_endpoint_service.storagegateway",
				],
			},
			"subnet_ids": {
				"references": [
					"var.storagegateway_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_storagegateway_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "storagegateway",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.sts": {
		"address": "module.vpc.aws_vpc_endpoint.sts",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.sts_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.sts_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.sts[0].service_name",
					"data.aws_vpc_endpoint_service.sts[0]",
					"data.aws_vpc_endpoint_service.sts",
				],
			},
			"subnet_ids": {
				"references": [
					"var.sts_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sts_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "sts",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.textract": {
		"address": "module.vpc.aws_vpc_endpoint.textract",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.textract_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.textract_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.textract[0].service_name",
					"data.aws_vpc_endpoint_service.textract[0]",
					"data.aws_vpc_endpoint_service.textract",
				],
			},
			"subnet_ids": {
				"references": [
					"var.textract_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_textract_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "textract",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.transfer": {
		"address": "module.vpc.aws_vpc_endpoint.transfer",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.transfer_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.transfer_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.transfer[0].service_name",
					"data.aws_vpc_endpoint_service.transfer[0]",
					"data.aws_vpc_endpoint_service.transfer",
				],
			},
			"subnet_ids": {
				"references": [
					"var.transfer_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_transfer_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "transfer",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.transferserver": {
		"address": "module.vpc.aws_vpc_endpoint.transferserver",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.transferserver_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.transferserver_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.transferserver[0].service_name",
					"data.aws_vpc_endpoint_service.transferserver[0]",
					"data.aws_vpc_endpoint_service.transferserver",
				],
			},
			"subnet_ids": {
				"references": [
					"var.transferserver_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_transferserver_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "transferserver",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint.workspaces": {
		"address": "module.vpc.aws_vpc_endpoint.workspaces",
		"config": {
			"private_dns_enabled": {
				"references": [
					"var.workspaces_endpoint_private_dns_enabled",
				],
			},
			"security_group_ids": {
				"references": [
					"var.workspaces_endpoint_security_group_ids",
				],
			},
			"service_name": {
				"references": [
					"data.aws_vpc_endpoint_service.workspaces[0].service_name",
					"data.aws_vpc_endpoint_service.workspaces[0]",
					"data.aws_vpc_endpoint_service.workspaces",
				],
			},
			"subnet_ids": {
				"references": [
					"var.workspaces_endpoint_subnet_ids",
					"aws_subnet.private",
				],
			},
			"tags": {
				"references": [
					"local.vpce_tags",
				],
			},
			"vpc_endpoint_type": {
				"constant_value": "Interface",
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_workspaces_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "workspaces",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint",
	},
	"module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb": {
		"address": "module.vpc.aws_vpc_endpoint_route_table_association.intra_dynamodb",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.intra",
				],
			},
			"vpc_endpoint_id": {
				"references": [
					"aws_vpc_endpoint.dynamodb[0].id",
					"aws_vpc_endpoint.dynamodb[0]",
					"aws_vpc_endpoint.dynamodb",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_dynamodb_endpoint",
				"var.intra_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "intra_dynamodb",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_route_table_association",
	},
	"module.vpc.aws_vpc_endpoint_route_table_association.intra_s3": {
		"address": "module.vpc.aws_vpc_endpoint_route_table_association.intra_s3",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.intra",
				],
			},
			"vpc_endpoint_id": {
				"references": [
					"aws_vpc_endpoint.s3[0].id",
					"aws_vpc_endpoint.s3[0]",
					"aws_vpc_endpoint.s3",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_s3_endpoint",
				"var.intra_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "intra_s3",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_route_table_association",
	},
	"module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb": {
		"address": "module.vpc.aws_vpc_endpoint_route_table_association.private_dynamodb",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.private",
					"count.index",
				],
			},
			"vpc_endpoint_id": {
				"references": [
					"aws_vpc_endpoint.dynamodb[0].id",
					"aws_vpc_endpoint.dynamodb[0]",
					"aws_vpc_endpoint.dynamodb",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_dynamodb_endpoint",
				"local.nat_gateway_count",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private_dynamodb",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_route_table_association",
	},
	"module.vpc.aws_vpc_endpoint_route_table_association.private_s3": {
		"address": "module.vpc.aws_vpc_endpoint_route_table_association.private_s3",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.private",
					"count.index",
				],
			},
			"vpc_endpoint_id": {
				"references": [
					"aws_vpc_endpoint.s3[0].id",
					"aws_vpc_endpoint.s3[0]",
					"aws_vpc_endpoint.s3",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_s3_endpoint",
				"local.nat_gateway_count",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private_s3",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_route_table_association",
	},
	"module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb": {
		"address": "module.vpc.aws_vpc_endpoint_route_table_association.public_dynamodb",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.public[0].id",
					"aws_route_table.public[0]",
					"aws_route_table.public",
				],
			},
			"vpc_endpoint_id": {
				"references": [
					"aws_vpc_endpoint.dynamodb[0].id",
					"aws_vpc_endpoint.dynamodb[0]",
					"aws_vpc_endpoint.dynamodb",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_dynamodb_endpoint",
				"var.public_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public_dynamodb",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_route_table_association",
	},
	"module.vpc.aws_vpc_endpoint_route_table_association.public_s3": {
		"address": "module.vpc.aws_vpc_endpoint_route_table_association.public_s3",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.public[0].id",
					"aws_route_table.public[0]",
					"aws_route_table.public",
				],
			},
			"vpc_endpoint_id": {
				"references": [
					"aws_vpc_endpoint.s3[0].id",
					"aws_vpc_endpoint.s3[0]",
					"aws_vpc_endpoint.s3",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_s3_endpoint",
				"var.enable_public_s3_endpoint",
				"var.public_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public_s3",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_route_table_association",
	},
	"module.vpc.aws_vpc_ipv4_cidr_block_association.this": {
		"address": "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
		"config": {
			"cidr_block": {
				"references": [
					"var.secondary_cidr_blocks",
					"count.index",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.this[0].id",
					"aws_vpc.this[0]",
					"aws_vpc.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.secondary_cidr_blocks",
				"var.secondary_cidr_blocks",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_ipv4_cidr_block_association",
	},
	"module.vpc.aws_vpn_gateway.this": {
		"address": "module.vpc.aws_vpn_gateway.this",
		"config": {
			"amazon_side_asn": {
				"references": [
					"var.amazon_side_asn",
				],
			},
			"availability_zone": {
				"references": [
					"var.vpn_gateway_az",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
					"var.vpn_gateway_tags",
				],
			},
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_vpn_gateway",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpn_gateway",
	},
	"module.vpc.aws_vpn_gateway_attachment.this": {
		"address": "module.vpc.aws_vpn_gateway_attachment.this",
		"config": {
			"vpc_id": {
				"references": [
					"local.vpc_id",
				],
			},
			"vpn_gateway_id": {
				"references": [
					"var.vpn_gateway_id",
				],
			},
		},
		"count": {
			"references": [
				"var.vpn_gateway_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "this",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpn_gateway_attachment",
	},
	"module.vpc.aws_vpn_gateway_route_propagation.intra": {
		"address": "module.vpc.aws_vpn_gateway_route_propagation.intra",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.intra",
					"count.index",
				],
			},
			"vpn_gateway_id": {
				"references": [
					"aws_vpn_gateway.this",
					"aws_vpn_gateway_attachment.this",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.propagate_intra_route_tables_vgw",
				"var.enable_vpn_gateway",
				"var.vpn_gateway_id",
				"var.intra_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "intra",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpn_gateway_route_propagation",
	},
	"module.vpc.aws_vpn_gateway_route_propagation.private": {
		"address": "module.vpc.aws_vpn_gateway_route_propagation.private",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.private",
					"count.index",
				],
			},
			"vpn_gateway_id": {
				"references": [
					"aws_vpn_gateway.this",
					"aws_vpn_gateway_attachment.this",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.propagate_private_route_tables_vgw",
				"var.enable_vpn_gateway",
				"var.vpn_gateway_id",
				"var.private_subnets",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "private",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpn_gateway_route_propagation",
	},
	"module.vpc.aws_vpn_gateway_route_propagation.public": {
		"address": "module.vpc.aws_vpn_gateway_route_propagation.public",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.public",
					"count.index",
				],
			},
			"vpn_gateway_id": {
				"references": [
					"aws_vpn_gateway.this",
					"aws_vpn_gateway_attachment.this",
					"count.index",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.propagate_public_route_tables_vgw",
				"var.enable_vpn_gateway",
				"var.vpn_gateway_id",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.vpc",
		"name":                "public",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpn_gateway_route_propagation",
	},
	"module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role": {
		"address": "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
		"config": {
			"statement": [
				{
					"actions": {
						"constant_value": [
							"sts:AssumeRole",
						],
					},
					"effect": {
						"constant_value": "Allow",
					},
					"principals": [
						{
							"identifiers": {
								"constant_value": [
									"vpc-flow-logs.amazonaws.com",
								],
							},
							"type": {
								"constant_value": "Service",
							},
						},
					],
				},
			],
		},
		"count": {
			"references": [
				"local.create_flow_log_cloudwatch_iam_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "flow_log_cloudwatch_assume_role",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy_document",
	},
	"module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch": {
		"address": "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
		"config": {
			"statement": [
				{
					"actions": {
						"constant_value": [
							"logs:CreateLogGroup",
							"logs:CreateLogStream",
							"logs:PutLogEvents",
							"logs:DescribeLogGroups",
							"logs:DescribeLogStreams",
						],
					},
					"effect": {
						"constant_value": "Allow",
					},
					"resources": {
						"constant_value": [
							"*",
						],
					},
					"sid": {
						"constant_value": "AWSVPCFlowLogsPushToCloudWatch",
					},
				},
			],
		},
		"count": {
			"references": [
				"local.create_flow_log_cloudwatch_iam_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "vpc_flow_log_cloudwatch",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy_document",
	},
	"module.vpc.data.aws_vpc_endpoint_service.access_analyzer": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.access_analyzer",
		"config": {
			"service": {
				"constant_value": "access-analyzer",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_access_analyzer_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "access_analyzer",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.acm_pca": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.acm_pca",
		"config": {
			"service": {
				"constant_value": "acm-pca",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_acm_pca_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "acm_pca",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.apigw": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.apigw",
		"config": {
			"service": {
				"constant_value": "execute-api",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_apigw_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "apigw",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.appmesh_envoy_management": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.appmesh_envoy_management",
		"config": {
			"service": {
				"constant_value": "appmesh-envoy-management",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_appmesh_envoy_management_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "appmesh_envoy_management",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.appstream_api": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.appstream_api",
		"config": {
			"service": {
				"constant_value": "appstream.api",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_appstream_streaming_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "appstream_api",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.appstream_streaming": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.appstream_streaming",
		"config": {
			"service": {
				"constant_value": "appstream.streaming",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_appstream_streaming_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "appstream_streaming",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.athena": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.athena",
		"config": {
			"service": {
				"constant_value": "athena",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_athena_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "athena",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.auto_scaling_plans": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.auto_scaling_plans",
		"config": {
			"service": {
				"constant_value": "autoscaling-plans",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_auto_scaling_plans_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "auto_scaling_plans",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.cloud_directory": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.cloud_directory",
		"config": {
			"service": {
				"constant_value": "clouddirectory",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_cloud_directory_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "cloud_directory",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.cloudformation": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.cloudformation",
		"config": {
			"service": {
				"constant_value": "cloudformation",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_cloudformation_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "cloudformation",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.cloudtrail": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.cloudtrail",
		"config": {
			"service": {
				"constant_value": "cloudtrail",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_cloudtrail_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "cloudtrail",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.codeartifact_api": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.codeartifact_api",
		"config": {
			"service": {
				"constant_value": "codeartifact.api",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codeartifact_api_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "codeartifact_api",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.codeartifact_repositories": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.codeartifact_repositories",
		"config": {
			"service": {
				"constant_value": "codeartifact.repositories",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codeartifact_repositories_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "codeartifact_repositories",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.codebuild": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.codebuild",
		"config": {
			"service": {
				"constant_value": "codebuild",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codebuild_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "codebuild",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.codecommit": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.codecommit",
		"config": {
			"service": {
				"constant_value": "codecommit",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codecommit_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "codecommit",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.codedeploy": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.codedeploy",
		"config": {
			"service": {
				"constant_value": "codedeploy",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codedeploy_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "codedeploy",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.codedeploy_commands_secure": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.codedeploy_commands_secure",
		"config": {
			"service": {
				"constant_value": "codedeploy-commands-secure",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codedeploy_commands_secure_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "codedeploy_commands_secure",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.codepipeline": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.codepipeline",
		"config": {
			"service": {
				"constant_value": "codepipeline",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_codepipeline_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "codepipeline",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.config": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.config",
		"config": {
			"service": {
				"constant_value": "config",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_config_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "config",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.datasync": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.datasync",
		"config": {
			"service": {
				"constant_value": "datasync",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_datasync_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "datasync",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.dynamodb": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.dynamodb",
		"config": {
			"service": {
				"constant_value": "dynamodb",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_dynamodb_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "dynamodb",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ebs": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ebs",
		"config": {
			"service": {
				"constant_value": "ebs",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ebs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ebs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ec2": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ec2",
		"config": {
			"service": {
				"constant_value": "ec2",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ec2_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ec2",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ec2_autoscaling": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ec2_autoscaling",
		"config": {
			"service": {
				"constant_value": "autoscaling",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ec2_autoscaling_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ec2_autoscaling",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ec2messages": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ec2messages",
		"config": {
			"service": {
				"constant_value": "ec2messages",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ec2messages_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ec2messages",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ecr_api": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ecr_api",
		"config": {
			"service": {
				"constant_value": "ecr.api",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecr_api_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ecr_api",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ecr_dkr": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ecr_dkr",
		"config": {
			"service": {
				"constant_value": "ecr.dkr",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecr_dkr_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ecr_dkr",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ecs": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ecs",
		"config": {
			"service": {
				"constant_value": "ecs",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ecs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ecs_agent": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ecs_agent",
		"config": {
			"service": {
				"constant_value": "ecs-agent",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecs_agent_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ecs_agent",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry",
		"config": {
			"service": {
				"constant_value": "ecs-telemetry",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ecs_telemetry_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ecs_telemetry",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.efs": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.efs",
		"config": {
			"service": {
				"constant_value": "elasticfilesystem",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_efs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "efs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.elastic_inference_runtime": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.elastic_inference_runtime",
		"config": {
			"service": {
				"constant_value": "elastic-inference.runtime",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_elastic_inference_runtime_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "elastic_inference_runtime",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.elasticbeanstalk": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.elasticbeanstalk",
		"config": {
			"service": {
				"constant_value": "elasticbeanstalk",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_elasticbeanstalk_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "elasticbeanstalk",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.elasticbeanstalk_health": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.elasticbeanstalk_health",
		"config": {
			"service": {
				"constant_value": "elasticbeanstalk-health",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_elasticbeanstalk_health_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "elasticbeanstalk_health",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing",
		"config": {
			"service": {
				"constant_value": "elasticloadbalancing",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_elasticloadbalancing_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "elasticloadbalancing",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.emr": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.emr",
		"config": {
			"service": {
				"constant_value": "elasticmapreduce",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_emr_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "emr",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.events": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.events",
		"config": {
			"service": {
				"constant_value": "events",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_events_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "events",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.git_codecommit": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.git_codecommit",
		"config": {
			"service": {
				"constant_value": "git-codecommit",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_git_codecommit_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "git_codecommit",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.glue": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.glue",
		"config": {
			"service": {
				"constant_value": "glue",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_glue_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "glue",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.kinesis_firehose": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.kinesis_firehose",
		"config": {
			"service": {
				"constant_value": "kinesis-firehose",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_kinesis_firehose_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "kinesis_firehose",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.kinesis_streams": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.kinesis_streams",
		"config": {
			"service": {
				"constant_value": "kinesis-streams",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_kinesis_streams_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "kinesis_streams",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.kms": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.kms",
		"config": {
			"service": {
				"constant_value": "kms",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_kms_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "kms",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.lambda": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.lambda",
		"config": {
			"service": {
				"constant_value": "lambda",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_lambda_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "lambda",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.logs": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.logs",
		"config": {
			"service": {
				"constant_value": "logs",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_logs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "logs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.monitoring": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.monitoring",
		"config": {
			"service": {
				"constant_value": "monitoring",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_monitoring_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "monitoring",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.qldb_session": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.qldb_session",
		"config": {
			"service": {
				"constant_value": "qldb.session",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_qldb_session_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "qldb_session",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.rds": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.rds",
		"config": {
			"service": {
				"constant_value": "rds",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_rds_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "rds",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.rekognition": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.rekognition",
		"config": {
			"service": {
				"constant_value": "rekognition",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_rekognition_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "rekognition",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.s3": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.s3",
		"config": {
			"service": {
				"constant_value": "s3",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_s3_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "s3",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.sagemaker_api": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.sagemaker_api",
		"config": {
			"service": {
				"constant_value": "sagemaker.api",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sagemaker_api_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "sagemaker_api",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.sagemaker_notebook": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.sagemaker_notebook",
		"config": {
			"service_name": {
				"references": [
					"var.sagemaker_notebook_endpoint_region",
				],
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sagemaker_notebook_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "sagemaker_notebook",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.sagemaker_runtime": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.sagemaker_runtime",
		"config": {
			"service": {
				"constant_value": "sagemaker.runtime",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sagemaker_runtime_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "sagemaker_runtime",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.secretsmanager": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.secretsmanager",
		"config": {
			"service": {
				"constant_value": "secretsmanager",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_secretsmanager_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "secretsmanager",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.servicecatalog": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.servicecatalog",
		"config": {
			"service": {
				"constant_value": "servicecatalog",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_servicecatalog_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "servicecatalog",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ses": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ses",
		"config": {
			"service": {
				"constant_value": "email-smtp",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ses_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ses",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.sms": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.sms",
		"config": {
			"service": {
				"constant_value": "sms",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sms_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "sms",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.sns": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.sns",
		"config": {
			"service": {
				"constant_value": "sns",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sns_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "sns",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.sqs": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.sqs",
		"config": {
			"service": {
				"constant_value": "sqs",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sqs_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "sqs",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ssm": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ssm",
		"config": {
			"service": {
				"constant_value": "ssm",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ssm_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ssm",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.ssmmessages": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.ssmmessages",
		"config": {
			"service": {
				"constant_value": "ssmmessages",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_ssmmessages_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "ssmmessages",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.states": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.states",
		"config": {
			"service": {
				"constant_value": "states",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_states_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "states",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.storagegateway": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.storagegateway",
		"config": {
			"service": {
				"constant_value": "storagegateway",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_storagegateway_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "storagegateway",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.sts": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.sts",
		"config": {
			"service": {
				"constant_value": "sts",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_sts_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "sts",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.textract": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.textract",
		"config": {
			"service": {
				"constant_value": "textract",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_textract_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "textract",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.transfer": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.transfer",
		"config": {
			"service": {
				"constant_value": "transfer",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_transfer_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "transfer",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.transferserver": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.transferserver",
		"config": {
			"service": {
				"constant_value": "transfer.server",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_transferserver_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "transferserver",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"module.vpc.data.aws_vpc_endpoint_service.workspaces": {
		"address": "module.vpc.data.aws_vpc_endpoint_service.workspaces",
		"config": {
			"service": {
				"constant_value": "workspaces",
			},
		},
		"count": {
			"references": [
				"var.create_vpc",
				"var.enable_workspaces_endpoint",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.vpc",
		"name":                "workspaces",
		"provider_config_key": "module.vpc:aws",
		"provisioners":        [],
		"type":                "aws_vpc_endpoint_service",
	},
	"random_string.lb_id": {
		"address": "random_string.lb_id",
		"config": {
			"length": {
				"constant_value": 3,
			},
			"special": {
				"constant_value": false,
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "lb_id",
		"provider_config_key": "random",
		"provisioners":        [],
		"type":                "random_string",
	},
}

provisioners = {}

variables = {
	"instance_count": {
		"default":        null,
		"description":    "Number of EC2 instances to create",
		"module_address": "",
		"name":           "instance_count",
	},
	"instance_type": {
		"default":        null,
		"description":    "EC2 instance type",
		"module_address": "",
		"name":           "instance_type",
	},
	"module.app_security_group.module.sg:auto_groups": {
		"default": {
			"activemq": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"activemq-5671-tcp",
					"activemq-8883-tcp",
					"activemq-61614-tcp",
					"activemq-61617-tcp",
					"activemq-61619-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"alertmanager": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"alertmanager-9093-tcp",
					"alertmanager-9094-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"carbon-relay-ng": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"carbon-line-in-tcp",
					"carbon-line-in-udp",
					"carbon-pickle-tcp",
					"carbon-pickle-udp",
					"carbon-gui-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"cassandra": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"cassandra-clients-tcp",
					"cassandra-thrift-clients-tcp",
					"cassandra-jmx-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"consul": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"consul-tcp",
					"consul-cli-rpc-tcp",
					"consul-webui-tcp",
					"consul-dns-tcp",
					"consul-dns-udp",
					"consul-serf-lan-tcp",
					"consul-serf-lan-udp",
					"consul-serf-wan-tcp",
					"consul-serf-wan-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"docker-swarm": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"docker-swarm-mngmt-tcp",
					"docker-swarm-node-tcp",
					"docker-swarm-node-udp",
					"docker-swarm-overlay-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"elasticsearch": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"elasticsearch-rest-tcp",
					"elasticsearch-java-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"grafana": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"grafana-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"graphite-statsd": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"graphite-webui",
					"graphite-2003-tcp",
					"graphite-2004-tcp",
					"graphite-2023-tcp",
					"graphite-2024-tcp",
					"graphite-8080-tcp",
					"graphite-8125-tcp",
					"graphite-8125-udp",
					"graphite-8126-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"http-80": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"http-80-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"http-8080": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"http-8080-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"https-443": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"https-443-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"https-8443": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"https-8443-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ipsec-4500": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ipsec-4500-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ipsec-500": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ipsec-500-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"kafka": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"kafka-broker-tcp",
					"kafka-broker-tls-tcp",
					"kafka-jmx-exporter-tcp",
					"kafka-node-exporter-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"kibana": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"kibana-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"kubernetes-api": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"kubernetes-api-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ldap": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ldap-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ldaps": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ldaps-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"logstash": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"logstash-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"memcached": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"memcached-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"minio": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"minio-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"mongodb": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"mongodb-27017-tcp",
					"mongodb-27018-tcp",
					"mongodb-27019-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"mssql": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"mssql-tcp",
					"mssql-udp",
					"mssql-analytics-tcp",
					"mssql-broker-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"mysql": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"mysql-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"nfs": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"nfs-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"nomad": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"nomad-http-tcp",
					"nomad-rpc-tcp",
					"nomad-serf-tcp",
					"nomad-serf-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ntp": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ntp-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"openvpn": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"openvpn-udp",
					"openvpn-tcp",
					"openvpn-https-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"oracle-db": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"oracle-db-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"postgresql": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"postgresql-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"prometheus": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"prometheus-http-tcp",
					"prometheus-pushgateway-http-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"puppet": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"puppet-tcp",
					"puppetdb-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"rabbitmq": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"rabbitmq-4369-tcp",
					"rabbitmq-5671-tcp",
					"rabbitmq-5672-tcp",
					"rabbitmq-15672-tcp",
					"rabbitmq-25672-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"rdp": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"rdp-tcp",
					"rdp-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"redis": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"redis-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"redshift": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"redshift-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"solr": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"solr-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"splunk": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"splunk-indexer-tcp",
					"splunk-clients-tcp",
					"splunk-splunkd-tcp",
					"splunk-hec-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"squid": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"squid-proxy-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ssh": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ssh-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"storm": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"storm-nimbus-tcp",
					"storm-ui-tcp",
					"storm-supervisor-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"web": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"http-80-tcp",
					"http-8080-tcp",
					"https-443-tcp",
					"web-jmx-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"winrm": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"winrm-http-tcp",
					"winrm-https-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"zipkin": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"zipkin-admin-tcp",
					"zipkin-admin-query-tcp",
					"zipkin-admin-web-tcp",
					"zipkin-query-tcp",
					"zipkin-web-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"zookeeper": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"zookeeper-2181-tcp",
					"zookeeper-2888-tcp",
					"zookeeper-3888-tcp",
					"zookeeper-jmx-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
		},
		"description":    "Map of groups of security group rules to use to generate modules (see update_groups.sh)",
		"module_address": "module.app_security_group.module.sg",
		"name":           "auto_groups",
	},
	"module.app_security_group.module.sg:computed_egress_rules": {
		"default":        [],
		"description":    "List of computed egress rules to create by name",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_egress_rules",
	},
	"module.app_security_group.module.sg:computed_egress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_egress_with_cidr_blocks",
	},
	"module.app_security_group.module.sg:computed_egress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_egress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group.module.sg:computed_egress_with_self": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'self' is defined",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_egress_with_self",
	},
	"module.app_security_group.module.sg:computed_egress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_egress_with_source_security_group_id",
	},
	"module.app_security_group.module.sg:computed_ingress_rules": {
		"default":        [],
		"description":    "List of computed ingress rules to create by name",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_ingress_rules",
	},
	"module.app_security_group.module.sg:computed_ingress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_ingress_with_cidr_blocks",
	},
	"module.app_security_group.module.sg:computed_ingress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_ingress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group.module.sg:computed_ingress_with_self": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'self' is defined",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_ingress_with_self",
	},
	"module.app_security_group.module.sg:computed_ingress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "computed_ingress_with_source_security_group_id",
	},
	"module.app_security_group.module.sg:create": {
		"default":        true,
		"description":    "Whether to create security group and all rules",
		"module_address": "module.app_security_group.module.sg",
		"name":           "create",
	},
	"module.app_security_group.module.sg:description": {
		"default":        "Security Group managed by Terraform",
		"description":    "Description of security group",
		"module_address": "module.app_security_group.module.sg",
		"name":           "description",
	},
	"module.app_security_group.module.sg:egress_cidr_blocks": {
		"default": [
			"0.0.0.0/0",
		],
		"description":    "List of IPv4 CIDR ranges to use on all egress rules",
		"module_address": "module.app_security_group.module.sg",
		"name":           "egress_cidr_blocks",
	},
	"module.app_security_group.module.sg:egress_ipv6_cidr_blocks": {
		"default": [
			"::/0",
		],
		"description":    "List of IPv6 CIDR ranges to use on all egress rules",
		"module_address": "module.app_security_group.module.sg",
		"name":           "egress_ipv6_cidr_blocks",
	},
	"module.app_security_group.module.sg:egress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules",
		"module_address": "module.app_security_group.module.sg",
		"name":           "egress_prefix_list_ids",
	},
	"module.app_security_group.module.sg:egress_rules": {
		"default":        [],
		"description":    "List of egress rules to create by name",
		"module_address": "module.app_security_group.module.sg",
		"name":           "egress_rules",
	},
	"module.app_security_group.module.sg:egress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "egress_with_cidr_blocks",
	},
	"module.app_security_group.module.sg:egress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "egress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group.module.sg:egress_with_self": {
		"default":        [],
		"description":    "List of egress rules to create where 'self' is defined",
		"module_address": "module.app_security_group.module.sg",
		"name":           "egress_with_self",
	},
	"module.app_security_group.module.sg:egress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "egress_with_source_security_group_id",
	},
	"module.app_security_group.module.sg:ingress_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv4 CIDR ranges to use on all ingress rules",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_cidr_blocks",
	},
	"module.app_security_group.module.sg:ingress_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv6 CIDR ranges to use on all ingress rules",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_ipv6_cidr_blocks",
	},
	"module.app_security_group.module.sg:ingress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_prefix_list_ids",
	},
	"module.app_security_group.module.sg:ingress_rules": {
		"default":        [],
		"description":    "List of ingress rules to create by name",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_rules",
	},
	"module.app_security_group.module.sg:ingress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_with_cidr_blocks",
	},
	"module.app_security_group.module.sg:ingress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group.module.sg:ingress_with_self": {
		"default":        [],
		"description":    "List of ingress rules to create where 'self' is defined",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_with_self",
	},
	"module.app_security_group.module.sg:ingress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "ingress_with_source_security_group_id",
	},
	"module.app_security_group.module.sg:name": {
		"default":        null,
		"description":    "Name of security group",
		"module_address": "module.app_security_group.module.sg",
		"name":           "name",
	},
	"module.app_security_group.module.sg:number_of_computed_egress_rules": {
		"default":        0,
		"description":    "Number of computed egress rules to create by name",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_egress_rules",
	},
	"module.app_security_group.module.sg:number_of_computed_egress_with_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_egress_with_cidr_blocks",
	},
	"module.app_security_group.module.sg:number_of_computed_egress_with_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_egress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group.module.sg:number_of_computed_egress_with_self": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'self' is defined",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_egress_with_self",
	},
	"module.app_security_group.module.sg:number_of_computed_egress_with_source_security_group_id": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_egress_with_source_security_group_id",
	},
	"module.app_security_group.module.sg:number_of_computed_ingress_rules": {
		"default":        0,
		"description":    "Number of computed ingress rules to create by name",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_ingress_rules",
	},
	"module.app_security_group.module.sg:number_of_computed_ingress_with_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_ingress_with_cidr_blocks",
	},
	"module.app_security_group.module.sg:number_of_computed_ingress_with_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_ingress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group.module.sg:number_of_computed_ingress_with_self": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'self' is defined",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_ingress_with_self",
	},
	"module.app_security_group.module.sg:number_of_computed_ingress_with_source_security_group_id": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group.module.sg",
		"name":           "number_of_computed_ingress_with_source_security_group_id",
	},
	"module.app_security_group.module.sg:revoke_rules_on_delete": {
		"default":        false,
		"description":    "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR.",
		"module_address": "module.app_security_group.module.sg",
		"name":           "revoke_rules_on_delete",
	},
	"module.app_security_group.module.sg:rules": {
		"default": {
			"_": [
				"",
				"",
				"",
			],
			"activemq-5671-tcp": [
				"5671",
				"5671",
				"tcp",
				"ActiveMQ AMQP",
			],
			"activemq-61614-tcp": [
				"61614",
				"61614",
				"tcp",
				"ActiveMQ STOMP",
			],
			"activemq-61617-tcp": [
				"61617",
				"61617",
				"tcp",
				"ActiveMQ OpenWire",
			],
			"activemq-61619-tcp": [
				"61619",
				"61619",
				"tcp",
				"ActiveMQ WebSocket",
			],
			"activemq-8883-tcp": [
				"8883",
				"8883",
				"tcp",
				"ActiveMQ MQTT",
			],
			"alertmanager-9093-tcp": [
				"9093",
				"9093",
				"tcp",
				"Alert Manager",
			],
			"alertmanager-9094-tcp": [
				"9094",
				"9094",
				"tcp",
				"Alert Manager Cluster",
			],
			"all-all": [
				"-1",
				"-1",
				"-1",
				"All protocols",
			],
			"all-icmp": [
				"-1",
				"-1",
				"icmp",
				"All IPV4 ICMP",
			],
			"all-ipv6-icmp": [
				"-1",
				"-1",
				"58",
				"All IPV6 ICMP",
			],
			"all-tcp": [
				"0",
				"65535",
				"tcp",
				"All TCP ports",
			],
			"all-udp": [
				"0",
				"65535",
				"udp",
				"All UDP ports",
			],
			"carbon-admin-tcp": [
				"2004",
				"2004",
				"tcp",
				"Carbon admin",
			],
			"carbon-gui-udp": [
				"8081",
				"8081",
				"tcp",
				"Carbon GUI",
			],
			"carbon-line-in-tcp": [
				"2003",
				"2003",
				"tcp",
				"Carbon line-in",
			],
			"carbon-line-in-udp": [
				"2003",
				"2003",
				"udp",
				"Carbon line-in",
			],
			"carbon-pickle-tcp": [
				"2013",
				"2013",
				"tcp",
				"Carbon pickle",
			],
			"carbon-pickle-udp": [
				"2013",
				"2013",
				"udp",
				"Carbon pickle",
			],
			"cassandra-clients-tcp": [
				"9042",
				"9042",
				"tcp",
				"Cassandra clients",
			],
			"cassandra-jmx-tcp": [
				"7199",
				"7199",
				"tcp",
				"JMX",
			],
			"cassandra-thrift-clients-tcp": [
				"9160",
				"9160",
				"tcp",
				"Cassandra Thrift clients",
			],
			"consul-cli-rpc-tcp": [
				"8400",
				"8400",
				"tcp",
				"Consul CLI RPC",
			],
			"consul-dns-tcp": [
				"8600",
				"8600",
				"tcp",
				"Consul DNS",
			],
			"consul-dns-udp": [
				"8600",
				"8600",
				"udp",
				"Consul DNS",
			],
			"consul-serf-lan-tcp": [
				"8301",
				"8301",
				"tcp",
				"Serf LAN",
			],
			"consul-serf-lan-udp": [
				"8301",
				"8301",
				"udp",
				"Serf LAN",
			],
			"consul-serf-wan-tcp": [
				"8302",
				"8302",
				"tcp",
				"Serf WAN",
			],
			"consul-serf-wan-udp": [
				"8302",
				"8302",
				"udp",
				"Serf WAN",
			],
			"consul-tcp": [
				"8300",
				"8300",
				"tcp",
				"Consul server",
			],
			"consul-webui-tcp": [
				"8500",
				"8500",
				"tcp",
				"Consul web UI",
			],
			"dns-tcp": [
				"53",
				"53",
				"tcp",
				"DNS",
			],
			"dns-udp": [
				"53",
				"53",
				"udp",
				"DNS",
			],
			"docker-swarm-mngmt-tcp": [
				"2377",
				"2377",
				"tcp",
				"Docker Swarm cluster management",
			],
			"docker-swarm-node-tcp": [
				"7946",
				"7946",
				"tcp",
				"Docker Swarm node",
			],
			"docker-swarm-node-udp": [
				"7946",
				"7946",
				"udp",
				"Docker Swarm node",
			],
			"docker-swarm-overlay-udp": [
				"4789",
				"4789",
				"udp",
				"Docker Swarm Overlay Network Traffic",
			],
			"elasticsearch-java-tcp": [
				"9300",
				"9300",
				"tcp",
				"Elasticsearch Java interface",
			],
			"elasticsearch-rest-tcp": [
				"9200",
				"9200",
				"tcp",
				"Elasticsearch REST interface",
			],
			"grafana-tcp": [
				"3000",
				"3000",
				"tcp",
				"Grafana Dashboard",
			],
			"graphite-2003-tcp": [
				"2003",
				"2003",
				"tcp",
				"Carbon receiver plain text",
			],
			"graphite-2004-tcp": [
				"2004",
				"2004",
				"tcp",
				"Carbon receiver pickle",
			],
			"graphite-2023-tcp": [
				"2023",
				"2023",
				"tcp",
				"Carbon aggregator plaintext",
			],
			"graphite-2024-tcp": [
				"2024",
				"2024",
				"tcp",
				"Carbon aggregator pickle",
			],
			"graphite-8080-tcp": [
				"8080",
				"8080",
				"tcp",
				"Graphite gunicorn port",
			],
			"graphite-8125-tcp": [
				"8125",
				"8125",
				"tcp",
				"Statsd TCP",
			],
			"graphite-8125-udp": [
				"8125",
				"8125",
				"udp",
				"Statsd UDP default",
			],
			"graphite-8126-tcp": [
				"8126",
				"8126",
				"tcp",
				"Statsd admin",
			],
			"graphite-webui": [
				"80",
				"80",
				"tcp",
				"Graphite admin interface",
			],
			"http-80-tcp": [
				"80",
				"80",
				"tcp",
				"HTTP",
			],
			"http-8080-tcp": [
				"8080",
				"8080",
				"tcp",
				"HTTP",
			],
			"https-443-tcp": [
				"443",
				"443",
				"tcp",
				"HTTPS",
			],
			"https-8443-tcp": [
				"8443",
				"8443",
				"tcp",
				"HTTPS",
			],
			"ipsec-4500-udp": [
				"4500",
				"4500",
				"udp",
				"IPSEC NAT-T",
			],
			"ipsec-500-udp": [
				"500",
				"500",
				"udp",
				"IPSEC ISAKMP",
			],
			"kafka-broker-tcp": [
				"9092",
				"9092",
				"tcp",
				"Kafka broker 0.8.2+",
			],
			"kafka-broker-tls-tcp": [
				"9094",
				"9094",
				"tcp",
				"Kafka TLS enabled broker 0.8.2+",
			],
			"kafka-jmx-exporter-tcp": [
				"11001",
				"11001",
				"tcp",
				"Kafka JMX Exporter",
			],
			"kafka-node-exporter-tcp": [
				"11002",
				"11002",
				"tcp",
				"Kafka Node Exporter",
			],
			"kibana-tcp": [
				"5601",
				"5601",
				"tcp",
				"Kibana Web Interface",
			],
			"kubernetes-api-tcp": [
				"6443",
				"6443",
				"tcp",
				"Kubernetes API Server",
			],
			"ldap-tcp": [
				"389",
				"389",
				"tcp",
				"LDAP",
			],
			"ldaps-tcp": [
				"636",
				"636",
				"tcp",
				"LDAPS",
			],
			"logstash-tcp": [
				"5044",
				"5044",
				"tcp",
				"Logstash",
			],
			"memcached-tcp": [
				"11211",
				"11211",
				"tcp",
				"Memcached",
			],
			"minio-tcp": [
				"9000",
				"9000",
				"tcp",
				"MinIO",
			],
			"mongodb-27017-tcp": [
				"27017",
				"27017",
				"tcp",
				"MongoDB",
			],
			"mongodb-27018-tcp": [
				"27018",
				"27018",
				"tcp",
				"MongoDB shard",
			],
			"mongodb-27019-tcp": [
				"27019",
				"27019",
				"tcp",
				"MongoDB config server",
			],
			"mssql-analytics-tcp": [
				"2383",
				"2383",
				"tcp",
				"MSSQL Analytics",
			],
			"mssql-broker-tcp": [
				"4022",
				"4022",
				"tcp",
				"MSSQL Broker",
			],
			"mssql-tcp": [
				"1433",
				"1433",
				"tcp",
				"MSSQL Server",
			],
			"mssql-udp": [
				"1434",
				"1434",
				"udp",
				"MSSQL Browser",
			],
			"mysql-tcp": [
				"3306",
				"3306",
				"tcp",
				"MySQL/Aurora",
			],
			"nfs-tcp": [
				"2049",
				"2049",
				"tcp",
				"NFS/EFS",
			],
			"nomad-http-tcp": [
				"4646",
				"4646",
				"tcp",
				"Nomad HTTP",
			],
			"nomad-rpc-tcp": [
				"4647",
				"4647",
				"tcp",
				"Nomad RPC",
			],
			"nomad-serf-tcp": [
				"4648",
				"4648",
				"tcp",
				"Serf",
			],
			"nomad-serf-udp": [
				"4648",
				"4648",
				"udp",
				"Serf",
			],
			"ntp-udp": [
				"123",
				"123",
				"udp",
				"NTP",
			],
			"openvpn-https-tcp": [
				"443",
				"443",
				"tcp",
				"OpenVPN",
			],
			"openvpn-tcp": [
				"943",
				"943",
				"tcp",
				"OpenVPN",
			],
			"openvpn-udp": [
				"1194",
				"1194",
				"udp",
				"OpenVPN",
			],
			"oracle-db-tcp": [
				"1521",
				"1521",
				"tcp",
				"Oracle",
			],
			"postgresql-tcp": [
				"5432",
				"5432",
				"tcp",
				"PostgreSQL",
			],
			"prometheus-http-tcp": [
				"9090",
				"9090",
				"tcp",
				"Prometheus",
			],
			"prometheus-pushgateway-http-tcp": [
				"9091",
				"9091",
				"tcp",
				"Prometheus Pushgateway",
			],
			"puppet-tcp": [
				"8140",
				"8140",
				"tcp",
				"Puppet",
			],
			"puppetdb-tcp": [
				"8081",
				"8081",
				"tcp",
				"PuppetDB",
			],
			"rabbitmq-15672-tcp": [
				"15672",
				"15672",
				"tcp",
				"RabbitMQ",
			],
			"rabbitmq-25672-tcp": [
				"25672",
				"25672",
				"tcp",
				"RabbitMQ",
			],
			"rabbitmq-4369-tcp": [
				"4369",
				"4369",
				"tcp",
				"RabbitMQ epmd",
			],
			"rabbitmq-5671-tcp": [
				"5671",
				"5671",
				"tcp",
				"RabbitMQ",
			],
			"rabbitmq-5672-tcp": [
				"5672",
				"5672",
				"tcp",
				"RabbitMQ",
			],
			"rdp-tcp": [
				"3389",
				"3389",
				"tcp",
				"Remote Desktop",
			],
			"rdp-udp": [
				"3389",
				"3389",
				"udp",
				"Remote Desktop",
			],
			"redis-tcp": [
				"6379",
				"6379",
				"tcp",
				"Redis",
			],
			"redshift-tcp": [
				"5439",
				"5439",
				"tcp",
				"Redshift",
			],
			"solr-tcp": [
				"8983",
				"8987",
				"tcp",
				"Solr",
			],
			"splunk-hec-tcp": [
				"8088",
				"8088",
				"tcp",
				"Splunk HEC",
			],
			"splunk-indexer-tcp": [
				"9997",
				"9997",
				"tcp",
				"Splunk indexer",
			],
			"splunk-splunkd-tcp": [
				"8089",
				"8089",
				"tcp",
				"Splunkd",
			],
			"splunk-web-tcp": [
				"8000",
				"8000",
				"tcp",
				"Splunk Web",
			],
			"squid-proxy-tcp": [
				"3128",
				"3128",
				"tcp",
				"Squid default proxy",
			],
			"ssh-tcp": [
				"22",
				"22",
				"tcp",
				"SSH",
			],
			"storm-nimbus-tcp": [
				"6627",
				"6627",
				"tcp",
				"Nimbus",
			],
			"storm-supervisor-tcp": [
				"6700",
				"6703",
				"tcp",
				"Supervisor",
			],
			"storm-ui-tcp": [
				"8080",
				"8080",
				"tcp",
				"Storm UI",
			],
			"web-jmx-tcp": [
				"1099",
				"1099",
				"tcp",
				"JMX",
			],
			"winrm-http-tcp": [
				"5985",
				"5985",
				"tcp",
				"WinRM HTTP",
			],
			"winrm-https-tcp": [
				"5986",
				"5986",
				"tcp",
				"WinRM HTTPS",
			],
			"zipkin-admin-query-tcp": [
				"9901",
				"9901",
				"tcp",
				"Zipkin Admin port query",
			],
			"zipkin-admin-tcp": [
				"9990",
				"9990",
				"tcp",
				"Zipkin Admin port collector",
			],
			"zipkin-admin-web-tcp": [
				"9991",
				"9991",
				"tcp",
				"Zipkin Admin port web",
			],
			"zipkin-query-tcp": [
				"9411",
				"9411",
				"tcp",
				"Zipkin query port",
			],
			"zipkin-web-tcp": [
				"8080",
				"8080",
				"tcp",
				"Zipkin web port",
			],
			"zookeeper-2181-tcp": [
				"2181",
				"2181",
				"tcp",
				"Zookeeper",
			],
			"zookeeper-2888-tcp": [
				"2888",
				"2888",
				"tcp",
				"Zookeeper",
			],
			"zookeeper-3888-tcp": [
				"3888",
				"3888",
				"tcp",
				"Zookeeper",
			],
			"zookeeper-jmx-tcp": [
				"7199",
				"7199",
				"tcp",
				"JMX",
			],
		},
		"description":    "Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])",
		"module_address": "module.app_security_group.module.sg",
		"name":           "rules",
	},
	"module.app_security_group.module.sg:tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to security group",
		"module_address": "module.app_security_group.module.sg",
		"name":           "tags",
	},
	"module.app_security_group.module.sg:use_name_prefix": {
		"default":        true,
		"description":    "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation",
		"module_address": "module.app_security_group.module.sg",
		"name":           "use_name_prefix",
	},
	"module.app_security_group.module.sg:vpc_id": {
		"default":        null,
		"description":    "ID of the VPC where to create security group",
		"module_address": "module.app_security_group.module.sg",
		"name":           "vpc_id",
	},
	"module.app_security_group:auto_computed_egress_rules": {
		"default":        [],
		"description":    "List of computed egress rules to add automatically",
		"module_address": "module.app_security_group",
		"name":           "auto_computed_egress_rules",
	},
	"module.app_security_group:auto_computed_egress_with_self": {
		"default":        [],
		"description":    "List of maps defining computed egress rules with self to add automatically",
		"module_address": "module.app_security_group",
		"name":           "auto_computed_egress_with_self",
	},
	"module.app_security_group:auto_computed_ingress_rules": {
		"default":        [],
		"description":    "List of ingress rules to add automatically",
		"module_address": "module.app_security_group",
		"name":           "auto_computed_ingress_rules",
	},
	"module.app_security_group:auto_computed_ingress_with_self": {
		"default":        [],
		"description":    "List of maps defining computed ingress rules with self to add automatically",
		"module_address": "module.app_security_group",
		"name":           "auto_computed_ingress_with_self",
	},
	"module.app_security_group:auto_egress_rules": {
		"default": [
			"all-all",
		],
		"description":    "List of egress rules to add automatically",
		"module_address": "module.app_security_group",
		"name":           "auto_egress_rules",
	},
	"module.app_security_group:auto_egress_with_self": {
		"default":        [],
		"description":    "List of maps defining egress rules with self to add automatically",
		"module_address": "module.app_security_group",
		"name":           "auto_egress_with_self",
	},
	"module.app_security_group:auto_ingress_rules": {
		"default": [
			"http-80-tcp",
			"http-8080-tcp",
			"https-443-tcp",
			"web-jmx-tcp",
		],
		"description":    "List of ingress rules to add automatically",
		"module_address": "module.app_security_group",
		"name":           "auto_ingress_rules",
	},
	"module.app_security_group:auto_ingress_with_self": {
		"default": [
			{
				"rule": "all-all",
			},
		],
		"description":    "List of maps defining ingress rules with self to add automatically",
		"module_address": "module.app_security_group",
		"name":           "auto_ingress_with_self",
	},
	"module.app_security_group:auto_number_of_computed_egress_rules": {
		"default":        0,
		"description":    "Number of computed egress rules to create by name",
		"module_address": "module.app_security_group",
		"name":           "auto_number_of_computed_egress_rules",
	},
	"module.app_security_group:auto_number_of_computed_egress_with_self": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'self' is defined",
		"module_address": "module.app_security_group",
		"name":           "auto_number_of_computed_egress_with_self",
	},
	"module.app_security_group:auto_number_of_computed_ingress_rules": {
		"default":        0,
		"description":    "Number of computed ingress rules to create by name",
		"module_address": "module.app_security_group",
		"name":           "auto_number_of_computed_ingress_rules",
	},
	"module.app_security_group:auto_number_of_computed_ingress_with_self": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'self' is defined",
		"module_address": "module.app_security_group",
		"name":           "auto_number_of_computed_ingress_with_self",
	},
	"module.app_security_group:computed_egress_cidr_blocks": {
		"default": [
			"0.0.0.0/0",
		],
		"description":    "List of IPv4 CIDR ranges to use on all computed egress rules",
		"module_address": "module.app_security_group",
		"name":           "computed_egress_cidr_blocks",
	},
	"module.app_security_group:computed_egress_ipv6_cidr_blocks": {
		"default": [
			"::/0",
		],
		"description":    "List of IPv6 CIDR ranges to use on all computed egress rules",
		"module_address": "module.app_security_group",
		"name":           "computed_egress_ipv6_cidr_blocks",
	},
	"module.app_security_group:computed_egress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules",
		"module_address": "module.app_security_group",
		"name":           "computed_egress_prefix_list_ids",
	},
	"module.app_security_group:computed_egress_rules": {
		"default":        [],
		"description":    "List of computed egress rules to create by name",
		"module_address": "module.app_security_group",
		"name":           "computed_egress_rules",
	},
	"module.app_security_group:computed_egress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "computed_egress_with_cidr_blocks",
	},
	"module.app_security_group:computed_egress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "computed_egress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group:computed_egress_with_self": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'self' is defined",
		"module_address": "module.app_security_group",
		"name":           "computed_egress_with_self",
	},
	"module.app_security_group:computed_egress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group",
		"name":           "computed_egress_with_source_security_group_id",
	},
	"module.app_security_group:computed_ingress_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv4 CIDR ranges to use on all computed ingress rules",
		"module_address": "module.app_security_group",
		"name":           "computed_ingress_cidr_blocks",
	},
	"module.app_security_group:computed_ingress_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv6 CIDR ranges to use on all computed ingress rules",
		"module_address": "module.app_security_group",
		"name":           "computed_ingress_ipv6_cidr_blocks",
	},
	"module.app_security_group:computed_ingress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules",
		"module_address": "module.app_security_group",
		"name":           "computed_ingress_prefix_list_ids",
	},
	"module.app_security_group:computed_ingress_rules": {
		"default":        [],
		"description":    "List of computed ingress rules to create by name",
		"module_address": "module.app_security_group",
		"name":           "computed_ingress_rules",
	},
	"module.app_security_group:computed_ingress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "computed_ingress_with_cidr_blocks",
	},
	"module.app_security_group:computed_ingress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "computed_ingress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group:computed_ingress_with_self": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'self' is defined",
		"module_address": "module.app_security_group",
		"name":           "computed_ingress_with_self",
	},
	"module.app_security_group:computed_ingress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group",
		"name":           "computed_ingress_with_source_security_group_id",
	},
	"module.app_security_group:create": {
		"default":        true,
		"description":    "Whether to create security group and all rules",
		"module_address": "module.app_security_group",
		"name":           "create",
	},
	"module.app_security_group:description": {
		"default":        "Security Group managed by Terraform",
		"description":    "Description of security group",
		"module_address": "module.app_security_group",
		"name":           "description",
	},
	"module.app_security_group:egress_cidr_blocks": {
		"default": [
			"0.0.0.0/0",
		],
		"description":    "List of IPv4 CIDR ranges to use on all egress rules",
		"module_address": "module.app_security_group",
		"name":           "egress_cidr_blocks",
	},
	"module.app_security_group:egress_ipv6_cidr_blocks": {
		"default": [
			"::/0",
		],
		"description":    "List of IPv6 CIDR ranges to use on all egress rules",
		"module_address": "module.app_security_group",
		"name":           "egress_ipv6_cidr_blocks",
	},
	"module.app_security_group:egress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules",
		"module_address": "module.app_security_group",
		"name":           "egress_prefix_list_ids",
	},
	"module.app_security_group:egress_rules": {
		"default":        [],
		"description":    "List of egress rules to create by name",
		"module_address": "module.app_security_group",
		"name":           "egress_rules",
	},
	"module.app_security_group:egress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "egress_with_cidr_blocks",
	},
	"module.app_security_group:egress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "egress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group:egress_with_self": {
		"default":        [],
		"description":    "List of egress rules to create where 'self' is defined",
		"module_address": "module.app_security_group",
		"name":           "egress_with_self",
	},
	"module.app_security_group:egress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group",
		"name":           "egress_with_source_security_group_id",
	},
	"module.app_security_group:ingress_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv4 CIDR ranges to use on all ingress rules",
		"module_address": "module.app_security_group",
		"name":           "ingress_cidr_blocks",
	},
	"module.app_security_group:ingress_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv6 CIDR ranges to use on all ingress rules",
		"module_address": "module.app_security_group",
		"name":           "ingress_ipv6_cidr_blocks",
	},
	"module.app_security_group:ingress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules",
		"module_address": "module.app_security_group",
		"name":           "ingress_prefix_list_ids",
	},
	"module.app_security_group:ingress_rules": {
		"default":        [],
		"description":    "List of ingress rules to create by name",
		"module_address": "module.app_security_group",
		"name":           "ingress_rules",
	},
	"module.app_security_group:ingress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "ingress_with_cidr_blocks",
	},
	"module.app_security_group:ingress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "ingress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group:ingress_with_self": {
		"default":        [],
		"description":    "List of ingress rules to create where 'self' is defined",
		"module_address": "module.app_security_group",
		"name":           "ingress_with_self",
	},
	"module.app_security_group:ingress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group",
		"name":           "ingress_with_source_security_group_id",
	},
	"module.app_security_group:name": {
		"default":        null,
		"description":    "Name of security group",
		"module_address": "module.app_security_group",
		"name":           "name",
	},
	"module.app_security_group:number_of_computed_egress_cidr_blocks": {
		"default":        0,
		"description":    "Number of IPv4 CIDR ranges to use on all computed egress rules",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_egress_cidr_blocks",
	},
	"module.app_security_group:number_of_computed_egress_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of IPv6 CIDR ranges to use on all computed egress rules",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_egress_ipv6_cidr_blocks",
	},
	"module.app_security_group:number_of_computed_egress_prefix_list_ids": {
		"default":        0,
		"description":    "Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_egress_prefix_list_ids",
	},
	"module.app_security_group:number_of_computed_egress_rules": {
		"default":        0,
		"description":    "Number of computed egress rules to create by name",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_egress_rules",
	},
	"module.app_security_group:number_of_computed_egress_with_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_egress_with_cidr_blocks",
	},
	"module.app_security_group:number_of_computed_egress_with_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_egress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group:number_of_computed_egress_with_self": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'self' is defined",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_egress_with_self",
	},
	"module.app_security_group:number_of_computed_egress_with_source_security_group_id": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_egress_with_source_security_group_id",
	},
	"module.app_security_group:number_of_computed_ingress_cidr_blocks": {
		"default":        0,
		"description":    "Number of IPv4 CIDR ranges to use on all computed ingress rules",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_ingress_cidr_blocks",
	},
	"module.app_security_group:number_of_computed_ingress_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of IPv6 CIDR ranges to use on all computed ingress rules",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_ingress_ipv6_cidr_blocks",
	},
	"module.app_security_group:number_of_computed_ingress_prefix_list_ids": {
		"default":        0,
		"description":    "Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_ingress_prefix_list_ids",
	},
	"module.app_security_group:number_of_computed_ingress_rules": {
		"default":        0,
		"description":    "Number of computed ingress rules to create by name",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_ingress_rules",
	},
	"module.app_security_group:number_of_computed_ingress_with_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_ingress_with_cidr_blocks",
	},
	"module.app_security_group:number_of_computed_ingress_with_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_ingress_with_ipv6_cidr_blocks",
	},
	"module.app_security_group:number_of_computed_ingress_with_self": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'self' is defined",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_ingress_with_self",
	},
	"module.app_security_group:number_of_computed_ingress_with_source_security_group_id": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.app_security_group",
		"name":           "number_of_computed_ingress_with_source_security_group_id",
	},
	"module.app_security_group:revoke_rules_on_delete": {
		"default":        false,
		"description":    "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR.",
		"module_address": "module.app_security_group",
		"name":           "revoke_rules_on_delete",
	},
	"module.app_security_group:tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to security group",
		"module_address": "module.app_security_group",
		"name":           "tags",
	},
	"module.app_security_group:use_name_prefix": {
		"default":        true,
		"description":    "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation",
		"module_address": "module.app_security_group",
		"name":           "use_name_prefix",
	},
	"module.app_security_group:vpc_id": {
		"default":        null,
		"description":    "ID of the VPC where to create security group",
		"module_address": "module.app_security_group",
		"name":           "vpc_id",
	},
	"module.ec2_instances:instance_count": {
		"default":        null,
		"description":    "Number of EC2 instances to deploy",
		"module_address": "module.ec2_instances",
		"name":           "instance_count",
	},
	"module.ec2_instances:instance_type": {
		"default":        null,
		"description":    "Type of EC2 instance to use",
		"module_address": "module.ec2_instances",
		"name":           "instance_type",
	},
	"module.ec2_instances:security_group_ids": {
		"default":        null,
		"description":    "Security group IDs for EC2 instances",
		"module_address": "module.ec2_instances",
		"name":           "security_group_ids",
	},
	"module.ec2_instances:subnet_ids": {
		"default":        null,
		"description":    "Subnet IDs for EC2 instances",
		"module_address": "module.ec2_instances",
		"name":           "subnet_ids",
	},
	"module.ec2_instances:tags": {
		"default":        {},
		"description":    "Tags for instances",
		"module_address": "module.ec2_instances",
		"name":           "tags",
	},
	"module.elb_http.module.elb:access_logs": {
		"default":        {},
		"description":    "An access logs block",
		"module_address": "module.elb_http.module.elb",
		"name":           "access_logs",
	},
	"module.elb_http.module.elb:connection_draining": {
		"default":        false,
		"description":    "Boolean to enable connection draining",
		"module_address": "module.elb_http.module.elb",
		"name":           "connection_draining",
	},
	"module.elb_http.module.elb:connection_draining_timeout": {
		"default":        300,
		"description":    "The time in seconds to allow for connections to drain",
		"module_address": "module.elb_http.module.elb",
		"name":           "connection_draining_timeout",
	},
	"module.elb_http.module.elb:create_elb": {
		"default":        true,
		"description":    "Create the elb or not",
		"module_address": "module.elb_http.module.elb",
		"name":           "create_elb",
	},
	"module.elb_http.module.elb:cross_zone_load_balancing": {
		"default":        true,
		"description":    "Enable cross-zone load balancing",
		"module_address": "module.elb_http.module.elb",
		"name":           "cross_zone_load_balancing",
	},
	"module.elb_http.module.elb:health_check": {
		"default":        null,
		"description":    "A health check block",
		"module_address": "module.elb_http.module.elb",
		"name":           "health_check",
	},
	"module.elb_http.module.elb:idle_timeout": {
		"default":        60,
		"description":    "The time in seconds that the connection is allowed to be idle",
		"module_address": "module.elb_http.module.elb",
		"name":           "idle_timeout",
	},
	"module.elb_http.module.elb:internal": {
		"default":        null,
		"description":    "If true, ELB will be an internal ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "internal",
	},
	"module.elb_http.module.elb:listener": {
		"default":        null,
		"description":    "A list of listener blocks",
		"module_address": "module.elb_http.module.elb",
		"name":           "listener",
	},
	"module.elb_http.module.elb:name": {
		"default":        null,
		"description":    "The name of the ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "name",
	},
	"module.elb_http.module.elb:name_prefix": {
		"default":        null,
		"description":    "The prefix name of the ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "name_prefix",
	},
	"module.elb_http.module.elb:security_groups": {
		"default":        null,
		"description":    "A list of security group IDs to assign to the ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "security_groups",
	},
	"module.elb_http.module.elb:subnets": {
		"default":        null,
		"description":    "A list of subnet IDs to attach to the ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "subnets",
	},
	"module.elb_http.module.elb:tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to the resource",
		"module_address": "module.elb_http.module.elb",
		"name":           "tags",
	},
	"module.elb_http.module.elb_attachment:create_attachment": {
		"default":        true,
		"description":    "Create the elb attachment or not",
		"module_address": "module.elb_http.module.elb_attachment",
		"name":           "create_attachment",
	},
	"module.elb_http.module.elb_attachment:elb": {
		"default":        null,
		"description":    "The name of the ELB",
		"module_address": "module.elb_http.module.elb_attachment",
		"name":           "elb",
	},
	"module.elb_http.module.elb_attachment:instances": {
		"default":        null,
		"description":    "List of instances ID to place in the ELB pool",
		"module_address": "module.elb_http.module.elb_attachment",
		"name":           "instances",
	},
	"module.elb_http.module.elb_attachment:number_of_instances": {
		"default":        null,
		"description":    "Number of instances ID to place in the ELB pool",
		"module_address": "module.elb_http.module.elb_attachment",
		"name":           "number_of_instances",
	},
	"module.elb_http:access_logs": {
		"default":        {},
		"description":    "An access logs block",
		"module_address": "module.elb_http",
		"name":           "access_logs",
	},
	"module.elb_http:connection_draining": {
		"default":        false,
		"description":    "Boolean to enable connection draining",
		"module_address": "module.elb_http",
		"name":           "connection_draining",
	},
	"module.elb_http:connection_draining_timeout": {
		"default":        300,
		"description":    "The time in seconds to allow for connections to drain",
		"module_address": "module.elb_http",
		"name":           "connection_draining_timeout",
	},
	"module.elb_http:create_elb": {
		"default":        true,
		"description":    "Create the elb or not",
		"module_address": "module.elb_http",
		"name":           "create_elb",
	},
	"module.elb_http:cross_zone_load_balancing": {
		"default":        true,
		"description":    "Enable cross-zone load balancing",
		"module_address": "module.elb_http",
		"name":           "cross_zone_load_balancing",
	},
	"module.elb_http:health_check": {
		"default":        null,
		"description":    "A health check block",
		"module_address": "module.elb_http",
		"name":           "health_check",
	},
	"module.elb_http:idle_timeout": {
		"default":        60,
		"description":    "The time in seconds that the connection is allowed to be idle",
		"module_address": "module.elb_http",
		"name":           "idle_timeout",
	},
	"module.elb_http:instances": {
		"default":        [],
		"description":    "List of instances ID to place in the ELB pool",
		"module_address": "module.elb_http",
		"name":           "instances",
	},
	"module.elb_http:internal": {
		"default":        false,
		"description":    "If true, ELB will be an internal ELB",
		"module_address": "module.elb_http",
		"name":           "internal",
	},
	"module.elb_http:listener": {
		"default":        null,
		"description":    "A list of listener blocks",
		"module_address": "module.elb_http",
		"name":           "listener",
	},
	"module.elb_http:name": {
		"default":        null,
		"description":    "The name of the ELB",
		"module_address": "module.elb_http",
		"name":           "name",
	},
	"module.elb_http:name_prefix": {
		"default":        null,
		"description":    "The prefix name of the ELB",
		"module_address": "module.elb_http",
		"name":           "name_prefix",
	},
	"module.elb_http:number_of_instances": {
		"default":        0,
		"description":    "Number of instances to attach to ELB",
		"module_address": "module.elb_http",
		"name":           "number_of_instances",
	},
	"module.elb_http:security_groups": {
		"default":        null,
		"description":    "A list of security group IDs to assign to the ELB",
		"module_address": "module.elb_http",
		"name":           "security_groups",
	},
	"module.elb_http:subnets": {
		"default":        null,
		"description":    "A list of subnet IDs to attach to the ELB",
		"module_address": "module.elb_http",
		"name":           "subnets",
	},
	"module.elb_http:tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to the resource",
		"module_address": "module.elb_http",
		"name":           "tags",
	},
	"module.lb_security_group.module.sg:auto_groups": {
		"default": {
			"activemq": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"activemq-5671-tcp",
					"activemq-8883-tcp",
					"activemq-61614-tcp",
					"activemq-61617-tcp",
					"activemq-61619-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"alertmanager": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"alertmanager-9093-tcp",
					"alertmanager-9094-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"carbon-relay-ng": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"carbon-line-in-tcp",
					"carbon-line-in-udp",
					"carbon-pickle-tcp",
					"carbon-pickle-udp",
					"carbon-gui-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"cassandra": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"cassandra-clients-tcp",
					"cassandra-thrift-clients-tcp",
					"cassandra-jmx-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"consul": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"consul-tcp",
					"consul-cli-rpc-tcp",
					"consul-webui-tcp",
					"consul-dns-tcp",
					"consul-dns-udp",
					"consul-serf-lan-tcp",
					"consul-serf-lan-udp",
					"consul-serf-wan-tcp",
					"consul-serf-wan-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"docker-swarm": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"docker-swarm-mngmt-tcp",
					"docker-swarm-node-tcp",
					"docker-swarm-node-udp",
					"docker-swarm-overlay-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"elasticsearch": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"elasticsearch-rest-tcp",
					"elasticsearch-java-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"grafana": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"grafana-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"graphite-statsd": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"graphite-webui",
					"graphite-2003-tcp",
					"graphite-2004-tcp",
					"graphite-2023-tcp",
					"graphite-2024-tcp",
					"graphite-8080-tcp",
					"graphite-8125-tcp",
					"graphite-8125-udp",
					"graphite-8126-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"http-80": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"http-80-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"http-8080": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"http-8080-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"https-443": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"https-443-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"https-8443": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"https-8443-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ipsec-4500": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ipsec-4500-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ipsec-500": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ipsec-500-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"kafka": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"kafka-broker-tcp",
					"kafka-broker-tls-tcp",
					"kafka-jmx-exporter-tcp",
					"kafka-node-exporter-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"kibana": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"kibana-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"kubernetes-api": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"kubernetes-api-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ldap": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ldap-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ldaps": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ldaps-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"logstash": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"logstash-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"memcached": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"memcached-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"minio": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"minio-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"mongodb": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"mongodb-27017-tcp",
					"mongodb-27018-tcp",
					"mongodb-27019-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"mssql": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"mssql-tcp",
					"mssql-udp",
					"mssql-analytics-tcp",
					"mssql-broker-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"mysql": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"mysql-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"nfs": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"nfs-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"nomad": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"nomad-http-tcp",
					"nomad-rpc-tcp",
					"nomad-serf-tcp",
					"nomad-serf-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ntp": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ntp-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"openvpn": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"openvpn-udp",
					"openvpn-tcp",
					"openvpn-https-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"oracle-db": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"oracle-db-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"postgresql": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"postgresql-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"prometheus": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"prometheus-http-tcp",
					"prometheus-pushgateway-http-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"puppet": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"puppet-tcp",
					"puppetdb-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"rabbitmq": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"rabbitmq-4369-tcp",
					"rabbitmq-5671-tcp",
					"rabbitmq-5672-tcp",
					"rabbitmq-15672-tcp",
					"rabbitmq-25672-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"rdp": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"rdp-tcp",
					"rdp-udp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"redis": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"redis-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"redshift": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"redshift-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"solr": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"solr-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"splunk": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"splunk-indexer-tcp",
					"splunk-clients-tcp",
					"splunk-splunkd-tcp",
					"splunk-hec-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"squid": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"squid-proxy-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"ssh": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"ssh-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"storm": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"storm-nimbus-tcp",
					"storm-ui-tcp",
					"storm-supervisor-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"web": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"http-80-tcp",
					"http-8080-tcp",
					"https-443-tcp",
					"web-jmx-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"winrm": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"winrm-http-tcp",
					"winrm-https-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"zipkin": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"zipkin-admin-tcp",
					"zipkin-admin-query-tcp",
					"zipkin-admin-web-tcp",
					"zipkin-query-tcp",
					"zipkin-web-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
			"zookeeper": {
				"egress_rules": [
					"all-all",
				],
				"ingress_rules": [
					"zookeeper-2181-tcp",
					"zookeeper-2888-tcp",
					"zookeeper-3888-tcp",
					"zookeeper-jmx-tcp",
				],
				"ingress_with_self": [
					"all-all",
				],
			},
		},
		"description":    "Map of groups of security group rules to use to generate modules (see update_groups.sh)",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "auto_groups",
	},
	"module.lb_security_group.module.sg:computed_egress_rules": {
		"default":        [],
		"description":    "List of computed egress rules to create by name",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_egress_rules",
	},
	"module.lb_security_group.module.sg:computed_egress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_egress_with_cidr_blocks",
	},
	"module.lb_security_group.module.sg:computed_egress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_egress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group.module.sg:computed_egress_with_self": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_egress_with_self",
	},
	"module.lb_security_group.module.sg:computed_egress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_egress_with_source_security_group_id",
	},
	"module.lb_security_group.module.sg:computed_ingress_rules": {
		"default":        [],
		"description":    "List of computed ingress rules to create by name",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_ingress_rules",
	},
	"module.lb_security_group.module.sg:computed_ingress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_ingress_with_cidr_blocks",
	},
	"module.lb_security_group.module.sg:computed_ingress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_ingress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group.module.sg:computed_ingress_with_self": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_ingress_with_self",
	},
	"module.lb_security_group.module.sg:computed_ingress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "computed_ingress_with_source_security_group_id",
	},
	"module.lb_security_group.module.sg:create": {
		"default":        true,
		"description":    "Whether to create security group and all rules",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "create",
	},
	"module.lb_security_group.module.sg:description": {
		"default":        "Security Group managed by Terraform",
		"description":    "Description of security group",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "description",
	},
	"module.lb_security_group.module.sg:egress_cidr_blocks": {
		"default": [
			"0.0.0.0/0",
		],
		"description":    "List of IPv4 CIDR ranges to use on all egress rules",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "egress_cidr_blocks",
	},
	"module.lb_security_group.module.sg:egress_ipv6_cidr_blocks": {
		"default": [
			"::/0",
		],
		"description":    "List of IPv6 CIDR ranges to use on all egress rules",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "egress_ipv6_cidr_blocks",
	},
	"module.lb_security_group.module.sg:egress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "egress_prefix_list_ids",
	},
	"module.lb_security_group.module.sg:egress_rules": {
		"default":        [],
		"description":    "List of egress rules to create by name",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "egress_rules",
	},
	"module.lb_security_group.module.sg:egress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "egress_with_cidr_blocks",
	},
	"module.lb_security_group.module.sg:egress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "egress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group.module.sg:egress_with_self": {
		"default":        [],
		"description":    "List of egress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "egress_with_self",
	},
	"module.lb_security_group.module.sg:egress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "egress_with_source_security_group_id",
	},
	"module.lb_security_group.module.sg:ingress_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv4 CIDR ranges to use on all ingress rules",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_cidr_blocks",
	},
	"module.lb_security_group.module.sg:ingress_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv6 CIDR ranges to use on all ingress rules",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_ipv6_cidr_blocks",
	},
	"module.lb_security_group.module.sg:ingress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_prefix_list_ids",
	},
	"module.lb_security_group.module.sg:ingress_rules": {
		"default":        [],
		"description":    "List of ingress rules to create by name",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_rules",
	},
	"module.lb_security_group.module.sg:ingress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_with_cidr_blocks",
	},
	"module.lb_security_group.module.sg:ingress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group.module.sg:ingress_with_self": {
		"default":        [],
		"description":    "List of ingress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_with_self",
	},
	"module.lb_security_group.module.sg:ingress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "ingress_with_source_security_group_id",
	},
	"module.lb_security_group.module.sg:name": {
		"default":        null,
		"description":    "Name of security group",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "name",
	},
	"module.lb_security_group.module.sg:number_of_computed_egress_rules": {
		"default":        0,
		"description":    "Number of computed egress rules to create by name",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_egress_rules",
	},
	"module.lb_security_group.module.sg:number_of_computed_egress_with_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_egress_with_cidr_blocks",
	},
	"module.lb_security_group.module.sg:number_of_computed_egress_with_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_egress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group.module.sg:number_of_computed_egress_with_self": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_egress_with_self",
	},
	"module.lb_security_group.module.sg:number_of_computed_egress_with_source_security_group_id": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_egress_with_source_security_group_id",
	},
	"module.lb_security_group.module.sg:number_of_computed_ingress_rules": {
		"default":        0,
		"description":    "Number of computed ingress rules to create by name",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_ingress_rules",
	},
	"module.lb_security_group.module.sg:number_of_computed_ingress_with_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_ingress_with_cidr_blocks",
	},
	"module.lb_security_group.module.sg:number_of_computed_ingress_with_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_ingress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group.module.sg:number_of_computed_ingress_with_self": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_ingress_with_self",
	},
	"module.lb_security_group.module.sg:number_of_computed_ingress_with_source_security_group_id": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "number_of_computed_ingress_with_source_security_group_id",
	},
	"module.lb_security_group.module.sg:revoke_rules_on_delete": {
		"default":        false,
		"description":    "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR.",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "revoke_rules_on_delete",
	},
	"module.lb_security_group.module.sg:rules": {
		"default": {
			"_": [
				"",
				"",
				"",
			],
			"activemq-5671-tcp": [
				"5671",
				"5671",
				"tcp",
				"ActiveMQ AMQP",
			],
			"activemq-61614-tcp": [
				"61614",
				"61614",
				"tcp",
				"ActiveMQ STOMP",
			],
			"activemq-61617-tcp": [
				"61617",
				"61617",
				"tcp",
				"ActiveMQ OpenWire",
			],
			"activemq-61619-tcp": [
				"61619",
				"61619",
				"tcp",
				"ActiveMQ WebSocket",
			],
			"activemq-8883-tcp": [
				"8883",
				"8883",
				"tcp",
				"ActiveMQ MQTT",
			],
			"alertmanager-9093-tcp": [
				"9093",
				"9093",
				"tcp",
				"Alert Manager",
			],
			"alertmanager-9094-tcp": [
				"9094",
				"9094",
				"tcp",
				"Alert Manager Cluster",
			],
			"all-all": [
				"-1",
				"-1",
				"-1",
				"All protocols",
			],
			"all-icmp": [
				"-1",
				"-1",
				"icmp",
				"All IPV4 ICMP",
			],
			"all-ipv6-icmp": [
				"-1",
				"-1",
				"58",
				"All IPV6 ICMP",
			],
			"all-tcp": [
				"0",
				"65535",
				"tcp",
				"All TCP ports",
			],
			"all-udp": [
				"0",
				"65535",
				"udp",
				"All UDP ports",
			],
			"carbon-admin-tcp": [
				"2004",
				"2004",
				"tcp",
				"Carbon admin",
			],
			"carbon-gui-udp": [
				"8081",
				"8081",
				"tcp",
				"Carbon GUI",
			],
			"carbon-line-in-tcp": [
				"2003",
				"2003",
				"tcp",
				"Carbon line-in",
			],
			"carbon-line-in-udp": [
				"2003",
				"2003",
				"udp",
				"Carbon line-in",
			],
			"carbon-pickle-tcp": [
				"2013",
				"2013",
				"tcp",
				"Carbon pickle",
			],
			"carbon-pickle-udp": [
				"2013",
				"2013",
				"udp",
				"Carbon pickle",
			],
			"cassandra-clients-tcp": [
				"9042",
				"9042",
				"tcp",
				"Cassandra clients",
			],
			"cassandra-jmx-tcp": [
				"7199",
				"7199",
				"tcp",
				"JMX",
			],
			"cassandra-thrift-clients-tcp": [
				"9160",
				"9160",
				"tcp",
				"Cassandra Thrift clients",
			],
			"consul-cli-rpc-tcp": [
				"8400",
				"8400",
				"tcp",
				"Consul CLI RPC",
			],
			"consul-dns-tcp": [
				"8600",
				"8600",
				"tcp",
				"Consul DNS",
			],
			"consul-dns-udp": [
				"8600",
				"8600",
				"udp",
				"Consul DNS",
			],
			"consul-serf-lan-tcp": [
				"8301",
				"8301",
				"tcp",
				"Serf LAN",
			],
			"consul-serf-lan-udp": [
				"8301",
				"8301",
				"udp",
				"Serf LAN",
			],
			"consul-serf-wan-tcp": [
				"8302",
				"8302",
				"tcp",
				"Serf WAN",
			],
			"consul-serf-wan-udp": [
				"8302",
				"8302",
				"udp",
				"Serf WAN",
			],
			"consul-tcp": [
				"8300",
				"8300",
				"tcp",
				"Consul server",
			],
			"consul-webui-tcp": [
				"8500",
				"8500",
				"tcp",
				"Consul web UI",
			],
			"dns-tcp": [
				"53",
				"53",
				"tcp",
				"DNS",
			],
			"dns-udp": [
				"53",
				"53",
				"udp",
				"DNS",
			],
			"docker-swarm-mngmt-tcp": [
				"2377",
				"2377",
				"tcp",
				"Docker Swarm cluster management",
			],
			"docker-swarm-node-tcp": [
				"7946",
				"7946",
				"tcp",
				"Docker Swarm node",
			],
			"docker-swarm-node-udp": [
				"7946",
				"7946",
				"udp",
				"Docker Swarm node",
			],
			"docker-swarm-overlay-udp": [
				"4789",
				"4789",
				"udp",
				"Docker Swarm Overlay Network Traffic",
			],
			"elasticsearch-java-tcp": [
				"9300",
				"9300",
				"tcp",
				"Elasticsearch Java interface",
			],
			"elasticsearch-rest-tcp": [
				"9200",
				"9200",
				"tcp",
				"Elasticsearch REST interface",
			],
			"grafana-tcp": [
				"3000",
				"3000",
				"tcp",
				"Grafana Dashboard",
			],
			"graphite-2003-tcp": [
				"2003",
				"2003",
				"tcp",
				"Carbon receiver plain text",
			],
			"graphite-2004-tcp": [
				"2004",
				"2004",
				"tcp",
				"Carbon receiver pickle",
			],
			"graphite-2023-tcp": [
				"2023",
				"2023",
				"tcp",
				"Carbon aggregator plaintext",
			],
			"graphite-2024-tcp": [
				"2024",
				"2024",
				"tcp",
				"Carbon aggregator pickle",
			],
			"graphite-8080-tcp": [
				"8080",
				"8080",
				"tcp",
				"Graphite gunicorn port",
			],
			"graphite-8125-tcp": [
				"8125",
				"8125",
				"tcp",
				"Statsd TCP",
			],
			"graphite-8125-udp": [
				"8125",
				"8125",
				"udp",
				"Statsd UDP default",
			],
			"graphite-8126-tcp": [
				"8126",
				"8126",
				"tcp",
				"Statsd admin",
			],
			"graphite-webui": [
				"80",
				"80",
				"tcp",
				"Graphite admin interface",
			],
			"http-80-tcp": [
				"80",
				"80",
				"tcp",
				"HTTP",
			],
			"http-8080-tcp": [
				"8080",
				"8080",
				"tcp",
				"HTTP",
			],
			"https-443-tcp": [
				"443",
				"443",
				"tcp",
				"HTTPS",
			],
			"https-8443-tcp": [
				"8443",
				"8443",
				"tcp",
				"HTTPS",
			],
			"ipsec-4500-udp": [
				"4500",
				"4500",
				"udp",
				"IPSEC NAT-T",
			],
			"ipsec-500-udp": [
				"500",
				"500",
				"udp",
				"IPSEC ISAKMP",
			],
			"kafka-broker-tcp": [
				"9092",
				"9092",
				"tcp",
				"Kafka broker 0.8.2+",
			],
			"kafka-broker-tls-tcp": [
				"9094",
				"9094",
				"tcp",
				"Kafka TLS enabled broker 0.8.2+",
			],
			"kafka-jmx-exporter-tcp": [
				"11001",
				"11001",
				"tcp",
				"Kafka JMX Exporter",
			],
			"kafka-node-exporter-tcp": [
				"11002",
				"11002",
				"tcp",
				"Kafka Node Exporter",
			],
			"kibana-tcp": [
				"5601",
				"5601",
				"tcp",
				"Kibana Web Interface",
			],
			"kubernetes-api-tcp": [
				"6443",
				"6443",
				"tcp",
				"Kubernetes API Server",
			],
			"ldap-tcp": [
				"389",
				"389",
				"tcp",
				"LDAP",
			],
			"ldaps-tcp": [
				"636",
				"636",
				"tcp",
				"LDAPS",
			],
			"logstash-tcp": [
				"5044",
				"5044",
				"tcp",
				"Logstash",
			],
			"memcached-tcp": [
				"11211",
				"11211",
				"tcp",
				"Memcached",
			],
			"minio-tcp": [
				"9000",
				"9000",
				"tcp",
				"MinIO",
			],
			"mongodb-27017-tcp": [
				"27017",
				"27017",
				"tcp",
				"MongoDB",
			],
			"mongodb-27018-tcp": [
				"27018",
				"27018",
				"tcp",
				"MongoDB shard",
			],
			"mongodb-27019-tcp": [
				"27019",
				"27019",
				"tcp",
				"MongoDB config server",
			],
			"mssql-analytics-tcp": [
				"2383",
				"2383",
				"tcp",
				"MSSQL Analytics",
			],
			"mssql-broker-tcp": [
				"4022",
				"4022",
				"tcp",
				"MSSQL Broker",
			],
			"mssql-tcp": [
				"1433",
				"1433",
				"tcp",
				"MSSQL Server",
			],
			"mssql-udp": [
				"1434",
				"1434",
				"udp",
				"MSSQL Browser",
			],
			"mysql-tcp": [
				"3306",
				"3306",
				"tcp",
				"MySQL/Aurora",
			],
			"nfs-tcp": [
				"2049",
				"2049",
				"tcp",
				"NFS/EFS",
			],
			"nomad-http-tcp": [
				"4646",
				"4646",
				"tcp",
				"Nomad HTTP",
			],
			"nomad-rpc-tcp": [
				"4647",
				"4647",
				"tcp",
				"Nomad RPC",
			],
			"nomad-serf-tcp": [
				"4648",
				"4648",
				"tcp",
				"Serf",
			],
			"nomad-serf-udp": [
				"4648",
				"4648",
				"udp",
				"Serf",
			],
			"ntp-udp": [
				"123",
				"123",
				"udp",
				"NTP",
			],
			"openvpn-https-tcp": [
				"443",
				"443",
				"tcp",
				"OpenVPN",
			],
			"openvpn-tcp": [
				"943",
				"943",
				"tcp",
				"OpenVPN",
			],
			"openvpn-udp": [
				"1194",
				"1194",
				"udp",
				"OpenVPN",
			],
			"oracle-db-tcp": [
				"1521",
				"1521",
				"tcp",
				"Oracle",
			],
			"postgresql-tcp": [
				"5432",
				"5432",
				"tcp",
				"PostgreSQL",
			],
			"prometheus-http-tcp": [
				"9090",
				"9090",
				"tcp",
				"Prometheus",
			],
			"prometheus-pushgateway-http-tcp": [
				"9091",
				"9091",
				"tcp",
				"Prometheus Pushgateway",
			],
			"puppet-tcp": [
				"8140",
				"8140",
				"tcp",
				"Puppet",
			],
			"puppetdb-tcp": [
				"8081",
				"8081",
				"tcp",
				"PuppetDB",
			],
			"rabbitmq-15672-tcp": [
				"15672",
				"15672",
				"tcp",
				"RabbitMQ",
			],
			"rabbitmq-25672-tcp": [
				"25672",
				"25672",
				"tcp",
				"RabbitMQ",
			],
			"rabbitmq-4369-tcp": [
				"4369",
				"4369",
				"tcp",
				"RabbitMQ epmd",
			],
			"rabbitmq-5671-tcp": [
				"5671",
				"5671",
				"tcp",
				"RabbitMQ",
			],
			"rabbitmq-5672-tcp": [
				"5672",
				"5672",
				"tcp",
				"RabbitMQ",
			],
			"rdp-tcp": [
				"3389",
				"3389",
				"tcp",
				"Remote Desktop",
			],
			"rdp-udp": [
				"3389",
				"3389",
				"udp",
				"Remote Desktop",
			],
			"redis-tcp": [
				"6379",
				"6379",
				"tcp",
				"Redis",
			],
			"redshift-tcp": [
				"5439",
				"5439",
				"tcp",
				"Redshift",
			],
			"solr-tcp": [
				"8983",
				"8987",
				"tcp",
				"Solr",
			],
			"splunk-hec-tcp": [
				"8088",
				"8088",
				"tcp",
				"Splunk HEC",
			],
			"splunk-indexer-tcp": [
				"9997",
				"9997",
				"tcp",
				"Splunk indexer",
			],
			"splunk-splunkd-tcp": [
				"8089",
				"8089",
				"tcp",
				"Splunkd",
			],
			"splunk-web-tcp": [
				"8000",
				"8000",
				"tcp",
				"Splunk Web",
			],
			"squid-proxy-tcp": [
				"3128",
				"3128",
				"tcp",
				"Squid default proxy",
			],
			"ssh-tcp": [
				"22",
				"22",
				"tcp",
				"SSH",
			],
			"storm-nimbus-tcp": [
				"6627",
				"6627",
				"tcp",
				"Nimbus",
			],
			"storm-supervisor-tcp": [
				"6700",
				"6703",
				"tcp",
				"Supervisor",
			],
			"storm-ui-tcp": [
				"8080",
				"8080",
				"tcp",
				"Storm UI",
			],
			"web-jmx-tcp": [
				"1099",
				"1099",
				"tcp",
				"JMX",
			],
			"winrm-http-tcp": [
				"5985",
				"5985",
				"tcp",
				"WinRM HTTP",
			],
			"winrm-https-tcp": [
				"5986",
				"5986",
				"tcp",
				"WinRM HTTPS",
			],
			"zipkin-admin-query-tcp": [
				"9901",
				"9901",
				"tcp",
				"Zipkin Admin port query",
			],
			"zipkin-admin-tcp": [
				"9990",
				"9990",
				"tcp",
				"Zipkin Admin port collector",
			],
			"zipkin-admin-web-tcp": [
				"9991",
				"9991",
				"tcp",
				"Zipkin Admin port web",
			],
			"zipkin-query-tcp": [
				"9411",
				"9411",
				"tcp",
				"Zipkin query port",
			],
			"zipkin-web-tcp": [
				"8080",
				"8080",
				"tcp",
				"Zipkin web port",
			],
			"zookeeper-2181-tcp": [
				"2181",
				"2181",
				"tcp",
				"Zookeeper",
			],
			"zookeeper-2888-tcp": [
				"2888",
				"2888",
				"tcp",
				"Zookeeper",
			],
			"zookeeper-3888-tcp": [
				"3888",
				"3888",
				"tcp",
				"Zookeeper",
			],
			"zookeeper-jmx-tcp": [
				"7199",
				"7199",
				"tcp",
				"JMX",
			],
		},
		"description":    "Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "rules",
	},
	"module.lb_security_group.module.sg:tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to security group",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "tags",
	},
	"module.lb_security_group.module.sg:use_name_prefix": {
		"default":        true,
		"description":    "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "use_name_prefix",
	},
	"module.lb_security_group.module.sg:vpc_id": {
		"default":        null,
		"description":    "ID of the VPC where to create security group",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "vpc_id",
	},
	"module.lb_security_group:auto_computed_egress_rules": {
		"default":        [],
		"description":    "List of computed egress rules to add automatically",
		"module_address": "module.lb_security_group",
		"name":           "auto_computed_egress_rules",
	},
	"module.lb_security_group:auto_computed_egress_with_self": {
		"default":        [],
		"description":    "List of maps defining computed egress rules with self to add automatically",
		"module_address": "module.lb_security_group",
		"name":           "auto_computed_egress_with_self",
	},
	"module.lb_security_group:auto_computed_ingress_rules": {
		"default":        [],
		"description":    "List of ingress rules to add automatically",
		"module_address": "module.lb_security_group",
		"name":           "auto_computed_ingress_rules",
	},
	"module.lb_security_group:auto_computed_ingress_with_self": {
		"default":        [],
		"description":    "List of maps defining computed ingress rules with self to add automatically",
		"module_address": "module.lb_security_group",
		"name":           "auto_computed_ingress_with_self",
	},
	"module.lb_security_group:auto_egress_rules": {
		"default": [
			"all-all",
		],
		"description":    "List of egress rules to add automatically",
		"module_address": "module.lb_security_group",
		"name":           "auto_egress_rules",
	},
	"module.lb_security_group:auto_egress_with_self": {
		"default":        [],
		"description":    "List of maps defining egress rules with self to add automatically",
		"module_address": "module.lb_security_group",
		"name":           "auto_egress_with_self",
	},
	"module.lb_security_group:auto_ingress_rules": {
		"default": [
			"http-80-tcp",
			"http-8080-tcp",
			"https-443-tcp",
			"web-jmx-tcp",
		],
		"description":    "List of ingress rules to add automatically",
		"module_address": "module.lb_security_group",
		"name":           "auto_ingress_rules",
	},
	"module.lb_security_group:auto_ingress_with_self": {
		"default": [
			{
				"rule": "all-all",
			},
		],
		"description":    "List of maps defining ingress rules with self to add automatically",
		"module_address": "module.lb_security_group",
		"name":           "auto_ingress_with_self",
	},
	"module.lb_security_group:auto_number_of_computed_egress_rules": {
		"default":        0,
		"description":    "Number of computed egress rules to create by name",
		"module_address": "module.lb_security_group",
		"name":           "auto_number_of_computed_egress_rules",
	},
	"module.lb_security_group:auto_number_of_computed_egress_with_self": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group",
		"name":           "auto_number_of_computed_egress_with_self",
	},
	"module.lb_security_group:auto_number_of_computed_ingress_rules": {
		"default":        0,
		"description":    "Number of computed ingress rules to create by name",
		"module_address": "module.lb_security_group",
		"name":           "auto_number_of_computed_ingress_rules",
	},
	"module.lb_security_group:auto_number_of_computed_ingress_with_self": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group",
		"name":           "auto_number_of_computed_ingress_with_self",
	},
	"module.lb_security_group:computed_egress_cidr_blocks": {
		"default": [
			"0.0.0.0/0",
		],
		"description":    "List of IPv4 CIDR ranges to use on all computed egress rules",
		"module_address": "module.lb_security_group",
		"name":           "computed_egress_cidr_blocks",
	},
	"module.lb_security_group:computed_egress_ipv6_cidr_blocks": {
		"default": [
			"::/0",
		],
		"description":    "List of IPv6 CIDR ranges to use on all computed egress rules",
		"module_address": "module.lb_security_group",
		"name":           "computed_egress_ipv6_cidr_blocks",
	},
	"module.lb_security_group:computed_egress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules",
		"module_address": "module.lb_security_group",
		"name":           "computed_egress_prefix_list_ids",
	},
	"module.lb_security_group:computed_egress_rules": {
		"default":        [],
		"description":    "List of computed egress rules to create by name",
		"module_address": "module.lb_security_group",
		"name":           "computed_egress_rules",
	},
	"module.lb_security_group:computed_egress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "computed_egress_with_cidr_blocks",
	},
	"module.lb_security_group:computed_egress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "computed_egress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group:computed_egress_with_self": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group",
		"name":           "computed_egress_with_self",
	},
	"module.lb_security_group:computed_egress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of computed egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group",
		"name":           "computed_egress_with_source_security_group_id",
	},
	"module.lb_security_group:computed_ingress_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv4 CIDR ranges to use on all computed ingress rules",
		"module_address": "module.lb_security_group",
		"name":           "computed_ingress_cidr_blocks",
	},
	"module.lb_security_group:computed_ingress_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv6 CIDR ranges to use on all computed ingress rules",
		"module_address": "module.lb_security_group",
		"name":           "computed_ingress_ipv6_cidr_blocks",
	},
	"module.lb_security_group:computed_ingress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules",
		"module_address": "module.lb_security_group",
		"name":           "computed_ingress_prefix_list_ids",
	},
	"module.lb_security_group:computed_ingress_rules": {
		"default":        [],
		"description":    "List of computed ingress rules to create by name",
		"module_address": "module.lb_security_group",
		"name":           "computed_ingress_rules",
	},
	"module.lb_security_group:computed_ingress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "computed_ingress_with_cidr_blocks",
	},
	"module.lb_security_group:computed_ingress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "computed_ingress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group:computed_ingress_with_self": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group",
		"name":           "computed_ingress_with_self",
	},
	"module.lb_security_group:computed_ingress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of computed ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group",
		"name":           "computed_ingress_with_source_security_group_id",
	},
	"module.lb_security_group:create": {
		"default":        true,
		"description":    "Whether to create security group and all rules",
		"module_address": "module.lb_security_group",
		"name":           "create",
	},
	"module.lb_security_group:description": {
		"default":        "Security Group managed by Terraform",
		"description":    "Description of security group",
		"module_address": "module.lb_security_group",
		"name":           "description",
	},
	"module.lb_security_group:egress_cidr_blocks": {
		"default": [
			"0.0.0.0/0",
		],
		"description":    "List of IPv4 CIDR ranges to use on all egress rules",
		"module_address": "module.lb_security_group",
		"name":           "egress_cidr_blocks",
	},
	"module.lb_security_group:egress_ipv6_cidr_blocks": {
		"default": [
			"::/0",
		],
		"description":    "List of IPv6 CIDR ranges to use on all egress rules",
		"module_address": "module.lb_security_group",
		"name":           "egress_ipv6_cidr_blocks",
	},
	"module.lb_security_group:egress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules",
		"module_address": "module.lb_security_group",
		"name":           "egress_prefix_list_ids",
	},
	"module.lb_security_group:egress_rules": {
		"default":        [],
		"description":    "List of egress rules to create by name",
		"module_address": "module.lb_security_group",
		"name":           "egress_rules",
	},
	"module.lb_security_group:egress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "egress_with_cidr_blocks",
	},
	"module.lb_security_group:egress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "egress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group:egress_with_self": {
		"default":        [],
		"description":    "List of egress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group",
		"name":           "egress_with_self",
	},
	"module.lb_security_group:egress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group",
		"name":           "egress_with_source_security_group_id",
	},
	"module.lb_security_group:ingress_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv4 CIDR ranges to use on all ingress rules",
		"module_address": "module.lb_security_group",
		"name":           "ingress_cidr_blocks",
	},
	"module.lb_security_group:ingress_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of IPv6 CIDR ranges to use on all ingress rules",
		"module_address": "module.lb_security_group",
		"name":           "ingress_ipv6_cidr_blocks",
	},
	"module.lb_security_group:ingress_prefix_list_ids": {
		"default":        [],
		"description":    "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules",
		"module_address": "module.lb_security_group",
		"name":           "ingress_prefix_list_ids",
	},
	"module.lb_security_group:ingress_rules": {
		"default":        [],
		"description":    "List of ingress rules to create by name",
		"module_address": "module.lb_security_group",
		"name":           "ingress_rules",
	},
	"module.lb_security_group:ingress_with_cidr_blocks": {
		"default":        [],
		"description":    "List of ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "ingress_with_cidr_blocks",
	},
	"module.lb_security_group:ingress_with_ipv6_cidr_blocks": {
		"default":        [],
		"description":    "List of ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "ingress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group:ingress_with_self": {
		"default":        [],
		"description":    "List of ingress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group",
		"name":           "ingress_with_self",
	},
	"module.lb_security_group:ingress_with_source_security_group_id": {
		"default":        [],
		"description":    "List of ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group",
		"name":           "ingress_with_source_security_group_id",
	},
	"module.lb_security_group:name": {
		"default":        null,
		"description":    "Name of security group",
		"module_address": "module.lb_security_group",
		"name":           "name",
	},
	"module.lb_security_group:number_of_computed_egress_cidr_blocks": {
		"default":        0,
		"description":    "Number of IPv4 CIDR ranges to use on all computed egress rules",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_egress_cidr_blocks",
	},
	"module.lb_security_group:number_of_computed_egress_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of IPv6 CIDR ranges to use on all computed egress rules",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_egress_ipv6_cidr_blocks",
	},
	"module.lb_security_group:number_of_computed_egress_prefix_list_ids": {
		"default":        0,
		"description":    "Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_egress_prefix_list_ids",
	},
	"module.lb_security_group:number_of_computed_egress_rules": {
		"default":        0,
		"description":    "Number of computed egress rules to create by name",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_egress_rules",
	},
	"module.lb_security_group:number_of_computed_egress_with_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_egress_with_cidr_blocks",
	},
	"module.lb_security_group:number_of_computed_egress_with_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_egress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group:number_of_computed_egress_with_self": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_egress_with_self",
	},
	"module.lb_security_group:number_of_computed_egress_with_source_security_group_id": {
		"default":        0,
		"description":    "Number of computed egress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_egress_with_source_security_group_id",
	},
	"module.lb_security_group:number_of_computed_ingress_cidr_blocks": {
		"default":        0,
		"description":    "Number of IPv4 CIDR ranges to use on all computed ingress rules",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_ingress_cidr_blocks",
	},
	"module.lb_security_group:number_of_computed_ingress_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of IPv6 CIDR ranges to use on all computed ingress rules",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_ingress_ipv6_cidr_blocks",
	},
	"module.lb_security_group:number_of_computed_ingress_prefix_list_ids": {
		"default":        0,
		"description":    "Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_ingress_prefix_list_ids",
	},
	"module.lb_security_group:number_of_computed_ingress_rules": {
		"default":        0,
		"description":    "Number of computed ingress rules to create by name",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_ingress_rules",
	},
	"module.lb_security_group:number_of_computed_ingress_with_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_ingress_with_cidr_blocks",
	},
	"module.lb_security_group:number_of_computed_ingress_with_ipv6_cidr_blocks": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_ingress_with_ipv6_cidr_blocks",
	},
	"module.lb_security_group:number_of_computed_ingress_with_self": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'self' is defined",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_ingress_with_self",
	},
	"module.lb_security_group:number_of_computed_ingress_with_source_security_group_id": {
		"default":        0,
		"description":    "Number of computed ingress rules to create where 'source_security_group_id' is used",
		"module_address": "module.lb_security_group",
		"name":           "number_of_computed_ingress_with_source_security_group_id",
	},
	"module.lb_security_group:revoke_rules_on_delete": {
		"default":        false,
		"description":    "Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. Enable for EMR.",
		"module_address": "module.lb_security_group",
		"name":           "revoke_rules_on_delete",
	},
	"module.lb_security_group:tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to security group",
		"module_address": "module.lb_security_group",
		"name":           "tags",
	},
	"module.lb_security_group:use_name_prefix": {
		"default":        true,
		"description":    "Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation",
		"module_address": "module.lb_security_group",
		"name":           "use_name_prefix",
	},
	"module.lb_security_group:vpc_id": {
		"default":        null,
		"description":    "ID of the VPC where to create security group",
		"module_address": "module.lb_security_group",
		"name":           "vpc_id",
	},
	"module.vpc:access_analyzer_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Access Analyzer endpoint",
		"module_address": "module.vpc",
		"name":           "access_analyzer_endpoint_private_dns_enabled",
	},
	"module.vpc:access_analyzer_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Access Analyzer endpoint",
		"module_address": "module.vpc",
		"name":           "access_analyzer_endpoint_security_group_ids",
	},
	"module.vpc:access_analyzer_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Access Analyzer endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "access_analyzer_endpoint_subnet_ids",
	},
	"module.vpc:acm_pca_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for ACM PCA endpoint",
		"module_address": "module.vpc",
		"name":           "acm_pca_endpoint_private_dns_enabled",
	},
	"module.vpc:acm_pca_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for ACM PCA endpoint",
		"module_address": "module.vpc",
		"name":           "acm_pca_endpoint_security_group_ids",
	},
	"module.vpc:acm_pca_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for ACM PCA endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "acm_pca_endpoint_subnet_ids",
	},
	"module.vpc:amazon_side_asn": {
		"default":        "64512",
		"description":    "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN.",
		"module_address": "module.vpc",
		"name":           "amazon_side_asn",
	},
	"module.vpc:apigw_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for API GW endpoint",
		"module_address": "module.vpc",
		"name":           "apigw_endpoint_private_dns_enabled",
	},
	"module.vpc:apigw_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for API GW  endpoint",
		"module_address": "module.vpc",
		"name":           "apigw_endpoint_security_group_ids",
	},
	"module.vpc:apigw_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for API GW endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "apigw_endpoint_subnet_ids",
	},
	"module.vpc:appmesh_envoy_management_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for AppMesh endpoint",
		"module_address": "module.vpc",
		"name":           "appmesh_envoy_management_endpoint_private_dns_enabled",
	},
	"module.vpc:appmesh_envoy_management_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for AppMesh endpoint",
		"module_address": "module.vpc",
		"name":           "appmesh_envoy_management_endpoint_security_group_ids",
	},
	"module.vpc:appmesh_envoy_management_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for AppMesh endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "appmesh_envoy_management_endpoint_subnet_ids",
	},
	"module.vpc:appstream_api_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for AppStream API endpoint",
		"module_address": "module.vpc",
		"name":           "appstream_api_endpoint_private_dns_enabled",
	},
	"module.vpc:appstream_api_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for AppStream API endpoint",
		"module_address": "module.vpc",
		"name":           "appstream_api_endpoint_security_group_ids",
	},
	"module.vpc:appstream_api_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for AppStream API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "appstream_api_endpoint_subnet_ids",
	},
	"module.vpc:appstream_streaming_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for AppStream Streaming endpoint",
		"module_address": "module.vpc",
		"name":           "appstream_streaming_endpoint_private_dns_enabled",
	},
	"module.vpc:appstream_streaming_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for AppStream Streaming endpoint",
		"module_address": "module.vpc",
		"name":           "appstream_streaming_endpoint_security_group_ids",
	},
	"module.vpc:appstream_streaming_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for AppStream Streaming endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "appstream_streaming_endpoint_subnet_ids",
	},
	"module.vpc:assign_ipv6_address_on_creation": {
		"default":        false,
		"description":    "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
		"module_address": "module.vpc",
		"name":           "assign_ipv6_address_on_creation",
	},
	"module.vpc:athena_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Athena endpoint",
		"module_address": "module.vpc",
		"name":           "athena_endpoint_private_dns_enabled",
	},
	"module.vpc:athena_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Athena endpoint",
		"module_address": "module.vpc",
		"name":           "athena_endpoint_security_group_ids",
	},
	"module.vpc:athena_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Athena endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "athena_endpoint_subnet_ids",
	},
	"module.vpc:auto_scaling_plans_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Auto Scaling Plans endpoint",
		"module_address": "module.vpc",
		"name":           "auto_scaling_plans_endpoint_private_dns_enabled",
	},
	"module.vpc:auto_scaling_plans_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Auto Scaling Plans endpoint",
		"module_address": "module.vpc",
		"name":           "auto_scaling_plans_endpoint_security_group_ids",
	},
	"module.vpc:auto_scaling_plans_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Auto Scaling Plans endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "auto_scaling_plans_endpoint_subnet_ids",
	},
	"module.vpc:azs": {
		"default":        [],
		"description":    "A list of availability zones names or ids in the region",
		"module_address": "module.vpc",
		"name":           "azs",
	},
	"module.vpc:cidr": {
		"default":        "0.0.0.0/0",
		"description":    "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden",
		"module_address": "module.vpc",
		"name":           "cidr",
	},
	"module.vpc:cloud_directory_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Cloud Directory endpoint",
		"module_address": "module.vpc",
		"name":           "cloud_directory_endpoint_private_dns_enabled",
	},
	"module.vpc:cloud_directory_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Cloud Directory endpoint",
		"module_address": "module.vpc",
		"name":           "cloud_directory_endpoint_security_group_ids",
	},
	"module.vpc:cloud_directory_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Cloud Directory endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "cloud_directory_endpoint_subnet_ids",
	},
	"module.vpc:cloudformation_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Cloudformation endpoint",
		"module_address": "module.vpc",
		"name":           "cloudformation_endpoint_private_dns_enabled",
	},
	"module.vpc:cloudformation_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Cloudformation endpoint",
		"module_address": "module.vpc",
		"name":           "cloudformation_endpoint_security_group_ids",
	},
	"module.vpc:cloudformation_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Cloudformation endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "cloudformation_endpoint_subnet_ids",
	},
	"module.vpc:cloudtrail_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for CloudTrail endpoint",
		"module_address": "module.vpc",
		"name":           "cloudtrail_endpoint_private_dns_enabled",
	},
	"module.vpc:cloudtrail_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for CloudTrail endpoint",
		"module_address": "module.vpc",
		"name":           "cloudtrail_endpoint_security_group_ids",
	},
	"module.vpc:cloudtrail_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for CloudTrail endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "cloudtrail_endpoint_subnet_ids",
	},
	"module.vpc:codeartifact_api_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Codeartifact API endpoint",
		"module_address": "module.vpc",
		"name":           "codeartifact_api_endpoint_private_dns_enabled",
	},
	"module.vpc:codeartifact_api_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Codeartifact API endpoint",
		"module_address": "module.vpc",
		"name":           "codeartifact_api_endpoint_security_group_ids",
	},
	"module.vpc:codeartifact_api_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Codeartifact API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "codeartifact_api_endpoint_subnet_ids",
	},
	"module.vpc:codeartifact_repositories_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Codeartifact repositories endpoint",
		"module_address": "module.vpc",
		"name":           "codeartifact_repositories_endpoint_private_dns_enabled",
	},
	"module.vpc:codeartifact_repositories_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Codeartifact repositories endpoint",
		"module_address": "module.vpc",
		"name":           "codeartifact_repositories_endpoint_security_group_ids",
	},
	"module.vpc:codeartifact_repositories_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Codeartifact repositories endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "codeartifact_repositories_endpoint_subnet_ids",
	},
	"module.vpc:codebuild_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Codebuild endpoint",
		"module_address": "module.vpc",
		"name":           "codebuild_endpoint_private_dns_enabled",
	},
	"module.vpc:codebuild_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Codebuild endpoint",
		"module_address": "module.vpc",
		"name":           "codebuild_endpoint_security_group_ids",
	},
	"module.vpc:codebuild_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Codebuilt endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "codebuild_endpoint_subnet_ids",
	},
	"module.vpc:codecommit_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Codecommit endpoint",
		"module_address": "module.vpc",
		"name":           "codecommit_endpoint_private_dns_enabled",
	},
	"module.vpc:codecommit_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Codecommit endpoint",
		"module_address": "module.vpc",
		"name":           "codecommit_endpoint_security_group_ids",
	},
	"module.vpc:codecommit_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "codecommit_endpoint_subnet_ids",
	},
	"module.vpc:codedeploy_commands_secure_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for CodeDeploy Commands Secure endpoint",
		"module_address": "module.vpc",
		"name":           "codedeploy_commands_secure_endpoint_private_dns_enabled",
	},
	"module.vpc:codedeploy_commands_secure_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for CodeDeploy Commands Secure endpoint",
		"module_address": "module.vpc",
		"name":           "codedeploy_commands_secure_endpoint_security_group_ids",
	},
	"module.vpc:codedeploy_commands_secure_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for CodeDeploy Commands Secure endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "codedeploy_commands_secure_endpoint_subnet_ids",
	},
	"module.vpc:codedeploy_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for CodeDeploy endpoint",
		"module_address": "module.vpc",
		"name":           "codedeploy_endpoint_private_dns_enabled",
	},
	"module.vpc:codedeploy_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for CodeDeploy endpoint",
		"module_address": "module.vpc",
		"name":           "codedeploy_endpoint_security_group_ids",
	},
	"module.vpc:codedeploy_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for CodeDeploy endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "codedeploy_endpoint_subnet_ids",
	},
	"module.vpc:codepipeline_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for CodePipeline endpoint",
		"module_address": "module.vpc",
		"name":           "codepipeline_endpoint_private_dns_enabled",
	},
	"module.vpc:codepipeline_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for CodePipeline endpoint",
		"module_address": "module.vpc",
		"name":           "codepipeline_endpoint_security_group_ids",
	},
	"module.vpc:codepipeline_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for CodePipeline endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "codepipeline_endpoint_subnet_ids",
	},
	"module.vpc:config_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for config endpoint",
		"module_address": "module.vpc",
		"name":           "config_endpoint_private_dns_enabled",
	},
	"module.vpc:config_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for config endpoint",
		"module_address": "module.vpc",
		"name":           "config_endpoint_security_group_ids",
	},
	"module.vpc:config_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for config endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "config_endpoint_subnet_ids",
	},
	"module.vpc:create_database_internet_gateway_route": {
		"default":        false,
		"description":    "Controls if an internet gateway route for public database access should be created",
		"module_address": "module.vpc",
		"name":           "create_database_internet_gateway_route",
	},
	"module.vpc:create_database_nat_gateway_route": {
		"default":        false,
		"description":    "Controls if a nat gateway route should be created to give internet access to the database subnets",
		"module_address": "module.vpc",
		"name":           "create_database_nat_gateway_route",
	},
	"module.vpc:create_database_subnet_group": {
		"default":        true,
		"description":    "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
		"module_address": "module.vpc",
		"name":           "create_database_subnet_group",
	},
	"module.vpc:create_database_subnet_route_table": {
		"default":        false,
		"description":    "Controls if separate route table for database should be created",
		"module_address": "module.vpc",
		"name":           "create_database_subnet_route_table",
	},
	"module.vpc:create_egress_only_igw": {
		"default":        true,
		"description":    "Controls if an Egress Only Internet Gateway is created and its related routes.",
		"module_address": "module.vpc",
		"name":           "create_egress_only_igw",
	},
	"module.vpc:create_elasticache_subnet_group": {
		"default":        true,
		"description":    "Controls if elasticache subnet group should be created",
		"module_address": "module.vpc",
		"name":           "create_elasticache_subnet_group",
	},
	"module.vpc:create_elasticache_subnet_route_table": {
		"default":        false,
		"description":    "Controls if separate route table for elasticache should be created",
		"module_address": "module.vpc",
		"name":           "create_elasticache_subnet_route_table",
	},
	"module.vpc:create_flow_log_cloudwatch_iam_role": {
		"default":        false,
		"description":    "Whether to create IAM role for VPC Flow Logs",
		"module_address": "module.vpc",
		"name":           "create_flow_log_cloudwatch_iam_role",
	},
	"module.vpc:create_flow_log_cloudwatch_log_group": {
		"default":        false,
		"description":    "Whether to create CloudWatch log group for VPC Flow Logs",
		"module_address": "module.vpc",
		"name":           "create_flow_log_cloudwatch_log_group",
	},
	"module.vpc:create_igw": {
		"default":        true,
		"description":    "Controls if an Internet Gateway is created for public subnets and the related routes that connect them.",
		"module_address": "module.vpc",
		"name":           "create_igw",
	},
	"module.vpc:create_redshift_subnet_group": {
		"default":        true,
		"description":    "Controls if redshift subnet group should be created",
		"module_address": "module.vpc",
		"name":           "create_redshift_subnet_group",
	},
	"module.vpc:create_redshift_subnet_route_table": {
		"default":        false,
		"description":    "Controls if separate route table for redshift should be created",
		"module_address": "module.vpc",
		"name":           "create_redshift_subnet_route_table",
	},
	"module.vpc:create_vpc": {
		"default":        true,
		"description":    "Controls if VPC should be created (it affects almost all resources)",
		"module_address": "module.vpc",
		"name":           "create_vpc",
	},
	"module.vpc:customer_gateway_tags": {
		"default":        {},
		"description":    "Additional tags for the Customer Gateway",
		"module_address": "module.vpc",
		"name":           "customer_gateway_tags",
	},
	"module.vpc:customer_gateways": {
		"default":        {},
		"description":    "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
		"module_address": "module.vpc",
		"name":           "customer_gateways",
	},
	"module.vpc:database_acl_tags": {
		"default":        {},
		"description":    "Additional tags for the database subnets network ACL",
		"module_address": "module.vpc",
		"name":           "database_acl_tags",
	},
	"module.vpc:database_dedicated_network_acl": {
		"default":        false,
		"description":    "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
		"module_address": "module.vpc",
		"name":           "database_dedicated_network_acl",
	},
	"module.vpc:database_inbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Database subnets inbound network ACL rules",
		"module_address": "module.vpc",
		"name":           "database_inbound_acl_rules",
	},
	"module.vpc:database_outbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Database subnets outbound network ACL rules",
		"module_address": "module.vpc",
		"name":           "database_outbound_acl_rules",
	},
	"module.vpc:database_route_table_tags": {
		"default":        {},
		"description":    "Additional tags for the database route tables",
		"module_address": "module.vpc",
		"name":           "database_route_table_tags",
	},
	"module.vpc:database_subnet_assign_ipv6_address_on_creation": {
		"default":        null,
		"description":    "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
		"module_address": "module.vpc",
		"name":           "database_subnet_assign_ipv6_address_on_creation",
	},
	"module.vpc:database_subnet_group_tags": {
		"default":        {},
		"description":    "Additional tags for the database subnet group",
		"module_address": "module.vpc",
		"name":           "database_subnet_group_tags",
	},
	"module.vpc:database_subnet_ipv6_prefixes": {
		"default":        [],
		"description":    "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
		"module_address": "module.vpc",
		"name":           "database_subnet_ipv6_prefixes",
	},
	"module.vpc:database_subnet_suffix": {
		"default":        "db",
		"description":    "Suffix to append to database subnets name",
		"module_address": "module.vpc",
		"name":           "database_subnet_suffix",
	},
	"module.vpc:database_subnet_tags": {
		"default":        {},
		"description":    "Additional tags for the database subnets",
		"module_address": "module.vpc",
		"name":           "database_subnet_tags",
	},
	"module.vpc:database_subnets": {
		"default":        [],
		"description":    "A list of database subnets",
		"module_address": "module.vpc",
		"name":           "database_subnets",
	},
	"module.vpc:datasync_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Data Sync endpoint",
		"module_address": "module.vpc",
		"name":           "datasync_endpoint_private_dns_enabled",
	},
	"module.vpc:datasync_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Data Sync endpoint",
		"module_address": "module.vpc",
		"name":           "datasync_endpoint_security_group_ids",
	},
	"module.vpc:datasync_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Data Sync endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "datasync_endpoint_subnet_ids",
	},
	"module.vpc:default_network_acl_egress": {
		"default": [
			{
				"action":     "allow",
				"cidr_block": "0.0.0.0/0",
				"from_port":  "0",
				"protocol":   "-1",
				"rule_no":    "100",
				"to_port":    "0",
			},
			{
				"action":          "allow",
				"from_port":       "0",
				"ipv6_cidr_block": "::/0",
				"protocol":        "-1",
				"rule_no":         "101",
				"to_port":         "0",
			},
		],
		"description":    "List of maps of egress rules to set on the Default Network ACL",
		"module_address": "module.vpc",
		"name":           "default_network_acl_egress",
	},
	"module.vpc:default_network_acl_ingress": {
		"default": [
			{
				"action":     "allow",
				"cidr_block": "0.0.0.0/0",
				"from_port":  "0",
				"protocol":   "-1",
				"rule_no":    "100",
				"to_port":    "0",
			},
			{
				"action":          "allow",
				"from_port":       "0",
				"ipv6_cidr_block": "::/0",
				"protocol":        "-1",
				"rule_no":         "101",
				"to_port":         "0",
			},
		],
		"description":    "List of maps of ingress rules to set on the Default Network ACL",
		"module_address": "module.vpc",
		"name":           "default_network_acl_ingress",
	},
	"module.vpc:default_network_acl_name": {
		"default":        "",
		"description":    "Name to be used on the Default Network ACL",
		"module_address": "module.vpc",
		"name":           "default_network_acl_name",
	},
	"module.vpc:default_network_acl_tags": {
		"default":        {},
		"description":    "Additional tags for the Default Network ACL",
		"module_address": "module.vpc",
		"name":           "default_network_acl_tags",
	},
	"module.vpc:default_security_group_egress": {
		"default":        null,
		"description":    "List of maps of egress rules to set on the default security group",
		"module_address": "module.vpc",
		"name":           "default_security_group_egress",
	},
	"module.vpc:default_security_group_ingress": {
		"default":        null,
		"description":    "List of maps of ingress rules to set on the default security group",
		"module_address": "module.vpc",
		"name":           "default_security_group_ingress",
	},
	"module.vpc:default_security_group_name": {
		"default":        "default",
		"description":    "Name to be used on the default security group",
		"module_address": "module.vpc",
		"name":           "default_security_group_name",
	},
	"module.vpc:default_security_group_tags": {
		"default":        {},
		"description":    "Additional tags for the default security group",
		"module_address": "module.vpc",
		"name":           "default_security_group_tags",
	},
	"module.vpc:default_vpc_enable_classiclink": {
		"default":        false,
		"description":    "Should be true to enable ClassicLink in the Default VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_enable_classiclink",
	},
	"module.vpc:default_vpc_enable_dns_hostnames": {
		"default":        false,
		"description":    "Should be true to enable DNS hostnames in the Default VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_enable_dns_hostnames",
	},
	"module.vpc:default_vpc_enable_dns_support": {
		"default":        true,
		"description":    "Should be true to enable DNS support in the Default VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_enable_dns_support",
	},
	"module.vpc:default_vpc_name": {
		"default":        "",
		"description":    "Name to be used on the Default VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_name",
	},
	"module.vpc:default_vpc_tags": {
		"default":        {},
		"description":    "Additional tags for the Default VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_tags",
	},
	"module.vpc:dhcp_options_domain_name": {
		"default":        "",
		"description":    "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
		"module_address": "module.vpc",
		"name":           "dhcp_options_domain_name",
	},
	"module.vpc:dhcp_options_domain_name_servers": {
		"default": [
			"AmazonProvidedDNS",
		],
		"description":    "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
		"module_address": "module.vpc",
		"name":           "dhcp_options_domain_name_servers",
	},
	"module.vpc:dhcp_options_netbios_name_servers": {
		"default":        [],
		"description":    "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
		"module_address": "module.vpc",
		"name":           "dhcp_options_netbios_name_servers",
	},
	"module.vpc:dhcp_options_netbios_node_type": {
		"default":        "",
		"description":    "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
		"module_address": "module.vpc",
		"name":           "dhcp_options_netbios_node_type",
	},
	"module.vpc:dhcp_options_ntp_servers": {
		"default":        [],
		"description":    "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
		"module_address": "module.vpc",
		"name":           "dhcp_options_ntp_servers",
	},
	"module.vpc:dhcp_options_tags": {
		"default":        {},
		"description":    "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
		"module_address": "module.vpc",
		"name":           "dhcp_options_tags",
	},
	"module.vpc:ebs_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for EBS endpoint",
		"module_address": "module.vpc",
		"name":           "ebs_endpoint_private_dns_enabled",
	},
	"module.vpc:ebs_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for EBS endpoint",
		"module_address": "module.vpc",
		"name":           "ebs_endpoint_security_group_ids",
	},
	"module.vpc:ebs_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for EBS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ebs_endpoint_subnet_ids",
	},
	"module.vpc:ec2_autoscaling_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for EC2 Autoscaling endpoint",
		"module_address": "module.vpc",
		"name":           "ec2_autoscaling_endpoint_private_dns_enabled",
	},
	"module.vpc:ec2_autoscaling_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for EC2 Autoscaling endpoint",
		"module_address": "module.vpc",
		"name":           "ec2_autoscaling_endpoint_security_group_ids",
	},
	"module.vpc:ec2_autoscaling_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for EC2 Autoscaling endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ec2_autoscaling_endpoint_subnet_ids",
	},
	"module.vpc:ec2_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for EC2 endpoint",
		"module_address": "module.vpc",
		"name":           "ec2_endpoint_private_dns_enabled",
	},
	"module.vpc:ec2_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for EC2 endpoint",
		"module_address": "module.vpc",
		"name":           "ec2_endpoint_security_group_ids",
	},
	"module.vpc:ec2_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for EC2 endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ec2_endpoint_subnet_ids",
	},
	"module.vpc:ec2messages_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for EC2MESSAGES endpoint",
		"module_address": "module.vpc",
		"name":           "ec2messages_endpoint_private_dns_enabled",
	},
	"module.vpc:ec2messages_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for EC2MESSAGES endpoint",
		"module_address": "module.vpc",
		"name":           "ec2messages_endpoint_security_group_ids",
	},
	"module.vpc:ec2messages_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for EC2MESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ec2messages_endpoint_subnet_ids",
	},
	"module.vpc:ecr_api_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for ECR API endpoint",
		"module_address": "module.vpc",
		"name":           "ecr_api_endpoint_private_dns_enabled",
	},
	"module.vpc:ecr_api_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for ECR API endpoint",
		"module_address": "module.vpc",
		"name":           "ecr_api_endpoint_security_group_ids",
	},
	"module.vpc:ecr_api_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for ECR api endpoint. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ecr_api_endpoint_subnet_ids",
	},
	"module.vpc:ecr_dkr_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for ECR DKR endpoint",
		"module_address": "module.vpc",
		"name":           "ecr_dkr_endpoint_private_dns_enabled",
	},
	"module.vpc:ecr_dkr_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for ECR DKR endpoint",
		"module_address": "module.vpc",
		"name":           "ecr_dkr_endpoint_security_group_ids",
	},
	"module.vpc:ecr_dkr_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for ECR dkr endpoint. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ecr_dkr_endpoint_subnet_ids",
	},
	"module.vpc:ecs_agent_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for ECS Agent endpoint",
		"module_address": "module.vpc",
		"name":           "ecs_agent_endpoint_private_dns_enabled",
	},
	"module.vpc:ecs_agent_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for ECS Agent endpoint",
		"module_address": "module.vpc",
		"name":           "ecs_agent_endpoint_security_group_ids",
	},
	"module.vpc:ecs_agent_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for ECS Agent endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ecs_agent_endpoint_subnet_ids",
	},
	"module.vpc:ecs_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for ECS endpoint",
		"module_address": "module.vpc",
		"name":           "ecs_endpoint_private_dns_enabled",
	},
	"module.vpc:ecs_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for ECS endpoint",
		"module_address": "module.vpc",
		"name":           "ecs_endpoint_security_group_ids",
	},
	"module.vpc:ecs_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for ECS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ecs_endpoint_subnet_ids",
	},
	"module.vpc:ecs_telemetry_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for ECS Telemetry endpoint",
		"module_address": "module.vpc",
		"name":           "ecs_telemetry_endpoint_private_dns_enabled",
	},
	"module.vpc:ecs_telemetry_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for ECS Telemetry endpoint",
		"module_address": "module.vpc",
		"name":           "ecs_telemetry_endpoint_security_group_ids",
	},
	"module.vpc:ecs_telemetry_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for ECS Telemetry endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ecs_telemetry_endpoint_subnet_ids",
	},
	"module.vpc:efs_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for EFS endpoint",
		"module_address": "module.vpc",
		"name":           "efs_endpoint_private_dns_enabled",
	},
	"module.vpc:efs_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for EFS endpoint",
		"module_address": "module.vpc",
		"name":           "efs_endpoint_security_group_ids",
	},
	"module.vpc:efs_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for EFS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "efs_endpoint_subnet_ids",
	},
	"module.vpc:elastic_inference_runtime_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Elastic Inference Runtime endpoint",
		"module_address": "module.vpc",
		"name":           "elastic_inference_runtime_endpoint_private_dns_enabled",
	},
	"module.vpc:elastic_inference_runtime_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Elastic Inference Runtime endpoint",
		"module_address": "module.vpc",
		"name":           "elastic_inference_runtime_endpoint_security_group_ids",
	},
	"module.vpc:elastic_inference_runtime_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Elastic Inference Runtime endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "elastic_inference_runtime_endpoint_subnet_ids",
	},
	"module.vpc:elasticache_acl_tags": {
		"default":        {},
		"description":    "Additional tags for the elasticache subnets network ACL",
		"module_address": "module.vpc",
		"name":           "elasticache_acl_tags",
	},
	"module.vpc:elasticache_dedicated_network_acl": {
		"default":        false,
		"description":    "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
		"module_address": "module.vpc",
		"name":           "elasticache_dedicated_network_acl",
	},
	"module.vpc:elasticache_inbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Elasticache subnets inbound network ACL rules",
		"module_address": "module.vpc",
		"name":           "elasticache_inbound_acl_rules",
	},
	"module.vpc:elasticache_outbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Elasticache subnets outbound network ACL rules",
		"module_address": "module.vpc",
		"name":           "elasticache_outbound_acl_rules",
	},
	"module.vpc:elasticache_route_table_tags": {
		"default":        {},
		"description":    "Additional tags for the elasticache route tables",
		"module_address": "module.vpc",
		"name":           "elasticache_route_table_tags",
	},
	"module.vpc:elasticache_subnet_assign_ipv6_address_on_creation": {
		"default":        null,
		"description":    "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
		"module_address": "module.vpc",
		"name":           "elasticache_subnet_assign_ipv6_address_on_creation",
	},
	"module.vpc:elasticache_subnet_ipv6_prefixes": {
		"default":        [],
		"description":    "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
		"module_address": "module.vpc",
		"name":           "elasticache_subnet_ipv6_prefixes",
	},
	"module.vpc:elasticache_subnet_suffix": {
		"default":        "elasticache",
		"description":    "Suffix to append to elasticache subnets name",
		"module_address": "module.vpc",
		"name":           "elasticache_subnet_suffix",
	},
	"module.vpc:elasticache_subnet_tags": {
		"default":        {},
		"description":    "Additional tags for the elasticache subnets",
		"module_address": "module.vpc",
		"name":           "elasticache_subnet_tags",
	},
	"module.vpc:elasticache_subnets": {
		"default":        [],
		"description":    "A list of elasticache subnets",
		"module_address": "module.vpc",
		"name":           "elasticache_subnets",
	},
	"module.vpc:elasticbeanstalk_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Elastic Beanstalk endpoint",
		"module_address": "module.vpc",
		"name":           "elasticbeanstalk_endpoint_private_dns_enabled",
	},
	"module.vpc:elasticbeanstalk_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Elastic Beanstalk endpoint",
		"module_address": "module.vpc",
		"name":           "elasticbeanstalk_endpoint_security_group_ids",
	},
	"module.vpc:elasticbeanstalk_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Elastic Beanstalk endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "elasticbeanstalk_endpoint_subnet_ids",
	},
	"module.vpc:elasticbeanstalk_health_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Elastic Beanstalk Health endpoint",
		"module_address": "module.vpc",
		"name":           "elasticbeanstalk_health_endpoint_private_dns_enabled",
	},
	"module.vpc:elasticbeanstalk_health_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Elastic Beanstalk Health endpoint",
		"module_address": "module.vpc",
		"name":           "elasticbeanstalk_health_endpoint_security_group_ids",
	},
	"module.vpc:elasticbeanstalk_health_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Elastic Beanstalk Health endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "elasticbeanstalk_health_endpoint_subnet_ids",
	},
	"module.vpc:elasticloadbalancing_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Elastic Load Balancing endpoint",
		"module_address": "module.vpc",
		"name":           "elasticloadbalancing_endpoint_private_dns_enabled",
	},
	"module.vpc:elasticloadbalancing_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Elastic Load Balancing endpoint",
		"module_address": "module.vpc",
		"name":           "elasticloadbalancing_endpoint_security_group_ids",
	},
	"module.vpc:elasticloadbalancing_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Elastic Load Balancing endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "elasticloadbalancing_endpoint_subnet_ids",
	},
	"module.vpc:emr_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for EMR endpoint",
		"module_address": "module.vpc",
		"name":           "emr_endpoint_private_dns_enabled",
	},
	"module.vpc:emr_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for EMR endpoint",
		"module_address": "module.vpc",
		"name":           "emr_endpoint_security_group_ids",
	},
	"module.vpc:emr_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for EMR endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "emr_endpoint_subnet_ids",
	},
	"module.vpc:enable_access_analyzer_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Access Analyzer endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_access_analyzer_endpoint",
	},
	"module.vpc:enable_acm_pca_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an ACM PCA endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_acm_pca_endpoint",
	},
	"module.vpc:enable_apigw_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an api gateway endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_apigw_endpoint",
	},
	"module.vpc:enable_appmesh_envoy_management_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a AppMesh endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_appmesh_envoy_management_endpoint",
	},
	"module.vpc:enable_appstream_api_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a AppStream API endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_appstream_api_endpoint",
	},
	"module.vpc:enable_appstream_streaming_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a AppStream Streaming endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_appstream_streaming_endpoint",
	},
	"module.vpc:enable_athena_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Athena endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_athena_endpoint",
	},
	"module.vpc:enable_auto_scaling_plans_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Auto Scaling Plans endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_auto_scaling_plans_endpoint",
	},
	"module.vpc:enable_classiclink": {
		"default":        null,
		"description":    "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic.",
		"module_address": "module.vpc",
		"name":           "enable_classiclink",
	},
	"module.vpc:enable_classiclink_dns_support": {
		"default":        null,
		"description":    "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic.",
		"module_address": "module.vpc",
		"name":           "enable_classiclink_dns_support",
	},
	"module.vpc:enable_cloud_directory_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Cloud Directory endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_cloud_directory_endpoint",
	},
	"module.vpc:enable_cloudformation_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Cloudformation endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_cloudformation_endpoint",
	},
	"module.vpc:enable_cloudtrail_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a CloudTrail endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_cloudtrail_endpoint",
	},
	"module.vpc:enable_codeartifact_api_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Codeartifact API endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_codeartifact_api_endpoint",
	},
	"module.vpc:enable_codeartifact_repositories_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Codeartifact repositories endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_codeartifact_repositories_endpoint",
	},
	"module.vpc:enable_codebuild_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Codebuild endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_codebuild_endpoint",
	},
	"module.vpc:enable_codecommit_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Codecommit endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_codecommit_endpoint",
	},
	"module.vpc:enable_codedeploy_commands_secure_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an CodeDeploy Commands Secure endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_codedeploy_commands_secure_endpoint",
	},
	"module.vpc:enable_codedeploy_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an CodeDeploy endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_codedeploy_endpoint",
	},
	"module.vpc:enable_codepipeline_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a CodePipeline endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_codepipeline_endpoint",
	},
	"module.vpc:enable_config_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an config endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_config_endpoint",
	},
	"module.vpc:enable_datasync_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Data Sync endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_datasync_endpoint",
	},
	"module.vpc:enable_dhcp_options": {
		"default":        false,
		"description":    "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
		"module_address": "module.vpc",
		"name":           "enable_dhcp_options",
	},
	"module.vpc:enable_dns_hostnames": {
		"default":        false,
		"description":    "Should be true to enable DNS hostnames in the VPC",
		"module_address": "module.vpc",
		"name":           "enable_dns_hostnames",
	},
	"module.vpc:enable_dns_support": {
		"default":        true,
		"description":    "Should be true to enable DNS support in the VPC",
		"module_address": "module.vpc",
		"name":           "enable_dns_support",
	},
	"module.vpc:enable_dynamodb_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a DynamoDB endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_dynamodb_endpoint",
	},
	"module.vpc:enable_ebs_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an EBS endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ebs_endpoint",
	},
	"module.vpc:enable_ec2_autoscaling_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an EC2 Autoscaling endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ec2_autoscaling_endpoint",
	},
	"module.vpc:enable_ec2_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an EC2 endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ec2_endpoint",
	},
	"module.vpc:enable_ec2messages_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an EC2MESSAGES endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ec2messages_endpoint",
	},
	"module.vpc:enable_ecr_api_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an ecr api endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ecr_api_endpoint",
	},
	"module.vpc:enable_ecr_dkr_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an ecr dkr endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ecr_dkr_endpoint",
	},
	"module.vpc:enable_ecs_agent_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a ECS Agent endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ecs_agent_endpoint",
	},
	"module.vpc:enable_ecs_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a ECS endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ecs_endpoint",
	},
	"module.vpc:enable_ecs_telemetry_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a ECS Telemetry endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ecs_telemetry_endpoint",
	},
	"module.vpc:enable_efs_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an EFS endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_efs_endpoint",
	},
	"module.vpc:enable_elastic_inference_runtime_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Elastic Inference Runtime endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_elastic_inference_runtime_endpoint",
	},
	"module.vpc:enable_elasticbeanstalk_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Elastic Beanstalk endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_elasticbeanstalk_endpoint",
	},
	"module.vpc:enable_elasticbeanstalk_health_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Elastic Beanstalk Health endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_elasticbeanstalk_health_endpoint",
	},
	"module.vpc:enable_elasticloadbalancing_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Elastic Load Balancing endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_elasticloadbalancing_endpoint",
	},
	"module.vpc:enable_emr_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an EMR endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_emr_endpoint",
	},
	"module.vpc:enable_events_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a CloudWatch Events endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_events_endpoint",
	},
	"module.vpc:enable_flow_log": {
		"default":        false,
		"description":    "Whether or not to enable VPC Flow Logs",
		"module_address": "module.vpc",
		"name":           "enable_flow_log",
	},
	"module.vpc:enable_git_codecommit_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Git Codecommit endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_git_codecommit_endpoint",
	},
	"module.vpc:enable_glue_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Glue endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_glue_endpoint",
	},
	"module.vpc:enable_ipv6": {
		"default":        false,
		"description":    "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.",
		"module_address": "module.vpc",
		"name":           "enable_ipv6",
	},
	"module.vpc:enable_kinesis_firehose_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Kinesis Firehose endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_kinesis_firehose_endpoint",
	},
	"module.vpc:enable_kinesis_streams_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Kinesis Streams endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_kinesis_streams_endpoint",
	},
	"module.vpc:enable_kms_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a KMS endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_kms_endpoint",
	},
	"module.vpc:enable_lambda_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Lambda endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_lambda_endpoint",
	},
	"module.vpc:enable_logs_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a CloudWatch Logs endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_logs_endpoint",
	},
	"module.vpc:enable_monitoring_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a CloudWatch Monitoring endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_monitoring_endpoint",
	},
	"module.vpc:enable_nat_gateway": {
		"default":        false,
		"description":    "Should be true if you want to provision NAT Gateways for each of your private networks",
		"module_address": "module.vpc",
		"name":           "enable_nat_gateway",
	},
	"module.vpc:enable_public_redshift": {
		"default":        false,
		"description":    "Controls if redshift should have public routing table",
		"module_address": "module.vpc",
		"name":           "enable_public_redshift",
	},
	"module.vpc:enable_public_s3_endpoint": {
		"default":        true,
		"description":    "Whether to enable S3 VPC Endpoint for public subnets",
		"module_address": "module.vpc",
		"name":           "enable_public_s3_endpoint",
	},
	"module.vpc:enable_qldb_session_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an QLDB Session endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_qldb_session_endpoint",
	},
	"module.vpc:enable_rds_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an RDS endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_rds_endpoint",
	},
	"module.vpc:enable_rekognition_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Rekognition endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_rekognition_endpoint",
	},
	"module.vpc:enable_s3_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an S3 endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_s3_endpoint",
	},
	"module.vpc:enable_sagemaker_api_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a SageMaker API endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_sagemaker_api_endpoint",
	},
	"module.vpc:enable_sagemaker_notebook_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Sagemaker Notebook endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_sagemaker_notebook_endpoint",
	},
	"module.vpc:enable_sagemaker_runtime_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a SageMaker Runtime endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_sagemaker_runtime_endpoint",
	},
	"module.vpc:enable_secretsmanager_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Secrets Manager endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_secretsmanager_endpoint",
	},
	"module.vpc:enable_servicecatalog_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Service Catalog endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_servicecatalog_endpoint",
	},
	"module.vpc:enable_ses_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an SES endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ses_endpoint",
	},
	"module.vpc:enable_sms_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an SMS endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_sms_endpoint",
	},
	"module.vpc:enable_sns_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a SNS endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_sns_endpoint",
	},
	"module.vpc:enable_sqs_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an SQS endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_sqs_endpoint",
	},
	"module.vpc:enable_ssm_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an SSM endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ssm_endpoint",
	},
	"module.vpc:enable_ssmmessages_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a SSMMESSAGES endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_ssmmessages_endpoint",
	},
	"module.vpc:enable_states_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Step Function endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_states_endpoint",
	},
	"module.vpc:enable_storagegateway_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Storage Gateway endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_storagegateway_endpoint",
	},
	"module.vpc:enable_sts_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a STS endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_sts_endpoint",
	},
	"module.vpc:enable_textract_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Textract endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_textract_endpoint",
	},
	"module.vpc:enable_transfer_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Transfer endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_transfer_endpoint",
	},
	"module.vpc:enable_transferserver_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision a Transfer Server endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_transferserver_endpoint",
	},
	"module.vpc:enable_vpn_gateway": {
		"default":        false,
		"description":    "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_vpn_gateway",
	},
	"module.vpc:enable_workspaces_endpoint": {
		"default":        false,
		"description":    "Should be true if you want to provision an Workspaces endpoint to the VPC",
		"module_address": "module.vpc",
		"name":           "enable_workspaces_endpoint",
	},
	"module.vpc:events_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Events endpoint",
		"module_address": "module.vpc",
		"name":           "events_endpoint_private_dns_enabled",
	},
	"module.vpc:events_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for CloudWatch Events endpoint",
		"module_address": "module.vpc",
		"name":           "events_endpoint_security_group_ids",
	},
	"module.vpc:events_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for CloudWatch Events endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "events_endpoint_subnet_ids",
	},
	"module.vpc:external_nat_ip_ids": {
		"default":        [],
		"description":    "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
		"module_address": "module.vpc",
		"name":           "external_nat_ip_ids",
	},
	"module.vpc:external_nat_ips": {
		"default":        [],
		"description":    "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
		"module_address": "module.vpc",
		"name":           "external_nat_ips",
	},
	"module.vpc:flow_log_cloudwatch_iam_role_arn": {
		"default":        "",
		"description":    "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided.",
		"module_address": "module.vpc",
		"name":           "flow_log_cloudwatch_iam_role_arn",
	},
	"module.vpc:flow_log_cloudwatch_log_group_kms_key_id": {
		"default":        null,
		"description":    "The ARN of the KMS Key to use when encrypting log data for VPC flow logs.",
		"module_address": "module.vpc",
		"name":           "flow_log_cloudwatch_log_group_kms_key_id",
	},
	"module.vpc:flow_log_cloudwatch_log_group_name_prefix": {
		"default":        "/aws/vpc-flow-log/",
		"description":    "Specifies the name prefix of CloudWatch Log Group for VPC flow logs.",
		"module_address": "module.vpc",
		"name":           "flow_log_cloudwatch_log_group_name_prefix",
	},
	"module.vpc:flow_log_cloudwatch_log_group_retention_in_days": {
		"default":        null,
		"description":    "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs.",
		"module_address": "module.vpc",
		"name":           "flow_log_cloudwatch_log_group_retention_in_days",
	},
	"module.vpc:flow_log_destination_arn": {
		"default":        "",
		"description":    "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided.",
		"module_address": "module.vpc",
		"name":           "flow_log_destination_arn",
	},
	"module.vpc:flow_log_destination_type": {
		"default":        "cloud-watch-logs",
		"description":    "Type of flow log destination. Can be s3 or cloud-watch-logs.",
		"module_address": "module.vpc",
		"name":           "flow_log_destination_type",
	},
	"module.vpc:flow_log_log_format": {
		"default":        null,
		"description":    "The fields to include in the flow log record, in the order in which they should appear.",
		"module_address": "module.vpc",
		"name":           "flow_log_log_format",
	},
	"module.vpc:flow_log_max_aggregation_interval": {
		"default":        600,
		"description":    "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds.",
		"module_address": "module.vpc",
		"name":           "flow_log_max_aggregation_interval",
	},
	"module.vpc:flow_log_traffic_type": {
		"default":        "ALL",
		"description":    "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL.",
		"module_address": "module.vpc",
		"name":           "flow_log_traffic_type",
	},
	"module.vpc:git_codecommit_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Git Codecommit endpoint",
		"module_address": "module.vpc",
		"name":           "git_codecommit_endpoint_private_dns_enabled",
	},
	"module.vpc:git_codecommit_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Git Codecommit endpoint",
		"module_address": "module.vpc",
		"name":           "git_codecommit_endpoint_security_group_ids",
	},
	"module.vpc:git_codecommit_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Git Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "git_codecommit_endpoint_subnet_ids",
	},
	"module.vpc:glue_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Glue endpoint",
		"module_address": "module.vpc",
		"name":           "glue_endpoint_private_dns_enabled",
	},
	"module.vpc:glue_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Glue endpoint",
		"module_address": "module.vpc",
		"name":           "glue_endpoint_security_group_ids",
	},
	"module.vpc:glue_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Glue endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "glue_endpoint_subnet_ids",
	},
	"module.vpc:igw_tags": {
		"default":        {},
		"description":    "Additional tags for the internet gateway",
		"module_address": "module.vpc",
		"name":           "igw_tags",
	},
	"module.vpc:instance_tenancy": {
		"default":        "default",
		"description":    "A tenancy option for instances launched into the VPC",
		"module_address": "module.vpc",
		"name":           "instance_tenancy",
	},
	"module.vpc:intra_acl_tags": {
		"default":        {},
		"description":    "Additional tags for the intra subnets network ACL",
		"module_address": "module.vpc",
		"name":           "intra_acl_tags",
	},
	"module.vpc:intra_dedicated_network_acl": {
		"default":        false,
		"description":    "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
		"module_address": "module.vpc",
		"name":           "intra_dedicated_network_acl",
	},
	"module.vpc:intra_inbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Intra subnets inbound network ACLs",
		"module_address": "module.vpc",
		"name":           "intra_inbound_acl_rules",
	},
	"module.vpc:intra_outbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Intra subnets outbound network ACLs",
		"module_address": "module.vpc",
		"name":           "intra_outbound_acl_rules",
	},
	"module.vpc:intra_route_table_tags": {
		"default":        {},
		"description":    "Additional tags for the intra route tables",
		"module_address": "module.vpc",
		"name":           "intra_route_table_tags",
	},
	"module.vpc:intra_subnet_assign_ipv6_address_on_creation": {
		"default":        null,
		"description":    "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
		"module_address": "module.vpc",
		"name":           "intra_subnet_assign_ipv6_address_on_creation",
	},
	"module.vpc:intra_subnet_ipv6_prefixes": {
		"default":        [],
		"description":    "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
		"module_address": "module.vpc",
		"name":           "intra_subnet_ipv6_prefixes",
	},
	"module.vpc:intra_subnet_suffix": {
		"default":        "intra",
		"description":    "Suffix to append to intra subnets name",
		"module_address": "module.vpc",
		"name":           "intra_subnet_suffix",
	},
	"module.vpc:intra_subnet_tags": {
		"default":        {},
		"description":    "Additional tags for the intra subnets",
		"module_address": "module.vpc",
		"name":           "intra_subnet_tags",
	},
	"module.vpc:intra_subnets": {
		"default":        [],
		"description":    "A list of intra subnets",
		"module_address": "module.vpc",
		"name":           "intra_subnets",
	},
	"module.vpc:kinesis_firehose_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Firehose endpoint",
		"module_address": "module.vpc",
		"name":           "kinesis_firehose_endpoint_private_dns_enabled",
	},
	"module.vpc:kinesis_firehose_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Kinesis Firehose endpoint",
		"module_address": "module.vpc",
		"name":           "kinesis_firehose_endpoint_security_group_ids",
	},
	"module.vpc:kinesis_firehose_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Kinesis Firehose endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "kinesis_firehose_endpoint_subnet_ids",
	},
	"module.vpc:kinesis_streams_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Streams endpoint",
		"module_address": "module.vpc",
		"name":           "kinesis_streams_endpoint_private_dns_enabled",
	},
	"module.vpc:kinesis_streams_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Kinesis Streams endpoint",
		"module_address": "module.vpc",
		"name":           "kinesis_streams_endpoint_security_group_ids",
	},
	"module.vpc:kinesis_streams_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Kinesis Streams endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "kinesis_streams_endpoint_subnet_ids",
	},
	"module.vpc:kms_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for KMS endpoint",
		"module_address": "module.vpc",
		"name":           "kms_endpoint_private_dns_enabled",
	},
	"module.vpc:kms_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for KMS endpoint",
		"module_address": "module.vpc",
		"name":           "kms_endpoint_security_group_ids",
	},
	"module.vpc:kms_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for KMS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "kms_endpoint_subnet_ids",
	},
	"module.vpc:lambda_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Lambda endpoint",
		"module_address": "module.vpc",
		"name":           "lambda_endpoint_private_dns_enabled",
	},
	"module.vpc:lambda_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Lambda endpoint",
		"module_address": "module.vpc",
		"name":           "lambda_endpoint_security_group_ids",
	},
	"module.vpc:lambda_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Lambda endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "lambda_endpoint_subnet_ids",
	},
	"module.vpc:logs_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Logs endpoint",
		"module_address": "module.vpc",
		"name":           "logs_endpoint_private_dns_enabled",
	},
	"module.vpc:logs_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for CloudWatch Logs endpoint",
		"module_address": "module.vpc",
		"name":           "logs_endpoint_security_group_ids",
	},
	"module.vpc:logs_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for CloudWatch Logs endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "logs_endpoint_subnet_ids",
	},
	"module.vpc:manage_default_network_acl": {
		"default":        false,
		"description":    "Should be true to adopt and manage Default Network ACL",
		"module_address": "module.vpc",
		"name":           "manage_default_network_acl",
	},
	"module.vpc:manage_default_security_group": {
		"default":        false,
		"description":    "Should be true to adopt and manage default security group",
		"module_address": "module.vpc",
		"name":           "manage_default_security_group",
	},
	"module.vpc:manage_default_vpc": {
		"default":        false,
		"description":    "Should be true to adopt and manage Default VPC",
		"module_address": "module.vpc",
		"name":           "manage_default_vpc",
	},
	"module.vpc:map_public_ip_on_launch": {
		"default":        true,
		"description":    "Should be false if you do not want to auto-assign public IP on launch",
		"module_address": "module.vpc",
		"name":           "map_public_ip_on_launch",
	},
	"module.vpc:monitoring_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Monitoring endpoint",
		"module_address": "module.vpc",
		"name":           "monitoring_endpoint_private_dns_enabled",
	},
	"module.vpc:monitoring_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for CloudWatch Monitoring endpoint",
		"module_address": "module.vpc",
		"name":           "monitoring_endpoint_security_group_ids",
	},
	"module.vpc:monitoring_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for CloudWatch Monitoring endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "monitoring_endpoint_subnet_ids",
	},
	"module.vpc:name": {
		"default":        "",
		"description":    "Name to be used on all the resources as identifier",
		"module_address": "module.vpc",
		"name":           "name",
	},
	"module.vpc:nat_eip_tags": {
		"default":        {},
		"description":    "Additional tags for the NAT EIP",
		"module_address": "module.vpc",
		"name":           "nat_eip_tags",
	},
	"module.vpc:nat_gateway_tags": {
		"default":        {},
		"description":    "Additional tags for the NAT gateways",
		"module_address": "module.vpc",
		"name":           "nat_gateway_tags",
	},
	"module.vpc:one_nat_gateway_per_az": {
		"default":        false,
		"description":    "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.",
		"module_address": "module.vpc",
		"name":           "one_nat_gateway_per_az",
	},
	"module.vpc:private_acl_tags": {
		"default":        {},
		"description":    "Additional tags for the private subnets network ACL",
		"module_address": "module.vpc",
		"name":           "private_acl_tags",
	},
	"module.vpc:private_dedicated_network_acl": {
		"default":        false,
		"description":    "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
		"module_address": "module.vpc",
		"name":           "private_dedicated_network_acl",
	},
	"module.vpc:private_inbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Private subnets inbound network ACLs",
		"module_address": "module.vpc",
		"name":           "private_inbound_acl_rules",
	},
	"module.vpc:private_outbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Private subnets outbound network ACLs",
		"module_address": "module.vpc",
		"name":           "private_outbound_acl_rules",
	},
	"module.vpc:private_route_table_tags": {
		"default":        {},
		"description":    "Additional tags for the private route tables",
		"module_address": "module.vpc",
		"name":           "private_route_table_tags",
	},
	"module.vpc:private_subnet_assign_ipv6_address_on_creation": {
		"default":        null,
		"description":    "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
		"module_address": "module.vpc",
		"name":           "private_subnet_assign_ipv6_address_on_creation",
	},
	"module.vpc:private_subnet_ipv6_prefixes": {
		"default":        [],
		"description":    "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
		"module_address": "module.vpc",
		"name":           "private_subnet_ipv6_prefixes",
	},
	"module.vpc:private_subnet_suffix": {
		"default":        "private",
		"description":    "Suffix to append to private subnets name",
		"module_address": "module.vpc",
		"name":           "private_subnet_suffix",
	},
	"module.vpc:private_subnet_tags": {
		"default":        {},
		"description":    "Additional tags for the private subnets",
		"module_address": "module.vpc",
		"name":           "private_subnet_tags",
	},
	"module.vpc:private_subnets": {
		"default":        [],
		"description":    "A list of private subnets inside the VPC",
		"module_address": "module.vpc",
		"name":           "private_subnets",
	},
	"module.vpc:propagate_intra_route_tables_vgw": {
		"default":        false,
		"description":    "Should be true if you want route table propagation",
		"module_address": "module.vpc",
		"name":           "propagate_intra_route_tables_vgw",
	},
	"module.vpc:propagate_private_route_tables_vgw": {
		"default":        false,
		"description":    "Should be true if you want route table propagation",
		"module_address": "module.vpc",
		"name":           "propagate_private_route_tables_vgw",
	},
	"module.vpc:propagate_public_route_tables_vgw": {
		"default":        false,
		"description":    "Should be true if you want route table propagation",
		"module_address": "module.vpc",
		"name":           "propagate_public_route_tables_vgw",
	},
	"module.vpc:public_acl_tags": {
		"default":        {},
		"description":    "Additional tags for the public subnets network ACL",
		"module_address": "module.vpc",
		"name":           "public_acl_tags",
	},
	"module.vpc:public_dedicated_network_acl": {
		"default":        false,
		"description":    "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
		"module_address": "module.vpc",
		"name":           "public_dedicated_network_acl",
	},
	"module.vpc:public_inbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Public subnets inbound network ACLs",
		"module_address": "module.vpc",
		"name":           "public_inbound_acl_rules",
	},
	"module.vpc:public_outbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Public subnets outbound network ACLs",
		"module_address": "module.vpc",
		"name":           "public_outbound_acl_rules",
	},
	"module.vpc:public_route_table_tags": {
		"default":        {},
		"description":    "Additional tags for the public route tables",
		"module_address": "module.vpc",
		"name":           "public_route_table_tags",
	},
	"module.vpc:public_subnet_assign_ipv6_address_on_creation": {
		"default":        null,
		"description":    "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
		"module_address": "module.vpc",
		"name":           "public_subnet_assign_ipv6_address_on_creation",
	},
	"module.vpc:public_subnet_ipv6_prefixes": {
		"default":        [],
		"description":    "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
		"module_address": "module.vpc",
		"name":           "public_subnet_ipv6_prefixes",
	},
	"module.vpc:public_subnet_suffix": {
		"default":        "public",
		"description":    "Suffix to append to public subnets name",
		"module_address": "module.vpc",
		"name":           "public_subnet_suffix",
	},
	"module.vpc:public_subnet_tags": {
		"default":        {},
		"description":    "Additional tags for the public subnets",
		"module_address": "module.vpc",
		"name":           "public_subnet_tags",
	},
	"module.vpc:public_subnets": {
		"default":        [],
		"description":    "A list of public subnets inside the VPC",
		"module_address": "module.vpc",
		"name":           "public_subnets",
	},
	"module.vpc:qldb_session_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for QLDB Session endpoint",
		"module_address": "module.vpc",
		"name":           "qldb_session_endpoint_private_dns_enabled",
	},
	"module.vpc:qldb_session_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for QLDB Session endpoint",
		"module_address": "module.vpc",
		"name":           "qldb_session_endpoint_security_group_ids",
	},
	"module.vpc:qldb_session_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for QLDB Session endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "qldb_session_endpoint_subnet_ids",
	},
	"module.vpc:rds_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for RDS endpoint",
		"module_address": "module.vpc",
		"name":           "rds_endpoint_private_dns_enabled",
	},
	"module.vpc:rds_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for RDS endpoint",
		"module_address": "module.vpc",
		"name":           "rds_endpoint_security_group_ids",
	},
	"module.vpc:rds_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for RDS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "rds_endpoint_subnet_ids",
	},
	"module.vpc:redshift_acl_tags": {
		"default":        {},
		"description":    "Additional tags for the redshift subnets network ACL",
		"module_address": "module.vpc",
		"name":           "redshift_acl_tags",
	},
	"module.vpc:redshift_dedicated_network_acl": {
		"default":        false,
		"description":    "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
		"module_address": "module.vpc",
		"name":           "redshift_dedicated_network_acl",
	},
	"module.vpc:redshift_inbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Redshift subnets inbound network ACL rules",
		"module_address": "module.vpc",
		"name":           "redshift_inbound_acl_rules",
	},
	"module.vpc:redshift_outbound_acl_rules": {
		"default": [
			{
				"cidr_block":  "0.0.0.0/0",
				"from_port":   "0",
				"protocol":    "-1",
				"rule_action": "allow",
				"rule_number": "100",
				"to_port":     "0",
			},
		],
		"description":    "Redshift subnets outbound network ACL rules",
		"module_address": "module.vpc",
		"name":           "redshift_outbound_acl_rules",
	},
	"module.vpc:redshift_route_table_tags": {
		"default":        {},
		"description":    "Additional tags for the redshift route tables",
		"module_address": "module.vpc",
		"name":           "redshift_route_table_tags",
	},
	"module.vpc:redshift_subnet_assign_ipv6_address_on_creation": {
		"default":        null,
		"description":    "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
		"module_address": "module.vpc",
		"name":           "redshift_subnet_assign_ipv6_address_on_creation",
	},
	"module.vpc:redshift_subnet_group_tags": {
		"default":        {},
		"description":    "Additional tags for the redshift subnet group",
		"module_address": "module.vpc",
		"name":           "redshift_subnet_group_tags",
	},
	"module.vpc:redshift_subnet_ipv6_prefixes": {
		"default":        [],
		"description":    "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
		"module_address": "module.vpc",
		"name":           "redshift_subnet_ipv6_prefixes",
	},
	"module.vpc:redshift_subnet_suffix": {
		"default":        "redshift",
		"description":    "Suffix to append to redshift subnets name",
		"module_address": "module.vpc",
		"name":           "redshift_subnet_suffix",
	},
	"module.vpc:redshift_subnet_tags": {
		"default":        {},
		"description":    "Additional tags for the redshift subnets",
		"module_address": "module.vpc",
		"name":           "redshift_subnet_tags",
	},
	"module.vpc:redshift_subnets": {
		"default":        [],
		"description":    "A list of redshift subnets",
		"module_address": "module.vpc",
		"name":           "redshift_subnets",
	},
	"module.vpc:rekognition_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Rekognition endpoint",
		"module_address": "module.vpc",
		"name":           "rekognition_endpoint_private_dns_enabled",
	},
	"module.vpc:rekognition_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Rekognition endpoint",
		"module_address": "module.vpc",
		"name":           "rekognition_endpoint_security_group_ids",
	},
	"module.vpc:rekognition_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Rekognition endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "rekognition_endpoint_subnet_ids",
	},
	"module.vpc:reuse_nat_ips": {
		"default":        false,
		"description":    "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
		"module_address": "module.vpc",
		"name":           "reuse_nat_ips",
	},
	"module.vpc:sagemaker_api_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for SageMaker API endpoint",
		"module_address": "module.vpc",
		"name":           "sagemaker_api_endpoint_private_dns_enabled",
	},
	"module.vpc:sagemaker_api_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for SageMaker API endpoint",
		"module_address": "module.vpc",
		"name":           "sagemaker_api_endpoint_security_group_ids",
	},
	"module.vpc:sagemaker_api_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for SageMaker API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "sagemaker_api_endpoint_subnet_ids",
	},
	"module.vpc:sagemaker_notebook_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Sagemaker Notebook endpoint",
		"module_address": "module.vpc",
		"name":           "sagemaker_notebook_endpoint_private_dns_enabled",
	},
	"module.vpc:sagemaker_notebook_endpoint_region": {
		"default":        "",
		"description":    "Region to use for Sagemaker Notebook endpoint",
		"module_address": "module.vpc",
		"name":           "sagemaker_notebook_endpoint_region",
	},
	"module.vpc:sagemaker_notebook_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Sagemaker Notebook endpoint",
		"module_address": "module.vpc",
		"name":           "sagemaker_notebook_endpoint_security_group_ids",
	},
	"module.vpc:sagemaker_notebook_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Sagemaker Notebook endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "sagemaker_notebook_endpoint_subnet_ids",
	},
	"module.vpc:sagemaker_runtime_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for SageMaker Runtime endpoint",
		"module_address": "module.vpc",
		"name":           "sagemaker_runtime_endpoint_private_dns_enabled",
	},
	"module.vpc:sagemaker_runtime_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for SageMaker Runtime endpoint",
		"module_address": "module.vpc",
		"name":           "sagemaker_runtime_endpoint_security_group_ids",
	},
	"module.vpc:sagemaker_runtime_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for SageMaker Runtime endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "sagemaker_runtime_endpoint_subnet_ids",
	},
	"module.vpc:secondary_cidr_blocks": {
		"default":        [],
		"description":    "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
		"module_address": "module.vpc",
		"name":           "secondary_cidr_blocks",
	},
	"module.vpc:secretsmanager_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Secrets Manager endpoint",
		"module_address": "module.vpc",
		"name":           "secretsmanager_endpoint_private_dns_enabled",
	},
	"module.vpc:secretsmanager_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Secrets Manager endpoint",
		"module_address": "module.vpc",
		"name":           "secretsmanager_endpoint_security_group_ids",
	},
	"module.vpc:secretsmanager_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Secrets Manager endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "secretsmanager_endpoint_subnet_ids",
	},
	"module.vpc:servicecatalog_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Service Catalog endpoint",
		"module_address": "module.vpc",
		"name":           "servicecatalog_endpoint_private_dns_enabled",
	},
	"module.vpc:servicecatalog_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Service Catalog endpoint",
		"module_address": "module.vpc",
		"name":           "servicecatalog_endpoint_security_group_ids",
	},
	"module.vpc:servicecatalog_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Service Catalog endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "servicecatalog_endpoint_subnet_ids",
	},
	"module.vpc:ses_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for SES endpoint",
		"module_address": "module.vpc",
		"name":           "ses_endpoint_private_dns_enabled",
	},
	"module.vpc:ses_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for SES endpoint",
		"module_address": "module.vpc",
		"name":           "ses_endpoint_security_group_ids",
	},
	"module.vpc:ses_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for SES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ses_endpoint_subnet_ids",
	},
	"module.vpc:single_nat_gateway": {
		"default":        false,
		"description":    "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
		"module_address": "module.vpc",
		"name":           "single_nat_gateway",
	},
	"module.vpc:sms_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for SMS endpoint",
		"module_address": "module.vpc",
		"name":           "sms_endpoint_private_dns_enabled",
	},
	"module.vpc:sms_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for SMS endpoint",
		"module_address": "module.vpc",
		"name":           "sms_endpoint_security_group_ids",
	},
	"module.vpc:sms_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for SMS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "sms_endpoint_subnet_ids",
	},
	"module.vpc:sns_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for SNS endpoint",
		"module_address": "module.vpc",
		"name":           "sns_endpoint_private_dns_enabled",
	},
	"module.vpc:sns_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for SNS endpoint",
		"module_address": "module.vpc",
		"name":           "sns_endpoint_security_group_ids",
	},
	"module.vpc:sns_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for SNS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "sns_endpoint_subnet_ids",
	},
	"module.vpc:sqs_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for SQS endpoint",
		"module_address": "module.vpc",
		"name":           "sqs_endpoint_private_dns_enabled",
	},
	"module.vpc:sqs_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for SQS endpoint",
		"module_address": "module.vpc",
		"name":           "sqs_endpoint_security_group_ids",
	},
	"module.vpc:sqs_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for SQS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "sqs_endpoint_subnet_ids",
	},
	"module.vpc:ssm_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for SSM endpoint",
		"module_address": "module.vpc",
		"name":           "ssm_endpoint_private_dns_enabled",
	},
	"module.vpc:ssm_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for SSM endpoint",
		"module_address": "module.vpc",
		"name":           "ssm_endpoint_security_group_ids",
	},
	"module.vpc:ssm_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for SSM endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ssm_endpoint_subnet_ids",
	},
	"module.vpc:ssmmessages_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for SSMMESSAGES endpoint",
		"module_address": "module.vpc",
		"name":           "ssmmessages_endpoint_private_dns_enabled",
	},
	"module.vpc:ssmmessages_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for SSMMESSAGES endpoint",
		"module_address": "module.vpc",
		"name":           "ssmmessages_endpoint_security_group_ids",
	},
	"module.vpc:ssmmessages_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for SSMMESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "ssmmessages_endpoint_subnet_ids",
	},
	"module.vpc:states_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Step Function endpoint",
		"module_address": "module.vpc",
		"name":           "states_endpoint_private_dns_enabled",
	},
	"module.vpc:states_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Step Function endpoint",
		"module_address": "module.vpc",
		"name":           "states_endpoint_security_group_ids",
	},
	"module.vpc:states_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Step Function endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "states_endpoint_subnet_ids",
	},
	"module.vpc:storagegateway_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Storage Gateway endpoint",
		"module_address": "module.vpc",
		"name":           "storagegateway_endpoint_private_dns_enabled",
	},
	"module.vpc:storagegateway_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Storage Gateway endpoint",
		"module_address": "module.vpc",
		"name":           "storagegateway_endpoint_security_group_ids",
	},
	"module.vpc:storagegateway_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Storage Gateway endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "storagegateway_endpoint_subnet_ids",
	},
	"module.vpc:sts_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for STS endpoint",
		"module_address": "module.vpc",
		"name":           "sts_endpoint_private_dns_enabled",
	},
	"module.vpc:sts_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for STS endpoint",
		"module_address": "module.vpc",
		"name":           "sts_endpoint_security_group_ids",
	},
	"module.vpc:sts_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for STS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "sts_endpoint_subnet_ids",
	},
	"module.vpc:tags": {
		"default":        {},
		"description":    "A map of tags to add to all resources",
		"module_address": "module.vpc",
		"name":           "tags",
	},
	"module.vpc:textract_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Textract endpoint",
		"module_address": "module.vpc",
		"name":           "textract_endpoint_private_dns_enabled",
	},
	"module.vpc:textract_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Textract endpoint",
		"module_address": "module.vpc",
		"name":           "textract_endpoint_security_group_ids",
	},
	"module.vpc:textract_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Textract endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "textract_endpoint_subnet_ids",
	},
	"module.vpc:transfer_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Transfer endpoint",
		"module_address": "module.vpc",
		"name":           "transfer_endpoint_private_dns_enabled",
	},
	"module.vpc:transfer_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Transfer endpoint",
		"module_address": "module.vpc",
		"name":           "transfer_endpoint_security_group_ids",
	},
	"module.vpc:transfer_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Transfer endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "transfer_endpoint_subnet_ids",
	},
	"module.vpc:transferserver_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Transfer Server endpoint",
		"module_address": "module.vpc",
		"name":           "transferserver_endpoint_private_dns_enabled",
	},
	"module.vpc:transferserver_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Transfer Server endpoint",
		"module_address": "module.vpc",
		"name":           "transferserver_endpoint_security_group_ids",
	},
	"module.vpc:transferserver_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Transfer Server endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "transferserver_endpoint_subnet_ids",
	},
	"module.vpc:vpc_endpoint_tags": {
		"default":        {},
		"description":    "Additional tags for the VPC Endpoints",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_tags",
	},
	"module.vpc:vpc_flow_log_tags": {
		"default":        {},
		"description":    "Additional tags for the VPC Flow Logs",
		"module_address": "module.vpc",
		"name":           "vpc_flow_log_tags",
	},
	"module.vpc:vpc_tags": {
		"default":        {},
		"description":    "Additional tags for the VPC",
		"module_address": "module.vpc",
		"name":           "vpc_tags",
	},
	"module.vpc:vpn_gateway_az": {
		"default":        null,
		"description":    "The Availability Zone for the VPN Gateway",
		"module_address": "module.vpc",
		"name":           "vpn_gateway_az",
	},
	"module.vpc:vpn_gateway_id": {
		"default":        "",
		"description":    "ID of VPN Gateway to attach to the VPC",
		"module_address": "module.vpc",
		"name":           "vpn_gateway_id",
	},
	"module.vpc:vpn_gateway_tags": {
		"default":        {},
		"description":    "Additional tags for the VPN gateway",
		"module_address": "module.vpc",
		"name":           "vpn_gateway_tags",
	},
	"module.vpc:workspaces_endpoint_private_dns_enabled": {
		"default":        false,
		"description":    "Whether or not to associate a private hosted zone with the specified VPC for Workspaces endpoint",
		"module_address": "module.vpc",
		"name":           "workspaces_endpoint_private_dns_enabled",
	},
	"module.vpc:workspaces_endpoint_security_group_ids": {
		"default":        [],
		"description":    "The ID of one or more security groups to associate with the network interface for Workspaces endpoint",
		"module_address": "module.vpc",
		"name":           "workspaces_endpoint_security_group_ids",
	},
	"module.vpc:workspaces_endpoint_subnet_ids": {
		"default":        [],
		"description":    "The ID of one or more subnets in which to create a network interface for Workspaces endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
		"module_address": "module.vpc",
		"name":           "workspaces_endpoint_subnet_ids",
	},
}

outputs = {
	"module.app_security_group.module.sg:this_security_group_description": {
		"depends_on":     [],
		"description":    "The description of the security group",
		"module_address": "module.app_security_group.module.sg",
		"name":           "this_security_group_description",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.app_security_group.module.sg:this_security_group_id": {
		"depends_on":     [],
		"description":    "The ID of the security group",
		"module_address": "module.app_security_group.module.sg",
		"name":           "this_security_group_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.app_security_group.module.sg:this_security_group_name": {
		"depends_on":     [],
		"description":    "The name of the security group",
		"module_address": "module.app_security_group.module.sg",
		"name":           "this_security_group_name",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.app_security_group.module.sg:this_security_group_owner_id": {
		"depends_on":     [],
		"description":    "The owner ID",
		"module_address": "module.app_security_group.module.sg",
		"name":           "this_security_group_owner_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.app_security_group.module.sg:this_security_group_vpc_id": {
		"depends_on":     [],
		"description":    "The VPC ID",
		"module_address": "module.app_security_group.module.sg",
		"name":           "this_security_group_vpc_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.app_security_group:this_security_group_description": {
		"depends_on":     [],
		"description":    "The description of the security group",
		"module_address": "module.app_security_group",
		"name":           "this_security_group_description",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_description",
				"module.sg",
			],
		},
	},
	"module.app_security_group:this_security_group_id": {
		"depends_on":     [],
		"description":    "The ID of the security group",
		"module_address": "module.app_security_group",
		"name":           "this_security_group_id",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_id",
				"module.sg",
			],
		},
	},
	"module.app_security_group:this_security_group_name": {
		"depends_on":     [],
		"description":    "The name of the security group",
		"module_address": "module.app_security_group",
		"name":           "this_security_group_name",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_name",
				"module.sg",
			],
		},
	},
	"module.app_security_group:this_security_group_owner_id": {
		"depends_on":     [],
		"description":    "The owner ID",
		"module_address": "module.app_security_group",
		"name":           "this_security_group_owner_id",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_owner_id",
				"module.sg",
			],
		},
	},
	"module.app_security_group:this_security_group_vpc_id": {
		"depends_on":     [],
		"description":    "The VPC ID",
		"module_address": "module.app_security_group",
		"name":           "this_security_group_vpc_id",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_vpc_id",
				"module.sg",
			],
		},
	},
	"module.ec2_instances:instance_ids": {
		"depends_on":     [],
		"description":    "IDs of EC2 instances",
		"module_address": "module.ec2_instances",
		"name":           "instance_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.app",
			],
		},
	},
	"module.elb_http.module.elb:this_elb_arn": {
		"depends_on":     [],
		"description":    "The ARN of the ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "this_elb_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elb.this",
			],
		},
	},
	"module.elb_http.module.elb:this_elb_dns_name": {
		"depends_on":     [],
		"description":    "The DNS name of the ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "this_elb_dns_name",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elb.this",
			],
		},
	},
	"module.elb_http.module.elb:this_elb_id": {
		"depends_on":     [],
		"description":    "The name of the ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "this_elb_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elb.this",
			],
		},
	},
	"module.elb_http.module.elb:this_elb_instances": {
		"depends_on":     [],
		"description":    "The list of instances in the ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "this_elb_instances",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elb.this",
			],
		},
	},
	"module.elb_http.module.elb:this_elb_name": {
		"depends_on":     [],
		"description":    "The name of the ELB",
		"module_address": "module.elb_http.module.elb",
		"name":           "this_elb_name",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elb.this",
			],
		},
	},
	"module.elb_http.module.elb:this_elb_source_security_group": {
		"depends_on":     [],
		"description":    "The name of the security group that you can use as part of your inbound rules for your load balancer's back-end application instances. Use this for Classic or Default VPC only.",
		"module_address": "module.elb_http.module.elb",
		"name":           "this_elb_source_security_group",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elb.this",
			],
		},
	},
	"module.elb_http.module.elb:this_elb_source_security_group_id": {
		"depends_on":     [],
		"description":    "The ID of the security group that you can use as part of your inbound rules for your load balancer's back-end application instances. Only available on ELBs launched in a VPC.",
		"module_address": "module.elb_http.module.elb",
		"name":           "this_elb_source_security_group_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elb.this",
			],
		},
	},
	"module.elb_http.module.elb:this_elb_zone_id": {
		"depends_on":     [],
		"description":    "The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)",
		"module_address": "module.elb_http.module.elb",
		"name":           "this_elb_zone_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elb.this",
			],
		},
	},
	"module.elb_http:this_elb_arn": {
		"depends_on":     [],
		"description":    "The ARN of the ELB",
		"module_address": "module.elb_http",
		"name":           "this_elb_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"module.elb.this_elb_arn",
				"module.elb",
			],
		},
	},
	"module.elb_http:this_elb_dns_name": {
		"depends_on":     [],
		"description":    "The DNS name of the ELB",
		"module_address": "module.elb_http",
		"name":           "this_elb_dns_name",
		"sensitive":      false,
		"value": {
			"references": [
				"module.elb.this_elb_dns_name",
				"module.elb",
			],
		},
	},
	"module.elb_http:this_elb_id": {
		"depends_on":     [],
		"description":    "The name of the ELB",
		"module_address": "module.elb_http",
		"name":           "this_elb_id",
		"sensitive":      false,
		"value": {
			"references": [
				"module.elb.this_elb_id",
				"module.elb",
			],
		},
	},
	"module.elb_http:this_elb_instances": {
		"depends_on":     [],
		"description":    "The list of instances in the ELB",
		"module_address": "module.elb_http",
		"name":           "this_elb_instances",
		"sensitive":      false,
		"value": {
			"references": [
				"module.elb.this_elb_instances",
				"module.elb",
			],
		},
	},
	"module.elb_http:this_elb_name": {
		"depends_on":     [],
		"description":    "The name of the ELB",
		"module_address": "module.elb_http",
		"name":           "this_elb_name",
		"sensitive":      false,
		"value": {
			"references": [
				"module.elb.this_elb_name",
				"module.elb",
			],
		},
	},
	"module.elb_http:this_elb_source_security_group_id": {
		"depends_on":     [],
		"description":    "The ID of the security group that you can use as part of your inbound rules for your load balancer's back-end application instances",
		"module_address": "module.elb_http",
		"name":           "this_elb_source_security_group_id",
		"sensitive":      false,
		"value": {
			"references": [
				"module.elb.this_elb_source_security_group_id",
				"module.elb",
			],
		},
	},
	"module.elb_http:this_elb_zone_id": {
		"depends_on":     [],
		"description":    "The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)",
		"module_address": "module.elb_http",
		"name":           "this_elb_zone_id",
		"sensitive":      false,
		"value": {
			"references": [
				"module.elb.this_elb_zone_id",
				"module.elb",
			],
		},
	},
	"module.lb_security_group.module.sg:this_security_group_description": {
		"depends_on":     [],
		"description":    "The description of the security group",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "this_security_group_description",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.lb_security_group.module.sg:this_security_group_id": {
		"depends_on":     [],
		"description":    "The ID of the security group",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "this_security_group_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.lb_security_group.module.sg:this_security_group_name": {
		"depends_on":     [],
		"description":    "The name of the security group",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "this_security_group_name",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.lb_security_group.module.sg:this_security_group_owner_id": {
		"depends_on":     [],
		"description":    "The owner ID",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "this_security_group_owner_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.lb_security_group.module.sg:this_security_group_vpc_id": {
		"depends_on":     [],
		"description":    "The VPC ID",
		"module_address": "module.lb_security_group.module.sg",
		"name":           "this_security_group_vpc_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_security_group.this",
				"aws_security_group.this_name_prefix",
			],
		},
	},
	"module.lb_security_group:this_security_group_description": {
		"depends_on":     [],
		"description":    "The description of the security group",
		"module_address": "module.lb_security_group",
		"name":           "this_security_group_description",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_description",
				"module.sg",
			],
		},
	},
	"module.lb_security_group:this_security_group_id": {
		"depends_on":     [],
		"description":    "The ID of the security group",
		"module_address": "module.lb_security_group",
		"name":           "this_security_group_id",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_id",
				"module.sg",
			],
		},
	},
	"module.lb_security_group:this_security_group_name": {
		"depends_on":     [],
		"description":    "The name of the security group",
		"module_address": "module.lb_security_group",
		"name":           "this_security_group_name",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_name",
				"module.sg",
			],
		},
	},
	"module.lb_security_group:this_security_group_owner_id": {
		"depends_on":     [],
		"description":    "The owner ID",
		"module_address": "module.lb_security_group",
		"name":           "this_security_group_owner_id",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_owner_id",
				"module.sg",
			],
		},
	},
	"module.lb_security_group:this_security_group_vpc_id": {
		"depends_on":     [],
		"description":    "The VPC ID",
		"module_address": "module.lb_security_group",
		"name":           "this_security_group_vpc_id",
		"sensitive":      false,
		"value": {
			"references": [
				"module.sg.this_security_group_vpc_id",
				"module.sg",
			],
		},
	},
	"module.vpc:azs": {
		"depends_on":     [],
		"description":    "A list of availability zones specified as argument to this module",
		"module_address": "module.vpc",
		"name":           "azs",
		"sensitive":      false,
		"value": {
			"references": [
				"var.azs",
			],
		},
	},
	"module.vpc:cgw_arns": {
		"depends_on":     [],
		"description":    "List of ARNs of Customer Gateway",
		"module_address": "module.vpc",
		"name":           "cgw_arns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_customer_gateway.this",
			],
		},
	},
	"module.vpc:cgw_ids": {
		"depends_on":     [],
		"description":    "List of IDs of Customer Gateway",
		"module_address": "module.vpc",
		"name":           "cgw_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_customer_gateway.this",
			],
		},
	},
	"module.vpc:database_internet_gateway_route_id": {
		"depends_on":     [],
		"description":    "ID of the database internet gateway route.",
		"module_address": "module.vpc",
		"name":           "database_internet_gateway_route_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route.database_internet_gateway",
			],
		},
	},
	"module.vpc:database_ipv6_egress_route_id": {
		"depends_on":     [],
		"description":    "ID of the database IPv6 egress route.",
		"module_address": "module.vpc",
		"name":           "database_ipv6_egress_route_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route.database_ipv6_egress",
			],
		},
	},
	"module.vpc:database_nat_gateway_route_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the database nat gateway route.",
		"module_address": "module.vpc",
		"name":           "database_nat_gateway_route_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route.database_nat_gateway",
			],
		},
	},
	"module.vpc:database_network_acl_arn": {
		"depends_on":     [],
		"description":    "ARN of the database network ACL",
		"module_address": "module.vpc",
		"name":           "database_network_acl_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.database",
			],
		},
	},
	"module.vpc:database_network_acl_id": {
		"depends_on":     [],
		"description":    "ID of the database network ACL",
		"module_address": "module.vpc",
		"name":           "database_network_acl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.database",
			],
		},
	},
	"module.vpc:database_route_table_association_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the database route table association",
		"module_address": "module.vpc",
		"name":           "database_route_table_association_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table_association.database",
			],
		},
	},
	"module.vpc:database_route_table_ids": {
		"depends_on":     [],
		"description":    "List of IDs of database route tables",
		"module_address": "module.vpc",
		"name":           "database_route_table_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table.database",
				"aws_route_table.database",
				"aws_route_table.private",
			],
		},
	},
	"module.vpc:database_subnet_arns": {
		"depends_on":     [],
		"description":    "List of ARNs of database subnets",
		"module_address": "module.vpc",
		"name":           "database_subnet_arns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.database",
			],
		},
	},
	"module.vpc:database_subnet_group": {
		"depends_on":     [],
		"description":    "ID of database subnet group",
		"module_address": "module.vpc",
		"name":           "database_subnet_group",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_db_subnet_group.database",
			],
		},
	},
	"module.vpc:database_subnets": {
		"depends_on":     [],
		"description":    "List of IDs of database subnets",
		"module_address": "module.vpc",
		"name":           "database_subnets",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.database",
			],
		},
	},
	"module.vpc:database_subnets_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of cidr_blocks of database subnets",
		"module_address": "module.vpc",
		"name":           "database_subnets_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.database",
			],
		},
	},
	"module.vpc:database_subnets_ipv6_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
		"module_address": "module.vpc",
		"name":           "database_subnets_ipv6_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.database",
			],
		},
	},
	"module.vpc:default_network_acl_id": {
		"depends_on":     [],
		"description":    "The ID of the default network ACL",
		"module_address": "module.vpc",
		"name":           "default_network_acl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:default_route_table_id": {
		"depends_on":     [],
		"description":    "The ID of the default route table",
		"module_address": "module.vpc",
		"name":           "default_route_table_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:default_security_group_id": {
		"depends_on":     [],
		"description":    "The ID of the security group created by default on VPC creation",
		"module_address": "module.vpc",
		"name":           "default_security_group_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_arn": {
		"depends_on":     [],
		"description":    "The ARN of the VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_cidr_block": {
		"depends_on":     [],
		"description":    "The CIDR block of the VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_cidr_block",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_default_network_acl_id": {
		"depends_on":     [],
		"description":    "The ID of the default network ACL",
		"module_address": "module.vpc",
		"name":           "default_vpc_default_network_acl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_default_route_table_id": {
		"depends_on":     [],
		"description":    "The ID of the default route table",
		"module_address": "module.vpc",
		"name":           "default_vpc_default_route_table_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_default_security_group_id": {
		"depends_on":     [],
		"description":    "The ID of the security group created by default on VPC creation",
		"module_address": "module.vpc",
		"name":           "default_vpc_default_security_group_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_enable_dns_hostnames": {
		"depends_on":     [],
		"description":    "Whether or not the VPC has DNS hostname support",
		"module_address": "module.vpc",
		"name":           "default_vpc_enable_dns_hostnames",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_enable_dns_support": {
		"depends_on":     [],
		"description":    "Whether or not the VPC has DNS support",
		"module_address": "module.vpc",
		"name":           "default_vpc_enable_dns_support",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_id": {
		"depends_on":     [],
		"description":    "The ID of the VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_instance_tenancy": {
		"depends_on":     [],
		"description":    "Tenancy of instances spin up within VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_instance_tenancy",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:default_vpc_main_route_table_id": {
		"depends_on":     [],
		"description":    "The ID of the main route table associated with this VPC",
		"module_address": "module.vpc",
		"name":           "default_vpc_main_route_table_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_default_vpc.this",
			],
		},
	},
	"module.vpc:egress_only_internet_gateway_id": {
		"depends_on":     [],
		"description":    "The ID of the egress only Internet Gateway",
		"module_address": "module.vpc",
		"name":           "egress_only_internet_gateway_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_egress_only_internet_gateway.this",
			],
		},
	},
	"module.vpc:elasticache_network_acl_arn": {
		"depends_on":     [],
		"description":    "ARN of the elasticache network ACL",
		"module_address": "module.vpc",
		"name":           "elasticache_network_acl_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.elasticache",
			],
		},
	},
	"module.vpc:elasticache_network_acl_id": {
		"depends_on":     [],
		"description":    "ID of the elasticache network ACL",
		"module_address": "module.vpc",
		"name":           "elasticache_network_acl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.elasticache",
			],
		},
	},
	"module.vpc:elasticache_route_table_association_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the elasticache route table association",
		"module_address": "module.vpc",
		"name":           "elasticache_route_table_association_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table_association.elasticache",
			],
		},
	},
	"module.vpc:elasticache_route_table_ids": {
		"depends_on":     [],
		"description":    "List of IDs of elasticache route tables",
		"module_address": "module.vpc",
		"name":           "elasticache_route_table_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table.elasticache",
				"aws_route_table.elasticache",
				"aws_route_table.private",
			],
		},
	},
	"module.vpc:elasticache_subnet_arns": {
		"depends_on":     [],
		"description":    "List of ARNs of elasticache subnets",
		"module_address": "module.vpc",
		"name":           "elasticache_subnet_arns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.elasticache",
			],
		},
	},
	"module.vpc:elasticache_subnet_group": {
		"depends_on":     [],
		"description":    "ID of elasticache subnet group",
		"module_address": "module.vpc",
		"name":           "elasticache_subnet_group",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elasticache_subnet_group.elasticache",
			],
		},
	},
	"module.vpc:elasticache_subnet_group_name": {
		"depends_on":     [],
		"description":    "Name of elasticache subnet group",
		"module_address": "module.vpc",
		"name":           "elasticache_subnet_group_name",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_elasticache_subnet_group.elasticache",
			],
		},
	},
	"module.vpc:elasticache_subnets": {
		"depends_on":     [],
		"description":    "List of IDs of elasticache subnets",
		"module_address": "module.vpc",
		"name":           "elasticache_subnets",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.elasticache",
			],
		},
	},
	"module.vpc:elasticache_subnets_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of cidr_blocks of elasticache subnets",
		"module_address": "module.vpc",
		"name":           "elasticache_subnets_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.elasticache",
			],
		},
	},
	"module.vpc:elasticache_subnets_ipv6_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
		"module_address": "module.vpc",
		"name":           "elasticache_subnets_ipv6_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.elasticache",
			],
		},
	},
	"module.vpc:igw_arn": {
		"depends_on":     [],
		"description":    "The ARN of the Internet Gateway",
		"module_address": "module.vpc",
		"name":           "igw_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_internet_gateway.this",
			],
		},
	},
	"module.vpc:igw_id": {
		"depends_on":     [],
		"description":    "The ID of the Internet Gateway",
		"module_address": "module.vpc",
		"name":           "igw_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_internet_gateway.this",
			],
		},
	},
	"module.vpc:intra_network_acl_arn": {
		"depends_on":     [],
		"description":    "ARN of the intra network ACL",
		"module_address": "module.vpc",
		"name":           "intra_network_acl_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.intra",
			],
		},
	},
	"module.vpc:intra_network_acl_id": {
		"depends_on":     [],
		"description":    "ID of the intra network ACL",
		"module_address": "module.vpc",
		"name":           "intra_network_acl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.intra",
			],
		},
	},
	"module.vpc:intra_route_table_association_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the intra route table association",
		"module_address": "module.vpc",
		"name":           "intra_route_table_association_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table_association.intra",
			],
		},
	},
	"module.vpc:intra_route_table_ids": {
		"depends_on":     [],
		"description":    "List of IDs of intra route tables",
		"module_address": "module.vpc",
		"name":           "intra_route_table_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table.intra",
			],
		},
	},
	"module.vpc:intra_subnet_arns": {
		"depends_on":     [],
		"description":    "List of ARNs of intra subnets",
		"module_address": "module.vpc",
		"name":           "intra_subnet_arns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.intra",
			],
		},
	},
	"module.vpc:intra_subnets": {
		"depends_on":     [],
		"description":    "List of IDs of intra subnets",
		"module_address": "module.vpc",
		"name":           "intra_subnets",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.intra",
			],
		},
	},
	"module.vpc:intra_subnets_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of cidr_blocks of intra subnets",
		"module_address": "module.vpc",
		"name":           "intra_subnets_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.intra",
			],
		},
	},
	"module.vpc:intra_subnets_ipv6_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
		"module_address": "module.vpc",
		"name":           "intra_subnets_ipv6_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.intra",
			],
		},
	},
	"module.vpc:name": {
		"depends_on":     [],
		"description":    "The name of the VPC specified as argument to this module",
		"module_address": "module.vpc",
		"name":           "name",
		"sensitive":      false,
		"value": {
			"references": [
				"var.name",
			],
		},
	},
	"module.vpc:nat_ids": {
		"depends_on":     [],
		"description":    "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
		"module_address": "module.vpc",
		"name":           "nat_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_eip.nat",
			],
		},
	},
	"module.vpc:nat_public_ips": {
		"depends_on":     [],
		"description":    "List of public Elastic IPs created for AWS NAT Gateway",
		"module_address": "module.vpc",
		"name":           "nat_public_ips",
		"sensitive":      false,
		"value": {
			"references": [
				"var.reuse_nat_ips",
				"var.external_nat_ips",
				"aws_eip.nat",
			],
		},
	},
	"module.vpc:natgw_ids": {
		"depends_on":     [],
		"description":    "List of NAT Gateway IDs",
		"module_address": "module.vpc",
		"name":           "natgw_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_nat_gateway.this",
			],
		},
	},
	"module.vpc:private_ipv6_egress_route_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the ipv6 egress route.",
		"module_address": "module.vpc",
		"name":           "private_ipv6_egress_route_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route.private_ipv6_egress",
			],
		},
	},
	"module.vpc:private_nat_gateway_route_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the private nat gateway route.",
		"module_address": "module.vpc",
		"name":           "private_nat_gateway_route_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route.private_nat_gateway",
			],
		},
	},
	"module.vpc:private_network_acl_arn": {
		"depends_on":     [],
		"description":    "ARN of the private network ACL",
		"module_address": "module.vpc",
		"name":           "private_network_acl_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.private",
			],
		},
	},
	"module.vpc:private_network_acl_id": {
		"depends_on":     [],
		"description":    "ID of the private network ACL",
		"module_address": "module.vpc",
		"name":           "private_network_acl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.private",
			],
		},
	},
	"module.vpc:private_route_table_association_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the private route table association",
		"module_address": "module.vpc",
		"name":           "private_route_table_association_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table_association.private",
			],
		},
	},
	"module.vpc:private_route_table_ids": {
		"depends_on":     [],
		"description":    "List of IDs of private route tables",
		"module_address": "module.vpc",
		"name":           "private_route_table_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table.private",
			],
		},
	},
	"module.vpc:private_subnet_arns": {
		"depends_on":     [],
		"description":    "List of ARNs of private subnets",
		"module_address": "module.vpc",
		"name":           "private_subnet_arns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.private",
			],
		},
	},
	"module.vpc:private_subnets": {
		"depends_on":     [],
		"description":    "List of IDs of private subnets",
		"module_address": "module.vpc",
		"name":           "private_subnets",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.private",
			],
		},
	},
	"module.vpc:private_subnets_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of cidr_blocks of private subnets",
		"module_address": "module.vpc",
		"name":           "private_subnets_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.private",
			],
		},
	},
	"module.vpc:private_subnets_ipv6_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
		"module_address": "module.vpc",
		"name":           "private_subnets_ipv6_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.private",
			],
		},
	},
	"module.vpc:public_internet_gateway_ipv6_route_id": {
		"depends_on":     [],
		"description":    "ID of the IPv6 internet gateway route.",
		"module_address": "module.vpc",
		"name":           "public_internet_gateway_ipv6_route_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route.public_internet_gateway_ipv6",
			],
		},
	},
	"module.vpc:public_internet_gateway_route_id": {
		"depends_on":     [],
		"description":    "ID of the internet gateway route.",
		"module_address": "module.vpc",
		"name":           "public_internet_gateway_route_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route.public_internet_gateway",
			],
		},
	},
	"module.vpc:public_network_acl_arn": {
		"depends_on":     [],
		"description":    "ARN of the public network ACL",
		"module_address": "module.vpc",
		"name":           "public_network_acl_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.public",
			],
		},
	},
	"module.vpc:public_network_acl_id": {
		"depends_on":     [],
		"description":    "ID of the public network ACL",
		"module_address": "module.vpc",
		"name":           "public_network_acl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.public",
			],
		},
	},
	"module.vpc:public_route_table_association_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the public route table association",
		"module_address": "module.vpc",
		"name":           "public_route_table_association_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table_association.public",
			],
		},
	},
	"module.vpc:public_route_table_ids": {
		"depends_on":     [],
		"description":    "List of IDs of public route tables",
		"module_address": "module.vpc",
		"name":           "public_route_table_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table.public",
			],
		},
	},
	"module.vpc:public_subnet_arns": {
		"depends_on":     [],
		"description":    "List of ARNs of public subnets",
		"module_address": "module.vpc",
		"name":           "public_subnet_arns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.public",
			],
		},
	},
	"module.vpc:public_subnets": {
		"depends_on":     [],
		"description":    "List of IDs of public subnets",
		"module_address": "module.vpc",
		"name":           "public_subnets",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.public",
			],
		},
	},
	"module.vpc:public_subnets_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of cidr_blocks of public subnets",
		"module_address": "module.vpc",
		"name":           "public_subnets_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.public",
			],
		},
	},
	"module.vpc:public_subnets_ipv6_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
		"module_address": "module.vpc",
		"name":           "public_subnets_ipv6_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.public",
			],
		},
	},
	"module.vpc:redshift_network_acl_arn": {
		"depends_on":     [],
		"description":    "ARN of the redshift network ACL",
		"module_address": "module.vpc",
		"name":           "redshift_network_acl_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.redshift",
			],
		},
	},
	"module.vpc:redshift_network_acl_id": {
		"depends_on":     [],
		"description":    "ID of the redshift network ACL",
		"module_address": "module.vpc",
		"name":           "redshift_network_acl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_network_acl.redshift",
			],
		},
	},
	"module.vpc:redshift_public_route_table_association_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the public redshidt route table association",
		"module_address": "module.vpc",
		"name":           "redshift_public_route_table_association_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table_association.redshift_public",
			],
		},
	},
	"module.vpc:redshift_route_table_association_ids": {
		"depends_on":     [],
		"description":    "List of IDs of the redshift route table association",
		"module_address": "module.vpc",
		"name":           "redshift_route_table_association_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table_association.redshift",
			],
		},
	},
	"module.vpc:redshift_route_table_ids": {
		"depends_on":     [],
		"description":    "List of IDs of redshift route tables",
		"module_address": "module.vpc",
		"name":           "redshift_route_table_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_route_table.redshift",
				"aws_route_table.redshift",
				"aws_route_table.private",
			],
		},
	},
	"module.vpc:redshift_subnet_arns": {
		"depends_on":     [],
		"description":    "List of ARNs of redshift subnets",
		"module_address": "module.vpc",
		"name":           "redshift_subnet_arns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.redshift",
			],
		},
	},
	"module.vpc:redshift_subnet_group": {
		"depends_on":     [],
		"description":    "ID of redshift subnet group",
		"module_address": "module.vpc",
		"name":           "redshift_subnet_group",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_redshift_subnet_group.redshift",
			],
		},
	},
	"module.vpc:redshift_subnets": {
		"depends_on":     [],
		"description":    "List of IDs of redshift subnets",
		"module_address": "module.vpc",
		"name":           "redshift_subnets",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.redshift",
			],
		},
	},
	"module.vpc:redshift_subnets_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of cidr_blocks of redshift subnets",
		"module_address": "module.vpc",
		"name":           "redshift_subnets_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.redshift",
			],
		},
	},
	"module.vpc:redshift_subnets_ipv6_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
		"module_address": "module.vpc",
		"name":           "redshift_subnets_ipv6_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_subnet.redshift",
			],
		},
	},
	"module.vpc:this_customer_gateway": {
		"depends_on":     [],
		"description":    "Map of Customer Gateway attributes",
		"module_address": "module.vpc",
		"name":           "this_customer_gateway",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_customer_gateway.this",
			],
		},
	},
	"module.vpc:vgw_arn": {
		"depends_on":     [],
		"description":    "The ARN of the VPN Gateway",
		"module_address": "module.vpc",
		"name":           "vgw_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpn_gateway.this",
			],
		},
	},
	"module.vpc:vgw_id": {
		"depends_on":     [],
		"description":    "The ID of the VPN Gateway",
		"module_address": "module.vpc",
		"name":           "vgw_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpn_gateway.this",
				"aws_vpn_gateway_attachment.this",
			],
		},
	},
	"module.vpc:vpc_arn": {
		"depends_on":     [],
		"description":    "The ARN of the VPC",
		"module_address": "module.vpc",
		"name":           "vpc_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_cidr_block": {
		"depends_on":     [],
		"description":    "The CIDR block of the VPC",
		"module_address": "module.vpc",
		"name":           "vpc_cidr_block",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_enable_dns_hostnames": {
		"depends_on":     [],
		"description":    "Whether or not the VPC has DNS hostname support",
		"module_address": "module.vpc",
		"name":           "vpc_enable_dns_hostnames",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_enable_dns_support": {
		"depends_on":     [],
		"description":    "Whether or not the VPC has DNS support",
		"module_address": "module.vpc",
		"name":           "vpc_enable_dns_support",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_endpoint_access_analyzer_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Access Analyzer.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_access_analyzer_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.access_analyzer",
			],
		},
	},
	"module.vpc:vpc_endpoint_access_analyzer_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Access Analyzer",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_access_analyzer_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.access_analyzer",
			],
		},
	},
	"module.vpc:vpc_endpoint_access_analyzer_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Access Analyzer.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_access_analyzer_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.access_analyzer",
			],
		},
	},
	"module.vpc:vpc_endpoint_acm_pca_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for ACM PCA.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_acm_pca_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.acm_pca",
			],
		},
	},
	"module.vpc:vpc_endpoint_acm_pca_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for ACM PCA",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_acm_pca_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.acm_pca",
			],
		},
	},
	"module.vpc:vpc_endpoint_acm_pca_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for ACM PCA.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_acm_pca_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.acm_pca",
			],
		},
	},
	"module.vpc:vpc_endpoint_apigw_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for APIGW.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_apigw_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.apigw",
			],
		},
	},
	"module.vpc:vpc_endpoint_apigw_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for APIGW",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_apigw_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.apigw",
			],
		},
	},
	"module.vpc:vpc_endpoint_apigw_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for APIGW.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_apigw_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.apigw",
			],
		},
	},
	"module.vpc:vpc_endpoint_appmesh_envoy_management_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for AppMesh.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_appmesh_envoy_management_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.appmesh_envoy_management",
			],
		},
	},
	"module.vpc:vpc_endpoint_appmesh_envoy_management_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for AppMesh",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_appmesh_envoy_management_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.appmesh_envoy_management",
			],
		},
	},
	"module.vpc:vpc_endpoint_appmesh_envoy_management_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for AppMesh.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_appmesh_envoy_management_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.appmesh_envoy_management",
			],
		},
	},
	"module.vpc:vpc_endpoint_appstream_api_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for AppStream API.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_appstream_api_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.appstream_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_appstream_api_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for AppStream API",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_appstream_api_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.appstream_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_appstream_api_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for AppStream API.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_appstream_api_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.appstream_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_appstream_streaming_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for AppStream Streaming.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_appstream_streaming_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.appstream_streaming",
			],
		},
	},
	"module.vpc:vpc_endpoint_appstream_streaming_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for AppStream Streaming",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_appstream_streaming_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.appstream_streaming",
			],
		},
	},
	"module.vpc:vpc_endpoint_appstream_streaming_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for AppStream Streaming.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_appstream_streaming_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.appstream_streaming",
			],
		},
	},
	"module.vpc:vpc_endpoint_athena_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Athena.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_athena_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.athena",
			],
		},
	},
	"module.vpc:vpc_endpoint_athena_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Athena",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_athena_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.athena",
			],
		},
	},
	"module.vpc:vpc_endpoint_athena_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Athena.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_athena_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.athena",
			],
		},
	},
	"module.vpc:vpc_endpoint_auto_scaling_plans_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Auto Scaling Plans.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_auto_scaling_plans_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.auto_scaling_plans",
			],
		},
	},
	"module.vpc:vpc_endpoint_auto_scaling_plans_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Auto Scaling Plans",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_auto_scaling_plans_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.auto_scaling_plans",
			],
		},
	},
	"module.vpc:vpc_endpoint_auto_scaling_plans_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Auto Scaling Plans.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_auto_scaling_plans_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.auto_scaling_plans",
			],
		},
	},
	"module.vpc:vpc_endpoint_cloud_directory_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Cloud Directory.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_cloud_directory_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.cloud_directory",
			],
		},
	},
	"module.vpc:vpc_endpoint_cloud_directory_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Cloud Directory",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_cloud_directory_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.cloud_directory",
			],
		},
	},
	"module.vpc:vpc_endpoint_cloud_directory_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Cloud Directory.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_cloud_directory_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.cloud_directory",
			],
		},
	},
	"module.vpc:vpc_endpoint_cloudformation_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Cloudformation.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_cloudformation_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.cloudformation",
			],
		},
	},
	"module.vpc:vpc_endpoint_cloudformation_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Cloudformation",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_cloudformation_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.cloudformation",
			],
		},
	},
	"module.vpc:vpc_endpoint_cloudformation_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Cloudformation.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_cloudformation_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.cloudformation",
			],
		},
	},
	"module.vpc:vpc_endpoint_cloudtrail_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for CloudTrail.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_cloudtrail_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.cloudtrail",
			],
		},
	},
	"module.vpc:vpc_endpoint_cloudtrail_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for CloudTrail",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_cloudtrail_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.cloudtrail",
			],
		},
	},
	"module.vpc:vpc_endpoint_cloudtrail_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for CloudTrail.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_cloudtrail_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.cloudtrail",
			],
		},
	},
	"module.vpc:vpc_endpoint_codeartifact_api_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Codeartifact API.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codeartifact_api_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codeartifact_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_codeartifact_api_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Codeartifact API",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codeartifact_api_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codeartifact_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_codeartifact_api_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Codeartifact API.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codeartifact_api_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codeartifact_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_codeartifact_repositories_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Codeartifact repositories.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codeartifact_repositories_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codeartifact_repositories",
			],
		},
	},
	"module.vpc:vpc_endpoint_codeartifact_repositories_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Codeartifact repositories",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codeartifact_repositories_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codeartifact_repositories",
			],
		},
	},
	"module.vpc:vpc_endpoint_codeartifact_repositories_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Codeartifact repositories.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codeartifact_repositories_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codeartifact_repositories",
			],
		},
	},
	"module.vpc:vpc_endpoint_codebuild_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for codebuild.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codebuild_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codebuild",
			],
		},
	},
	"module.vpc:vpc_endpoint_codebuild_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for codebuild",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codebuild_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codebuild",
			],
		},
	},
	"module.vpc:vpc_endpoint_codebuild_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for codebuild.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codebuild_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codebuild",
			],
		},
	},
	"module.vpc:vpc_endpoint_codecommit_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for codecommit.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codecommit_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codecommit",
			],
		},
	},
	"module.vpc:vpc_endpoint_codecommit_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for codecommit",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codecommit_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codecommit",
			],
		},
	},
	"module.vpc:vpc_endpoint_codecommit_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for codecommit.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codecommit_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codecommit",
			],
		},
	},
	"module.vpc:vpc_endpoint_codepipeline_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for CodePipeline.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codepipeline_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codepipeline",
			],
		},
	},
	"module.vpc:vpc_endpoint_codepipeline_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for CodePipeline",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codepipeline_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codepipeline",
			],
		},
	},
	"module.vpc:vpc_endpoint_codepipeline_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for CodePipeline.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_codepipeline_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.codepipeline",
			],
		},
	},
	"module.vpc:vpc_endpoint_config_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for config.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_config_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.config",
			],
		},
	},
	"module.vpc:vpc_endpoint_config_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for config",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_config_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.config",
			],
		},
	},
	"module.vpc:vpc_endpoint_config_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for config.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_config_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.config",
			],
		},
	},
	"module.vpc:vpc_endpoint_datasync_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for DataSync.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_datasync_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.datasync",
			],
		},
	},
	"module.vpc:vpc_endpoint_datasync_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for DataSync",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_datasync_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.datasync",
			],
		},
	},
	"module.vpc:vpc_endpoint_datasync_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for DataSync.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_datasync_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.datasync",
			],
		},
	},
	"module.vpc:vpc_endpoint_dynamodb_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for DynamoDB",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_dynamodb_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.dynamodb",
			],
		},
	},
	"module.vpc:vpc_endpoint_dynamodb_pl_id": {
		"depends_on":     [],
		"description":    "The prefix list for the DynamoDB VPC endpoint.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_dynamodb_pl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.dynamodb",
			],
		},
	},
	"module.vpc:vpc_endpoint_ebs_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for EBS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ebs_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ebs",
			],
		},
	},
	"module.vpc:vpc_endpoint_ebs_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for EBS",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ebs_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ebs",
			],
		},
	},
	"module.vpc:vpc_endpoint_ebs_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for EBS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ebs_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ebs",
			],
		},
	},
	"module.vpc:vpc_endpoint_ec2_autoscaling_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for EC2 Autoscaling.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ec2_autoscaling_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ec2_autoscaling",
			],
		},
	},
	"module.vpc:vpc_endpoint_ec2_autoscaling_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for EC2 Autoscaling",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ec2_autoscaling_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ec2_autoscaling",
			],
		},
	},
	"module.vpc:vpc_endpoint_ec2_autoscaling_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for EC2 Autoscaling",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ec2_autoscaling_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ec2_autoscaling",
			],
		},
	},
	"module.vpc:vpc_endpoint_ec2_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for EC2.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ec2_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ec2",
			],
		},
	},
	"module.vpc:vpc_endpoint_ec2_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for EC2",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ec2_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ec2",
			],
		},
	},
	"module.vpc:vpc_endpoint_ec2_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for EC2",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ec2_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ec2",
			],
		},
	},
	"module.vpc:vpc_endpoint_ec2messages_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for EC2MESSAGES.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ec2messages_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ec2messages",
			],
		},
	},
	"module.vpc:vpc_endpoint_ec2messages_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for EC2MESSAGES",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ec2messages_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ec2messages",
			],
		},
	},
	"module.vpc:vpc_endpoint_ec2messages_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for EC2MESSAGES",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ec2messages_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ec2messages",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecr_api_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for ECR API.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecr_api_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecr_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecr_api_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for ECR API",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecr_api_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecr_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecr_api_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for ECR API.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecr_api_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecr_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecr_dkr_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for ECR DKR.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecr_dkr_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecr_dkr",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecr_dkr_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for ECR DKR",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecr_dkr_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecr_dkr",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecr_dkr_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for ECR DKR.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecr_dkr_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecr_dkr",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecs_agent_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for ECS Agent.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecs_agent_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecs_agent",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecs_agent_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for ECS Agent",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecs_agent_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecs_agent",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecs_agent_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for ECS Agent.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecs_agent_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecs_agent",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecs_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for ECS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecs_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecs",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecs_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for ECS",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecs_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecs",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecs_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for ECS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecs_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecs",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecs_telemetry_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for ECS Telemetry.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecs_telemetry_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecs_telemetry",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecs_telemetry_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for ECS Telemetry",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecs_telemetry_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecs_telemetry",
			],
		},
	},
	"module.vpc:vpc_endpoint_ecs_telemetry_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for ECS Telemetry.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ecs_telemetry_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ecs_telemetry",
			],
		},
	},
	"module.vpc:vpc_endpoint_efs_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for EFS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_efs_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.efs",
			],
		},
	},
	"module.vpc:vpc_endpoint_efs_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for EFS",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_efs_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.efs",
			],
		},
	},
	"module.vpc:vpc_endpoint_efs_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for EFS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_efs_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.efs",
			],
		},
	},
	"module.vpc:vpc_endpoint_elastic_inference_runtime_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Elastic Inference Runtime.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elastic_inference_runtime_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elastic_inference_runtime",
			],
		},
	},
	"module.vpc:vpc_endpoint_elastic_inference_runtime_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Elastic Inference Runtime",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elastic_inference_runtime_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elastic_inference_runtime",
			],
		},
	},
	"module.vpc:vpc_endpoint_elastic_inference_runtime_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Elastic Inference Runtime.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elastic_inference_runtime_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elastic_inference_runtime",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticbeanstalk_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Elastic Beanstalk.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticbeanstalk_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elasticbeanstalk",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticbeanstalk_health_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Elastic Beanstalk Health.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticbeanstalk_health_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elasticbeanstalk_health",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticbeanstalk_health_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Elastic Beanstalk Health",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticbeanstalk_health_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elasticbeanstalk_health",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticbeanstalk_health_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Elastic Beanstalk Health.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticbeanstalk_health_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elasticbeanstalk_health",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticbeanstalk_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Elastic Beanstalk",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticbeanstalk_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elasticbeanstalk",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticbeanstalk_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Elastic Beanstalk.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticbeanstalk_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elasticbeanstalk",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticloadbalancing_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Elastic Load Balancing.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticloadbalancing_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elasticloadbalancing",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticloadbalancing_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Elastic Load Balancing",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticloadbalancing_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elasticloadbalancing",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticloadbalancing_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Elastic Load Balancing.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticloadbalancing_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.elasticloadbalancing",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticmapreduce_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for EMR.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticmapreduce_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.emr",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticmapreduce_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for EMR",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticmapreduce_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.emr",
			],
		},
	},
	"module.vpc:vpc_endpoint_elasticmapreduce_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for EMR.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_elasticmapreduce_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.emr",
			],
		},
	},
	"module.vpc:vpc_endpoint_events_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for CloudWatch Events.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_events_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.events",
			],
		},
	},
	"module.vpc:vpc_endpoint_events_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for CloudWatch Events",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_events_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.events",
			],
		},
	},
	"module.vpc:vpc_endpoint_events_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for CloudWatch Events.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_events_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.events",
			],
		},
	},
	"module.vpc:vpc_endpoint_git_codecommit_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for git_codecommit.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_git_codecommit_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.git_codecommit",
			],
		},
	},
	"module.vpc:vpc_endpoint_git_codecommit_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for git_codecommit",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_git_codecommit_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.git_codecommit",
			],
		},
	},
	"module.vpc:vpc_endpoint_git_codecommit_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for git_codecommit.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_git_codecommit_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.git_codecommit",
			],
		},
	},
	"module.vpc:vpc_endpoint_glue_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Glue.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_glue_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.glue",
			],
		},
	},
	"module.vpc:vpc_endpoint_glue_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Glue",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_glue_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.glue",
			],
		},
	},
	"module.vpc:vpc_endpoint_glue_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Glue.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_glue_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.glue",
			],
		},
	},
	"module.vpc:vpc_endpoint_kinesis_firehose_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Kinesis Firehose.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_kinesis_firehose_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.kinesis_firehose",
			],
		},
	},
	"module.vpc:vpc_endpoint_kinesis_firehose_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Kinesis Firehose",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_kinesis_firehose_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.kinesis_firehose",
			],
		},
	},
	"module.vpc:vpc_endpoint_kinesis_firehose_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Kinesis Firehose.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_kinesis_firehose_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.kinesis_firehose",
			],
		},
	},
	"module.vpc:vpc_endpoint_kinesis_streams_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Kinesis Streams.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_kinesis_streams_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.kinesis_streams",
			],
		},
	},
	"module.vpc:vpc_endpoint_kinesis_streams_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Kinesis Streams",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_kinesis_streams_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.kinesis_streams",
			],
		},
	},
	"module.vpc:vpc_endpoint_kinesis_streams_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Kinesis Streams.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_kinesis_streams_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.kinesis_streams",
			],
		},
	},
	"module.vpc:vpc_endpoint_kms_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for KMS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_kms_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.kms",
			],
		},
	},
	"module.vpc:vpc_endpoint_kms_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for KMS",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_kms_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.kms",
			],
		},
	},
	"module.vpc:vpc_endpoint_kms_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for KMS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_kms_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.kms",
			],
		},
	},
	"module.vpc:vpc_endpoint_lambda_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Lambda.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_lambda_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.lambda",
			],
		},
	},
	"module.vpc:vpc_endpoint_lambda_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Lambda",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_lambda_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.lambda",
			],
		},
	},
	"module.vpc:vpc_endpoint_lambda_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Lambda.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_lambda_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.lambda",
			],
		},
	},
	"module.vpc:vpc_endpoint_logs_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for CloudWatch Logs.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_logs_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.logs",
			],
		},
	},
	"module.vpc:vpc_endpoint_logs_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for CloudWatch Logs",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_logs_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.logs",
			],
		},
	},
	"module.vpc:vpc_endpoint_logs_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for CloudWatch Logs.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_logs_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.logs",
			],
		},
	},
	"module.vpc:vpc_endpoint_monitoring_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for CloudWatch Monitoring.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_monitoring_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.monitoring",
			],
		},
	},
	"module.vpc:vpc_endpoint_monitoring_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for CloudWatch Monitoring",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_monitoring_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.monitoring",
			],
		},
	},
	"module.vpc:vpc_endpoint_monitoring_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for CloudWatch Monitoring.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_monitoring_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.monitoring",
			],
		},
	},
	"module.vpc:vpc_endpoint_qldb_session_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for QLDB Session.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_qldb_session_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.qldb_session",
			],
		},
	},
	"module.vpc:vpc_endpoint_qldb_session_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for QLDB Session",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_qldb_session_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.qldb_session",
			],
		},
	},
	"module.vpc:vpc_endpoint_qldb_session_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for QLDB Session.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_qldb_session_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.qldb_session",
			],
		},
	},
	"module.vpc:vpc_endpoint_rekognition_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Rekognition.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_rekognition_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.rekognition",
			],
		},
	},
	"module.vpc:vpc_endpoint_rekognition_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Rekognition",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_rekognition_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.rekognition",
			],
		},
	},
	"module.vpc:vpc_endpoint_rekognition_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Rekognition.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_rekognition_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.rekognition",
			],
		},
	},
	"module.vpc:vpc_endpoint_s3_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for S3",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_s3_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.s3",
			],
		},
	},
	"module.vpc:vpc_endpoint_s3_pl_id": {
		"depends_on":     [],
		"description":    "The prefix list for the S3 VPC endpoint.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_s3_pl_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.s3",
			],
		},
	},
	"module.vpc:vpc_endpoint_sagemaker_api_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for SageMaker API.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sagemaker_api_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sagemaker_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_sagemaker_api_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for SageMaker API",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sagemaker_api_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sagemaker_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_sagemaker_api_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for SageMaker API.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sagemaker_api_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sagemaker_api",
			],
		},
	},
	"module.vpc:vpc_endpoint_sagemaker_runtime_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for SageMaker Runtime.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sagemaker_runtime_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sagemaker_runtime",
			],
		},
	},
	"module.vpc:vpc_endpoint_sagemaker_runtime_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for SageMaker Runtime",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sagemaker_runtime_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sagemaker_runtime",
			],
		},
	},
	"module.vpc:vpc_endpoint_sagemaker_runtime_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for SageMaker Runtime.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sagemaker_runtime_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sagemaker_runtime",
			],
		},
	},
	"module.vpc:vpc_endpoint_secretsmanager_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for secretsmanager.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_secretsmanager_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.secretsmanager",
			],
		},
	},
	"module.vpc:vpc_endpoint_secretsmanager_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for secretsmanager",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_secretsmanager_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.secretsmanager",
			],
		},
	},
	"module.vpc:vpc_endpoint_secretsmanager_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for secretsmanager.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_secretsmanager_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.secretsmanager",
			],
		},
	},
	"module.vpc:vpc_endpoint_servicecatalog_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Service Catalog.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_servicecatalog_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.servicecatalog",
			],
		},
	},
	"module.vpc:vpc_endpoint_servicecatalog_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Service Catalog",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_servicecatalog_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.servicecatalog",
			],
		},
	},
	"module.vpc:vpc_endpoint_servicecatalog_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Service Catalog.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_servicecatalog_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.servicecatalog",
			],
		},
	},
	"module.vpc:vpc_endpoint_ses_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for SES.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ses_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ses",
			],
		},
	},
	"module.vpc:vpc_endpoint_ses_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for SES",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ses_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ses",
			],
		},
	},
	"module.vpc:vpc_endpoint_ses_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for SES.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ses_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ses",
			],
		},
	},
	"module.vpc:vpc_endpoint_sms_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for SMS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sms_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sms",
			],
		},
	},
	"module.vpc:vpc_endpoint_sms_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for SMS",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sms_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sms",
			],
		},
	},
	"module.vpc:vpc_endpoint_sms_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for SMS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sms_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sms",
			],
		},
	},
	"module.vpc:vpc_endpoint_sns_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for SNS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sns_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sns",
			],
		},
	},
	"module.vpc:vpc_endpoint_sns_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for SNS",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sns_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sns",
			],
		},
	},
	"module.vpc:vpc_endpoint_sns_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for SNS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sns_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sns",
			],
		},
	},
	"module.vpc:vpc_endpoint_sqs_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for SQS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sqs_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sqs",
			],
		},
	},
	"module.vpc:vpc_endpoint_sqs_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for SQS",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sqs_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sqs",
			],
		},
	},
	"module.vpc:vpc_endpoint_sqs_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for SQS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sqs_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sqs",
			],
		},
	},
	"module.vpc:vpc_endpoint_ssm_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for SSM.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ssm_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ssm",
			],
		},
	},
	"module.vpc:vpc_endpoint_ssm_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for SSM",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ssm_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ssm",
			],
		},
	},
	"module.vpc:vpc_endpoint_ssm_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for SSM.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ssm_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ssm",
			],
		},
	},
	"module.vpc:vpc_endpoint_ssmmessages_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for SSMMESSAGES.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ssmmessages_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ssmmessages",
			],
		},
	},
	"module.vpc:vpc_endpoint_ssmmessages_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for SSMMESSAGES",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ssmmessages_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ssmmessages",
			],
		},
	},
	"module.vpc:vpc_endpoint_ssmmessages_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for SSMMESSAGES.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_ssmmessages_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.ssmmessages",
			],
		},
	},
	"module.vpc:vpc_endpoint_states_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Step Function.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_states_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.states",
			],
		},
	},
	"module.vpc:vpc_endpoint_states_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Step Function",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_states_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.states",
			],
		},
	},
	"module.vpc:vpc_endpoint_states_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Step Function.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_states_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.states",
			],
		},
	},
	"module.vpc:vpc_endpoint_storagegateway_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Storage Gateway.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_storagegateway_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.storagegateway",
			],
		},
	},
	"module.vpc:vpc_endpoint_storagegateway_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Storage Gateway",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_storagegateway_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.storagegateway",
			],
		},
	},
	"module.vpc:vpc_endpoint_storagegateway_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Storage Gateway.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_storagegateway_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.storagegateway",
			],
		},
	},
	"module.vpc:vpc_endpoint_sts_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for STS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sts_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sts",
			],
		},
	},
	"module.vpc:vpc_endpoint_sts_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for STS",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sts_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sts",
			],
		},
	},
	"module.vpc:vpc_endpoint_sts_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for STS.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_sts_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.sts",
			],
		},
	},
	"module.vpc:vpc_endpoint_textract_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Textract.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_textract_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.textract",
			],
		},
	},
	"module.vpc:vpc_endpoint_textract_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Textract",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_textract_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.textract",
			],
		},
	},
	"module.vpc:vpc_endpoint_textract_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Textract.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_textract_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.textract",
			],
		},
	},
	"module.vpc:vpc_endpoint_transfer_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Transfer.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_transfer_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.transfer",
			],
		},
	},
	"module.vpc:vpc_endpoint_transfer_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Transfer",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_transfer_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.transfer",
			],
		},
	},
	"module.vpc:vpc_endpoint_transfer_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Transfer.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_transfer_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.transfer",
			],
		},
	},
	"module.vpc:vpc_endpoint_transferserver_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for transferserver.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_transferserver_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.transferserver",
			],
		},
	},
	"module.vpc:vpc_endpoint_transferserver_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for transferserver",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_transferserver_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.transferserver",
			],
		},
	},
	"module.vpc:vpc_endpoint_transferserver_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for transferserver",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_transferserver_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.transferserver",
			],
		},
	},
	"module.vpc:vpc_endpoint_workspaces_dns_entry": {
		"depends_on":     [],
		"description":    "The DNS entries for the VPC Endpoint for Workspaces.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_workspaces_dns_entry",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.workspaces",
			],
		},
	},
	"module.vpc:vpc_endpoint_workspaces_id": {
		"depends_on":     [],
		"description":    "The ID of VPC endpoint for Workspaces",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_workspaces_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.workspaces",
			],
		},
	},
	"module.vpc:vpc_endpoint_workspaces_network_interface_ids": {
		"depends_on":     [],
		"description":    "One or more network interfaces for the VPC Endpoint for Workspaces.",
		"module_address": "module.vpc",
		"name":           "vpc_endpoint_workspaces_network_interface_ids",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_endpoint.workspaces",
			],
		},
	},
	"module.vpc:vpc_flow_log_cloudwatch_iam_role_arn": {
		"depends_on":     [],
		"description":    "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
		"module_address": "module.vpc",
		"name":           "vpc_flow_log_cloudwatch_iam_role_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"local.flow_log_iam_role_arn",
			],
		},
	},
	"module.vpc:vpc_flow_log_destination_arn": {
		"depends_on":     [],
		"description":    "The ARN of the destination for VPC Flow Logs",
		"module_address": "module.vpc",
		"name":           "vpc_flow_log_destination_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"local.flow_log_destination_arn",
			],
		},
	},
	"module.vpc:vpc_flow_log_destination_type": {
		"depends_on":     [],
		"description":    "The type of the destination for VPC Flow Logs",
		"module_address": "module.vpc",
		"name":           "vpc_flow_log_destination_type",
		"sensitive":      false,
		"value": {
			"references": [
				"var.flow_log_destination_type",
			],
		},
	},
	"module.vpc:vpc_flow_log_id": {
		"depends_on":     [],
		"description":    "The ID of the Flow Log resource",
		"module_address": "module.vpc",
		"name":           "vpc_flow_log_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_flow_log.this",
			],
		},
	},
	"module.vpc:vpc_id": {
		"depends_on":     [],
		"description":    "The ID of the VPC",
		"module_address": "module.vpc",
		"name":           "vpc_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_instance_tenancy": {
		"depends_on":     [],
		"description":    "Tenancy of instances spin up within VPC",
		"module_address": "module.vpc",
		"name":           "vpc_instance_tenancy",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_ipv6_association_id": {
		"depends_on":     [],
		"description":    "The association ID for the IPv6 CIDR block",
		"module_address": "module.vpc",
		"name":           "vpc_ipv6_association_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_ipv6_cidr_block": {
		"depends_on":     [],
		"description":    "The IPv6 CIDR block",
		"module_address": "module.vpc",
		"name":           "vpc_ipv6_cidr_block",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_main_route_table_id": {
		"depends_on":     [],
		"description":    "The ID of the main route table associated with this VPC",
		"module_address": "module.vpc",
		"name":           "vpc_main_route_table_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_owner_id": {
		"depends_on":     [],
		"description":    "The ID of the AWS account that owns the VPC",
		"module_address": "module.vpc",
		"name":           "vpc_owner_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc.this",
			],
		},
	},
	"module.vpc:vpc_secondary_cidr_blocks": {
		"depends_on":     [],
		"description":    "List of secondary CIDR blocks of the VPC",
		"module_address": "module.vpc",
		"name":           "vpc_secondary_cidr_blocks",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_vpc_ipv4_cidr_block_association.this",
			],
		},
	},
	"public_dns_name": {
		"depends_on":     [],
		"description":    "Public DNS names of the load balancer for this project",
		"module_address": "",
		"name":           "public_dns_name",
		"sensitive":      false,
		"value": {
			"references": [
				"module.elb_http.this_elb_dns_name",
				"module.elb_http",
			],
		},
	},
}

module_calls = {
	"app_security_group": {
		"config": {
			"description": {
				"constant_value": "Security group for web-servers with HTTP ports open within VPC",
			},
			"ingress_cidr_blocks": {
				"references": [
					"module.vpc.public_subnets_cidr_blocks",
					"module.vpc",
				],
			},
			"name": {
				"constant_value": "web-sg-project-alpha-dev",
			},
			"tags": {
				"constant_value": {
					"environment": "development",
					"project":     "project-alpha",
				},
			},
			"vpc_id": {
				"references": [
					"module.vpc.vpc_id",
					"module.vpc",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "",
		"name":               "app_security_group",
		"source":             "terraform-aws-modules/security-group/aws//modules/web",
		"version_constraint": "3.17.0",
	},
	"ec2_instances": {
		"config": {
			"instance_count": {
				"references": [
					"var.instance_count",
				],
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"security_group_ids": {
				"references": [
					"module.app_security_group.this_security_group_id",
					"module.app_security_group",
				],
			},
			"subnet_ids": {
				"references": [
					"module.vpc.private_subnets",
					"module.vpc",
				],
			},
			"tags": {
				"constant_value": {
					"environment": "development",
					"project":     "project-alpha",
				},
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "",
		"name":               "ec2_instances",
		"source":             "./modules/aws-instance",
		"version_constraint": "",
	},
	"elb_http": {
		"config": {
			"health_check": {
				"constant_value": {
					"healthy_threshold":   3,
					"interval":            10,
					"target":              "HTTP:80/index.html",
					"timeout":             5,
					"unhealthy_threshold": 10,
				},
			},
			"instances": {
				"references": [
					"module.ec2_instances.instance_ids",
					"module.ec2_instances",
				],
			},
			"internal": {
				"constant_value": false,
			},
			"listener": {
				"constant_value": [
					{
						"instance_port":     "80",
						"instance_protocol": "HTTP",
						"lb_port":           "80",
						"lb_protocol":       "HTTP",
					},
				],
			},
			"name": {
				"references": [
					"random_string.lb_id.result",
					"random_string.lb_id",
				],
			},
			"number_of_instances": {
				"references": [
					"module.ec2_instances.instance_ids",
					"module.ec2_instances",
				],
			},
			"security_groups": {
				"references": [
					"module.lb_security_group.this_security_group_id",
					"module.lb_security_group",
				],
			},
			"subnets": {
				"references": [
					"module.vpc.public_subnets",
					"module.vpc",
				],
			},
			"tags": {
				"constant_value": {
					"environment": "development",
					"project":     "project-alpha",
				},
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "",
		"name":               "elb_http",
		"source":             "terraform-aws-modules/elb/aws",
		"version_constraint": "2.4.0",
	},
	"lb_security_group": {
		"config": {
			"description": {
				"constant_value": "Security group for load balancer with HTTP ports open within VPC",
			},
			"ingress_cidr_blocks": {
				"constant_value": [
					"10.0.0.0/16",
				],
			},
			"ingress_with_cidr_blocks": {
				"constant_value": [
					{
						"cidr_blocks": "10.0.0.0/16",
						"description": "SSH restricted to internal network",
						"from_port":   22,
						"protocol":    "tcp",
						"to_port":     22,
					},
				],
			},
			"name": {
				"constant_value": "lb-sg-project-alpha-dev",
			},
			"tags": {
				"constant_value": {
					"environment": "development",
					"project":     "project-alpha",
				},
			},
			"vpc_id": {
				"references": [
					"module.vpc.vpc_id",
					"module.vpc",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "",
		"name":               "lb_security_group",
		"source":             "terraform-aws-modules/security-group/aws//modules/web",
		"version_constraint": "3.17.0",
	},
	"module.app_security_group:sg": {
		"config": {
			"computed_egress_rules": {
				"references": [
					"var.auto_computed_egress_rules",
					"var.computed_egress_rules",
				],
			},
			"computed_egress_with_cidr_blocks": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
				],
			},
			"computed_egress_with_ipv6_cidr_blocks": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
				],
			},
			"computed_egress_with_self": {
				"references": [
					"var.auto_computed_egress_with_self",
					"var.computed_egress_with_self",
				],
			},
			"computed_egress_with_source_security_group_id": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
				],
			},
			"computed_ingress_rules": {
				"references": [
					"var.auto_computed_ingress_rules",
					"var.computed_ingress_rules",
				],
			},
			"computed_ingress_with_cidr_blocks": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
				],
			},
			"computed_ingress_with_ipv6_cidr_blocks": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
				],
			},
			"computed_ingress_with_self": {
				"references": [
					"var.auto_computed_ingress_with_self",
					"var.computed_ingress_with_self",
				],
			},
			"computed_ingress_with_source_security_group_id": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
				],
			},
			"create": {
				"references": [
					"var.create",
				],
			},
			"description": {
				"references": [
					"var.description",
				],
			},
			"egress_cidr_blocks": {
				"references": [
					"var.egress_cidr_blocks",
				],
			},
			"egress_ipv6_cidr_blocks": {
				"references": [
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"egress_prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"egress_rules": {
				"references": [
					"var.auto_egress_rules",
					"var.egress_rules",
				],
			},
			"egress_with_cidr_blocks": {
				"references": [
					"var.egress_with_cidr_blocks",
				],
			},
			"egress_with_ipv6_cidr_blocks": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
				],
			},
			"egress_with_self": {
				"references": [
					"var.auto_egress_with_self",
					"var.egress_with_self",
				],
			},
			"egress_with_source_security_group_id": {
				"references": [
					"var.egress_with_source_security_group_id",
				],
			},
			"ingress_cidr_blocks": {
				"references": [
					"var.ingress_cidr_blocks",
				],
			},
			"ingress_ipv6_cidr_blocks": {
				"references": [
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"ingress_prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"ingress_rules": {
				"references": [
					"var.auto_ingress_rules",
					"var.ingress_rules",
				],
			},
			"ingress_with_cidr_blocks": {
				"references": [
					"var.ingress_with_cidr_blocks",
				],
			},
			"ingress_with_ipv6_cidr_blocks": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
				],
			},
			"ingress_with_self": {
				"references": [
					"var.auto_ingress_with_self",
					"var.ingress_with_self",
				],
			},
			"ingress_with_source_security_group_id": {
				"references": [
					"var.ingress_with_source_security_group_id",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"number_of_computed_egress_rules": {
				"references": [
					"var.auto_number_of_computed_egress_rules",
					"var.number_of_computed_egress_rules",
				],
			},
			"number_of_computed_egress_with_cidr_blocks": {
				"references": [
					"var.number_of_computed_egress_with_cidr_blocks",
				],
			},
			"number_of_computed_egress_with_ipv6_cidr_blocks": {
				"references": [
					"var.number_of_computed_egress_with_ipv6_cidr_blocks",
				],
			},
			"number_of_computed_egress_with_self": {
				"references": [
					"var.auto_number_of_computed_egress_with_self",
					"var.number_of_computed_egress_with_self",
				],
			},
			"number_of_computed_egress_with_source_security_group_id": {
				"references": [
					"var.number_of_computed_egress_with_source_security_group_id",
				],
			},
			"number_of_computed_ingress_rules": {
				"references": [
					"var.auto_number_of_computed_ingress_rules",
					"var.number_of_computed_ingress_rules",
				],
			},
			"number_of_computed_ingress_with_cidr_blocks": {
				"references": [
					"var.number_of_computed_ingress_with_cidr_blocks",
				],
			},
			"number_of_computed_ingress_with_ipv6_cidr_blocks": {
				"references": [
					"var.number_of_computed_ingress_with_ipv6_cidr_blocks",
				],
			},
			"number_of_computed_ingress_with_self": {
				"references": [
					"var.auto_number_of_computed_ingress_with_self",
					"var.number_of_computed_ingress_with_self",
				],
			},
			"number_of_computed_ingress_with_source_security_group_id": {
				"references": [
					"var.number_of_computed_ingress_with_source_security_group_id",
				],
			},
			"revoke_rules_on_delete": {
				"references": [
					"var.revoke_rules_on_delete",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
			"use_name_prefix": {
				"references": [
					"var.use_name_prefix",
				],
			},
			"vpc_id": {
				"references": [
					"var.vpc_id",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.app_security_group",
		"name":               "sg",
		"source":             "../../",
		"version_constraint": "",
	},
	"module.elb_http:elb": {
		"config": {
			"access_logs": {
				"references": [
					"var.access_logs",
				],
			},
			"connection_draining": {
				"references": [
					"var.connection_draining",
				],
			},
			"connection_draining_timeout": {
				"references": [
					"var.connection_draining_timeout",
				],
			},
			"create_elb": {
				"references": [
					"var.create_elb",
				],
			},
			"cross_zone_load_balancing": {
				"references": [
					"var.cross_zone_load_balancing",
				],
			},
			"health_check": {
				"references": [
					"var.health_check",
				],
			},
			"idle_timeout": {
				"references": [
					"var.idle_timeout",
				],
			},
			"internal": {
				"references": [
					"var.internal",
				],
			},
			"listener": {
				"references": [
					"var.listener",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"name_prefix": {
				"references": [
					"var.name_prefix",
				],
			},
			"security_groups": {
				"references": [
					"var.security_groups",
				],
			},
			"subnets": {
				"references": [
					"var.subnets",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.name",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.elb_http",
		"name":               "elb",
		"source":             "./modules/elb",
		"version_constraint": "",
	},
	"module.elb_http:elb_attachment": {
		"config": {
			"create_attachment": {
				"references": [
					"var.create_elb",
				],
			},
			"elb": {
				"references": [
					"module.elb.this_elb_id",
					"module.elb",
				],
			},
			"instances": {
				"references": [
					"var.instances",
				],
			},
			"number_of_instances": {
				"references": [
					"var.number_of_instances",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.elb_http",
		"name":               "elb_attachment",
		"source":             "./modules/elb_attachment",
		"version_constraint": "",
	},
	"module.lb_security_group:sg": {
		"config": {
			"computed_egress_rules": {
				"references": [
					"var.auto_computed_egress_rules",
					"var.computed_egress_rules",
				],
			},
			"computed_egress_with_cidr_blocks": {
				"references": [
					"var.computed_egress_with_cidr_blocks",
				],
			},
			"computed_egress_with_ipv6_cidr_blocks": {
				"references": [
					"var.computed_egress_with_ipv6_cidr_blocks",
				],
			},
			"computed_egress_with_self": {
				"references": [
					"var.auto_computed_egress_with_self",
					"var.computed_egress_with_self",
				],
			},
			"computed_egress_with_source_security_group_id": {
				"references": [
					"var.computed_egress_with_source_security_group_id",
				],
			},
			"computed_ingress_rules": {
				"references": [
					"var.auto_computed_ingress_rules",
					"var.computed_ingress_rules",
				],
			},
			"computed_ingress_with_cidr_blocks": {
				"references": [
					"var.computed_ingress_with_cidr_blocks",
				],
			},
			"computed_ingress_with_ipv6_cidr_blocks": {
				"references": [
					"var.computed_ingress_with_ipv6_cidr_blocks",
				],
			},
			"computed_ingress_with_self": {
				"references": [
					"var.auto_computed_ingress_with_self",
					"var.computed_ingress_with_self",
				],
			},
			"computed_ingress_with_source_security_group_id": {
				"references": [
					"var.computed_ingress_with_source_security_group_id",
				],
			},
			"create": {
				"references": [
					"var.create",
				],
			},
			"description": {
				"references": [
					"var.description",
				],
			},
			"egress_cidr_blocks": {
				"references": [
					"var.egress_cidr_blocks",
				],
			},
			"egress_ipv6_cidr_blocks": {
				"references": [
					"var.egress_ipv6_cidr_blocks",
				],
			},
			"egress_prefix_list_ids": {
				"references": [
					"var.egress_prefix_list_ids",
				],
			},
			"egress_rules": {
				"references": [
					"var.auto_egress_rules",
					"var.egress_rules",
				],
			},
			"egress_with_cidr_blocks": {
				"references": [
					"var.egress_with_cidr_blocks",
				],
			},
			"egress_with_ipv6_cidr_blocks": {
				"references": [
					"var.egress_with_ipv6_cidr_blocks",
				],
			},
			"egress_with_self": {
				"references": [
					"var.auto_egress_with_self",
					"var.egress_with_self",
				],
			},
			"egress_with_source_security_group_id": {
				"references": [
					"var.egress_with_source_security_group_id",
				],
			},
			"ingress_cidr_blocks": {
				"references": [
					"var.ingress_cidr_blocks",
				],
			},
			"ingress_ipv6_cidr_blocks": {
				"references": [
					"var.ingress_ipv6_cidr_blocks",
				],
			},
			"ingress_prefix_list_ids": {
				"references": [
					"var.ingress_prefix_list_ids",
				],
			},
			"ingress_rules": {
				"references": [
					"var.auto_ingress_rules",
					"var.ingress_rules",
				],
			},
			"ingress_with_cidr_blocks": {
				"references": [
					"var.ingress_with_cidr_blocks",
				],
			},
			"ingress_with_ipv6_cidr_blocks": {
				"references": [
					"var.ingress_with_ipv6_cidr_blocks",
				],
			},
			"ingress_with_self": {
				"references": [
					"var.auto_ingress_with_self",
					"var.ingress_with_self",
				],
			},
			"ingress_with_source_security_group_id": {
				"references": [
					"var.ingress_with_source_security_group_id",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"number_of_computed_egress_rules": {
				"references": [
					"var.auto_number_of_computed_egress_rules",
					"var.number_of_computed_egress_rules",
				],
			},
			"number_of_computed_egress_with_cidr_blocks": {
				"references": [
					"var.number_of_computed_egress_with_cidr_blocks",
				],
			},
			"number_of_computed_egress_with_ipv6_cidr_blocks": {
				"references": [
					"var.number_of_computed_egress_with_ipv6_cidr_blocks",
				],
			},
			"number_of_computed_egress_with_self": {
				"references": [
					"var.auto_number_of_computed_egress_with_self",
					"var.number_of_computed_egress_with_self",
				],
			},
			"number_of_computed_egress_with_source_security_group_id": {
				"references": [
					"var.number_of_computed_egress_with_source_security_group_id",
				],
			},
			"number_of_computed_ingress_rules": {
				"references": [
					"var.auto_number_of_computed_ingress_rules",
					"var.number_of_computed_ingress_rules",
				],
			},
			"number_of_computed_ingress_with_cidr_blocks": {
				"references": [
					"var.number_of_computed_ingress_with_cidr_blocks",
				],
			},
			"number_of_computed_ingress_with_ipv6_cidr_blocks": {
				"references": [
					"var.number_of_computed_ingress_with_ipv6_cidr_blocks",
				],
			},
			"number_of_computed_ingress_with_self": {
				"references": [
					"var.auto_number_of_computed_ingress_with_self",
					"var.number_of_computed_ingress_with_self",
				],
			},
			"number_of_computed_ingress_with_source_security_group_id": {
				"references": [
					"var.number_of_computed_ingress_with_source_security_group_id",
				],
			},
			"revoke_rules_on_delete": {
				"references": [
					"var.revoke_rules_on_delete",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
			"use_name_prefix": {
				"references": [
					"var.use_name_prefix",
				],
			},
			"vpc_id": {
				"references": [
					"var.vpc_id",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.lb_security_group",
		"name":               "sg",
		"source":             "../../",
		"version_constraint": "",
	},
	"vpc": {
		"config": {
			"azs": {
				"references": [
					"data.aws_availability_zones.available.names",
					"data.aws_availability_zones.available",
				],
			},
			"cidr": {
				"constant_value": "10.0.0.0/16",
			},
			"enable_nat_gateway": {
				"constant_value": true,
			},
			"enable_vpn_gateway": {
				"constant_value": false,
			},
			"private_subnets": {
				"constant_value": [
					"10.0.101.0/24",
					"10.0.102.0/24",
				],
			},
			"public_subnets": {
				"constant_value": [
					"10.0.1.0/24",
					"10.0.2.0/24",
				],
			},
			"tags": {
				"constant_value": {
					"environment": "development",
					"project":     "project-alpha",
				},
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "",
		"name":               "vpc",
		"source":             "terraform-aws-modules/vpc/aws",
		"version_constraint": "2.64.0",
	},
}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
